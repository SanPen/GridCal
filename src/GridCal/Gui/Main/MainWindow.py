# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'MainWindow.ui'
##
## Created by: Qt User Interface Compiler version 6.7.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QCheckBox, QComboBox,
    QDateTimeEdit, QDoubleSpinBox, QFormLayout, QFrame,
    QGridLayout, QGroupBox, QHBoxLayout, QHeaderView,
    QLabel, QLineEdit, QListView, QMainWindow,
    QMenu, QMenuBar, QPlainTextEdit, QProgressBar,
    QPushButton, QRadioButton, QSizePolicy, QSlider,
    QSpacerItem, QSpinBox, QSplitter, QTabWidget,
    QTableView, QTextEdit, QToolBar, QTreeView,
    QVBoxLayout, QWidget)
from .icons_rc import *

class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        if not mainWindow.objectName():
            mainWindow.setObjectName(u"mainWindow")
        mainWindow.resize(1198, 742)
        mainWindow.setBaseSize(QSize(0, 0))
        font = QFont()
        font.setPointSize(10)
        mainWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u":/Program icon/GridCal_icon.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        mainWindow.setWindowIcon(icon)
        mainWindow.setAutoFillBackground(False)
        mainWindow.setIconSize(QSize(48, 48))
        mainWindow.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)
        mainWindow.setDocumentMode(False)
        mainWindow.setTabShape(QTabWidget.TabShape.Rounded)
        mainWindow.setDockNestingEnabled(False)
        mainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.actionOpen_file = QAction(mainWindow)
        self.actionOpen_file.setObjectName(u"actionOpen_file")
        icon1 = QIcon()
        icon1.addFile(u":/Icons/icons/loadc.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOpen_file.setIcon(icon1)
        self.actionOpen_file.setFont(font)
        self.actionSave = QAction(mainWindow)
        self.actionSave.setObjectName(u"actionSave")
        icon2 = QIcon()
        icon2.addFile(u":/Icons/icons/savec.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSave.setIcon(icon2)
        self.actionSave.setFont(font)
        self.actionTakePicture = QAction(mainWindow)
        self.actionTakePicture.setObjectName(u"actionTakePicture")
        icon3 = QIcon()
        icon3.addFile(u":/Icons/icons/picture.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionTakePicture.setIcon(icon3)
        self.actionTakePicture.setFont(font)
        self.actionNew_project = QAction(mainWindow)
        self.actionNew_project.setObjectName(u"actionNew_project")
        icon4 = QIcon()
        icon4.addFile(u":/Icons/icons/new2c.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNew_project.setIcon(icon4)
        self.actionNew_project.setFont(font)
        self.actionPower_flow = QAction(mainWindow)
        self.actionPower_flow.setObjectName(u"actionPower_flow")
        icon5 = QIcon()
        icon5.addFile(u":/Icons/icons/pf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPower_flow.setIcon(icon5)
        self.actionPower_flow.setFont(font)
        self.actionPower_flow.setMenuRole(QAction.MenuRole.TextHeuristicRole)
        self.actionPower_Flow_Time_series = QAction(mainWindow)
        self.actionPower_Flow_Time_series.setObjectName(u"actionPower_Flow_Time_series")
        icon6 = QIcon()
        icon6.addFile(u":/Icons/icons/pf_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPower_Flow_Time_series.setIcon(icon6)
        self.actionPower_Flow_Time_series.setFont(font)
        self.actionBigger_nodes = QAction(mainWindow)
        self.actionBigger_nodes.setObjectName(u"actionBigger_nodes")
        icon7 = QIcon()
        icon7.addFile(u":/Icons/icons/plus (gray).svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionBigger_nodes.setIcon(icon7)
        self.actionBigger_nodes.setFont(font)
        self.actionSmaller_nodes = QAction(mainWindow)
        self.actionSmaller_nodes.setObjectName(u"actionSmaller_nodes")
        icon8 = QIcon()
        icon8.addFile(u":/Icons/icons/minus (gray).svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSmaller_nodes.setIcon(icon8)
        self.actionSmaller_nodes.setFont(font)
        self.actionPower_flow_Stochastic = QAction(mainWindow)
        self.actionPower_flow_Stochastic.setObjectName(u"actionPower_flow_Stochastic")
        icon9 = QIcon()
        icon9.addFile(u":/Icons/icons/stochastic_pf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPower_flow_Stochastic.setIcon(icon9)
        self.actionPower_flow_Stochastic.setFont(font)
        self.actionVoltage_stability = QAction(mainWindow)
        self.actionVoltage_stability.setObjectName(u"actionVoltage_stability")
        icon10 = QIcon()
        icon10.addFile(u":/Icons/icons/continuation_power_flow.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionVoltage_stability.setIcon(icon10)
        self.actionVoltage_stability.setFont(font)
        self.actionAbout = QAction(mainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionAbout.setIcon(icon)
        self.actionAbout.setFont(font)
        self.actionCenter_view = QAction(mainWindow)
        self.actionCenter_view.setObjectName(u"actionCenter_view")
        icon11 = QIcon()
        icon11.addFile(u":/Icons/icons/resize.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionCenter_view.setIcon(icon11)
        self.actionCenter_view.setFont(font)
        self.actionShort_Circuit = QAction(mainWindow)
        self.actionShort_Circuit.setObjectName(u"actionShort_Circuit")
        icon12 = QIcon()
        icon12.addFile(u":/Icons/icons/short_circuit.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionShort_Circuit.setIcon(icon12)
        self.actionShort_Circuit.setFont(font)
        self.actionAutoatic_layout = QAction(mainWindow)
        self.actionAutoatic_layout.setObjectName(u"actionAutoatic_layout")
        icon13 = QIcon()
        icon13.addFile(u":/Icons/icons/automatic_layout.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAutoatic_layout.setIcon(icon13)
        self.actionAutoatic_layout.setFont(font)
        self.actionBlackout_cascade = QAction(mainWindow)
        self.actionBlackout_cascade.setObjectName(u"actionBlackout_cascade")
        self.actionBlackout_cascade.setCheckable(True)
        icon14 = QIcon()
        icon14.addFile(u":/Icons/icons/blackout.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionBlackout_cascade.setIcon(icon14)
        self.actionBlackout_cascade.setFont(font)
        self.actionOPF = QAction(mainWindow)
        self.actionOPF.setObjectName(u"actionOPF")
        icon15 = QIcon()
        icon15.addFile(u":/Icons/icons/dcopf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOPF.setIcon(icon15)
        self.actionOPF.setFont(font)
        self.actionOPF_time_series = QAction(mainWindow)
        self.actionOPF_time_series.setObjectName(u"actionOPF_time_series")
        icon16 = QIcon()
        icon16.addFile(u":/Icons/icons/dcopf_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOPF_time_series.setIcon(icon16)
        self.actionOPF_time_series.setFont(font)
        self.actionDetect_transformers = QAction(mainWindow)
        self.actionDetect_transformers.setObjectName(u"actionDetect_transformers")
        icon17 = QIcon()
        icon17.addFile(u":/Icons/icons/detect_tr.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDetect_transformers.setIcon(icon17)
        self.actionDetect_transformers.setFont(font)
        self.actionAuto_rate_branches = QAction(mainWindow)
        self.actionAuto_rate_branches.setObjectName(u"actionAuto_rate_branches")
        icon18 = QIcon()
        icon18.addFile(u":/Icons/icons/rate_br.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAuto_rate_branches.setIcon(icon18)
        self.actionAuto_rate_branches.setFont(font)
        self.actionExport_all_the_device_s_profiles = QAction(mainWindow)
        self.actionExport_all_the_device_s_profiles.setObjectName(u"actionExport_all_the_device_s_profiles")
        icon19 = QIcon()
        icon19.addFile(u":/Icons/icons/save.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionExport_all_the_device_s_profiles.setIcon(icon19)
        self.actionExport_all_the_device_s_profiles.setFont(font)
        self.actionStorage_location_suggestion = QAction(mainWindow)
        self.actionStorage_location_suggestion.setObjectName(u"actionStorage_location_suggestion")
        self.actionStorage_location_suggestion.setCheckable(True)
        icon20 = QIcon()
        icon20.addFile(u":/Icons/icons/storage_loc.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionStorage_location_suggestion.setIcon(icon20)
        self.actionStorage_location_suggestion.setFont(font)
        self.actionLaunch_data_analysis_tool = QAction(mainWindow)
        self.actionLaunch_data_analysis_tool.setObjectName(u"actionLaunch_data_analysis_tool")
        icon21 = QIcon()
        icon21.addFile(u":/Icons/icons/inputs_analysis 2.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionLaunch_data_analysis_tool.setIcon(icon21)
        self.actionLaunch_data_analysis_tool.setFont(font)
        self.actionOnline_documentation = QAction(mainWindow)
        self.actionOnline_documentation.setObjectName(u"actionOnline_documentation")
        icon22 = QIcon()
        icon22.addFile(u":/Icons/icons/new.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOnline_documentation.setIcon(icon22)
        self.actionOnline_documentation.setFont(font)
        self.actionExport_all_results = QAction(mainWindow)
        self.actionExport_all_results.setObjectName(u"actionExport_all_results")
        icon23 = QIcon()
        icon23.addFile(u":/Icons/icons/export_pickle.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionExport_all_results.setIcon(icon23)
        self.actionExport_all_results.setFont(font)
        self.actionSave_as = QAction(mainWindow)
        self.actionSave_as.setObjectName(u"actionSave_as")
        self.actionSave_as.setIcon(icon19)
        self.actionSave_as.setFont(font)
        self.actionDelete_selected = QAction(mainWindow)
        self.actionDelete_selected.setObjectName(u"actionDelete_selected")
        icon24 = QIcon()
        icon24.addFile(u":/Icons/icons/delete_schematic.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDelete_selected.setIcon(icon24)
        self.actionDelete_selected.setFont(font)
        self.actionLinearAnalysis = QAction(mainWindow)
        self.actionLinearAnalysis.setObjectName(u"actionLinearAnalysis")
        icon25 = QIcon()
        icon25.addFile(u":/Icons/icons/ptdf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionLinearAnalysis.setIcon(icon25)
        self.actionLinearAnalysis.setFont(font)
        self.actionReset_console = QAction(mainWindow)
        self.actionReset_console.setObjectName(u"actionReset_console")
        icon26 = QIcon()
        icon26.addFile(u":/Icons/icons/undo.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionReset_console.setIcon(icon26)
        self.actionReset_console.setFont(font)
        self.actionOpf_to_Power_flow = QAction(mainWindow)
        self.actionOpf_to_Power_flow.setObjectName(u"actionOpf_to_Power_flow")
        self.actionOpf_to_Power_flow.setCheckable(True)
        icon27 = QIcon()
        icon27.addFile(u":/Icons/icons/dcopf2ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOpf_to_Power_flow.setIcon(icon27)
        self.actionOpf_to_Power_flow.setFont(font)
        self.actionTry_to_fix_buses_location = QAction(mainWindow)
        self.actionTry_to_fix_buses_location.setObjectName(u"actionTry_to_fix_buses_location")
        icon28 = QIcon()
        icon28.addFile(u":/Icons/icons/move_bus.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionTry_to_fix_buses_location.setIcon(icon28)
        self.actionTry_to_fix_buses_location.setFont(font)
        self.actionSet_OPF_generation_to_profiles = QAction(mainWindow)
        self.actionSet_OPF_generation_to_profiles.setObjectName(u"actionSet_OPF_generation_to_profiles")
        self.actionSet_OPF_generation_to_profiles.setIcon(icon27)
        self.actionSet_OPF_generation_to_profiles.setFont(font)
        self.actionPTDF_time_series = QAction(mainWindow)
        self.actionPTDF_time_series.setObjectName(u"actionPTDF_time_series")
        icon29 = QIcon()
        icon29.addFile(u":/Icons/icons/ptdf_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPTDF_time_series.setIcon(icon29)
        self.actionPTDF_time_series.setFont(font)
        self.actionAdd_circuit = QAction(mainWindow)
        self.actionAdd_circuit.setObjectName(u"actionAdd_circuit")
        icon30 = QIcon()
        icon30.addFile(u":/Icons/icons/load_add.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_circuit.setIcon(icon30)
        self.actionAdd_circuit.setFont(font)
        self.actionSync = QAction(mainWindow)
        self.actionSync.setObjectName(u"actionSync")
        self.actionSync.setCheckable(True)
        icon31 = QIcon()
        icon31.addFile(u":/Icons/icons/sync.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSync.setIcon(icon31)
        self.actionDrawSchematic = QAction(mainWindow)
        self.actionDrawSchematic.setObjectName(u"actionDrawSchematic")
        icon32 = QIcon()
        icon32.addFile(u":/Icons/icons/grid_icon.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDrawSchematic.setIcon(icon32)
        self.actionSigma_analysis = QAction(mainWindow)
        self.actionSigma_analysis.setObjectName(u"actionSigma_analysis")
        icon33 = QIcon()
        icon33.addFile(u":/Icons/icons/sigma.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSigma_analysis.setIcon(icon33)
        self.actionSigma_analysis.setFont(font)
        self.actionClear_stuff_running_right_now = QAction(mainWindow)
        self.actionClear_stuff_running_right_now.setObjectName(u"actionClear_stuff_running_right_now")
        icon34 = QIcon()
        icon34.addFile(u":/Icons/icons/clear_runs.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionClear_stuff_running_right_now.setIcon(icon34)
        self.actionClear_stuff_running_right_now.setFont(font)
        self.actionAdd_default_catalogue = QAction(mainWindow)
        self.actionAdd_default_catalogue.setObjectName(u"actionAdd_default_catalogue")
        icon35 = QIcon()
        icon35.addFile(u":/Icons/icons/CatalogueAdd.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_default_catalogue.setIcon(icon35)
        self.actionAdd_default_catalogue.setFont(font)
        self.actionFind_node_groups = QAction(mainWindow)
        self.actionFind_node_groups.setObjectName(u"actionFind_node_groups")
        self.actionFind_node_groups.setCheckable(True)
        icon36 = QIcon()
        icon36.addFile(u":/Icons/icons/color_grid2.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionFind_node_groups.setIcon(icon36)
        self.actionFind_node_groups.setFont(font)
        self.actiongrid_Generator = QAction(mainWindow)
        self.actiongrid_Generator.setObjectName(u"actiongrid_Generator")
        self.actiongrid_Generator.setIcon(icon13)
        self.actiongrid_Generator.setFont(font)
        self.actionImportPlexosNodeLoad = QAction(mainWindow)
        self.actionImportPlexosNodeLoad.setObjectName(u"actionImportPlexosNodeLoad")
        icon37 = QIcon()
        icon37.addFile(u":/Icons/icons/load.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionImportPlexosNodeLoad.setIcon(icon37)
        self.actionImportPlexosGeneratorGeneration = QAction(mainWindow)
        self.actionImportPlexosGeneratorGeneration.setObjectName(u"actionImportPlexosGeneratorGeneration")
        self.actionImportPlexosGeneratorGeneration.setIcon(icon37)
        self.actionOTDF_time_series = QAction(mainWindow)
        self.actionOTDF_time_series.setObjectName(u"actionOTDF_time_series")
        icon38 = QIcon()
        icon38.addFile(u":/Icons/icons/otdf_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOTDF_time_series.setIcon(icon38)
        self.actionOTDF_time_series.setFont(font)
        self.actionImportPlexosBranchRates = QAction(mainWindow)
        self.actionImportPlexosBranchRates.setObjectName(u"actionImportPlexosBranchRates")
        self.actionImportPlexosBranchRates.setIcon(icon37)
        self.actionSetSelectedBusArea = QAction(mainWindow)
        self.actionSetSelectedBusArea.setObjectName(u"actionSetSelectedBusArea")
        icon39 = QIcon()
        icon39.addFile(u":/Icons/icons/area.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSetSelectedBusArea.setIcon(icon39)
        self.actionSetSelectedBusArea.setFont(font)
        self.actionSetSelectedBusZone = QAction(mainWindow)
        self.actionSetSelectedBusZone.setObjectName(u"actionSetSelectedBusZone")
        icon40 = QIcon()
        icon40.addFile(u":/Icons/icons/zone.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSetSelectedBusZone.setIcon(icon40)
        self.actionSetSelectedBusZone.setFont(font)
        self.actionSetSelectedBusCountry = QAction(mainWindow)
        self.actionSetSelectedBusCountry.setObjectName(u"actionSetSelectedBusCountry")
        icon41 = QIcon()
        icon41.addFile(u":/Icons/icons/map.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSetSelectedBusCountry.setIcon(icon41)
        self.actionSetSelectedBusCountry.setFont(font)
        self.actionImport_bus_coordinates = QAction(mainWindow)
        self.actionImport_bus_coordinates.setObjectName(u"actionImport_bus_coordinates")
        self.actionImport_bus_coordinates.setIcon(icon30)
        self.actionImport_bus_coordinates.setFont(font)
        self.actionATC = QAction(mainWindow)
        self.actionATC.setObjectName(u"actionATC")
        icon42 = QIcon()
        icon42.addFile(u":/Icons/icons/atc.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionATC.setIcon(icon42)
        self.actionATC.setFont(font)
        self.actionATC_Time_Series = QAction(mainWindow)
        self.actionATC_Time_Series.setObjectName(u"actionATC_Time_Series")
        icon43 = QIcon()
        icon43.addFile(u":/Icons/icons/atc_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionATC_Time_Series.setIcon(icon43)
        self.actionATC_Time_Series.setFont(font)
        self.actionContingency_analysis = QAction(mainWindow)
        self.actionContingency_analysis.setObjectName(u"actionContingency_analysis")
        icon44 = QIcon()
        icon44.addFile(u":/Icons/icons/otdf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionContingency_analysis.setIcon(icon44)
        self.actionContingency_analysis.setFont(font)
        self.actionOptimal_Net_Transfer_Capacity = QAction(mainWindow)
        self.actionOptimal_Net_Transfer_Capacity.setObjectName(u"actionOptimal_Net_Transfer_Capacity")
        icon45 = QIcon()
        icon45.addFile(u":/Icons/icons/ntc_opf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOptimal_Net_Transfer_Capacity.setIcon(icon45)
        self.actionOptimal_Net_Transfer_Capacity.setFont(font)
        self.actionSet_schematic_positions_from_GPS_coordinates = QAction(mainWindow)
        self.actionSet_schematic_positions_from_GPS_coordinates.setObjectName(u"actionSet_schematic_positions_from_GPS_coordinates")
        self.actionSet_schematic_positions_from_GPS_coordinates.setIcon(icon41)
        self.actionSet_schematic_positions_from_GPS_coordinates.setFont(font)
        self.actionInputs_analysis = QAction(mainWindow)
        self.actionInputs_analysis.setObjectName(u"actionInputs_analysis")
        icon46 = QIcon()
        icon46.addFile(u":/Icons/icons/stats.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionInputs_analysis.setIcon(icon46)
        self.actionInputs_analysis.setFont(font)
        self.actionFuse_devices = QAction(mainWindow)
        self.actionFuse_devices.setObjectName(u"actionFuse_devices")
        icon47 = QIcon()
        icon47.addFile(u":/Icons/icons/fusion.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionFuse_devices.setIcon(icon47)
        self.actionFuse_devices.setFont(font)
        self.actionDelete_inconsistencies = QAction(mainWindow)
        self.actionDelete_inconsistencies.setObjectName(u"actionDelete_inconsistencies")
        icon48 = QIcon()
        icon48.addFile(u":/Icons/icons/delete.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDelete_inconsistencies.setIcon(icon48)
        self.actionDelete_inconsistencies.setFont(font)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series = QAction(mainWindow)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setObjectName(u"actionOptimal_Net_Transfer_Capacity_Time_Series")
        icon49 = QIcon()
        icon49.addFile(u":/Icons/icons/ntc_opf_ts.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setIcon(icon49)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setFont(font)
        self.actionre_index_time = QAction(mainWindow)
        self.actionre_index_time.setObjectName(u"actionre_index_time")
        icon50 = QIcon()
        icon50.addFile(u":/Icons/icons/data.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionre_index_time.setIcon(icon50)
        self.actionre_index_time.setFont(font)
        self.actionFix_generators_active_based_on_the_power = QAction(mainWindow)
        self.actionFix_generators_active_based_on_the_power.setObjectName(u"actionFix_generators_active_based_on_the_power")
        icon51 = QIcon()
        icon51.addFile(u":/Icons/icons/remedial_action.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionFix_generators_active_based_on_the_power.setIcon(icon51)
        self.actionFix_generators_active_based_on_the_power.setFont(font)
        self.actionFix_loads_active_based_on_the_power = QAction(mainWindow)
        self.actionFix_loads_active_based_on_the_power.setObjectName(u"actionFix_loads_active_based_on_the_power")
        self.actionFix_loads_active_based_on_the_power.setIcon(icon51)
        self.actionFix_loads_active_based_on_the_power.setFont(font)
        self.actionImport_contingencies = QAction(mainWindow)
        self.actionImport_contingencies.setObjectName(u"actionImport_contingencies")
        self.actionImport_contingencies.setIcon(icon30)
        self.actionImport_contingencies.setFont(font)
        self.actionInitialize_contingencies = QAction(mainWindow)
        self.actionInitialize_contingencies.setObjectName(u"actionInitialize_contingencies")
        icon52 = QIcon()
        icon52.addFile(u":/Icons/icons/contingency_wizzard.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionInitialize_contingencies.setIcon(icon52)
        self.actionInitialize_contingencies.setFont(font)
        self.actionExport_contingencies = QAction(mainWindow)
        self.actionExport_contingencies.setObjectName(u"actionExport_contingencies")
        self.actionExport_contingencies.setIcon(icon19)
        self.actionExport_contingencies.setFont(font)
        self.actionAdd_selected_to_contingency = QAction(mainWindow)
        self.actionAdd_selected_to_contingency.setObjectName(u"actionAdd_selected_to_contingency")
        icon53 = QIcon()
        icon53.addFile(u":/Icons/icons/add_contingency.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_selected_to_contingency.setIcon(icon53)
        self.actionAdd_selected_to_contingency.setFont(font)
        self.actionAdd_selected_as_new_investment = QAction(mainWindow)
        self.actionAdd_selected_as_new_investment.setObjectName(u"actionAdd_selected_as_new_investment")
        icon54 = QIcon()
        icon54.addFile(u":/Icons/icons/investment.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_selected_as_new_investment.setIcon(icon54)
        self.actionAdd_selected_as_new_investment.setFont(font)
        self.actionZoom_in = QAction(mainWindow)
        self.actionZoom_in.setObjectName(u"actionZoom_in")
        icon55 = QIcon()
        icon55.addFile(u":/Icons/icons/zoom_in.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionZoom_in.setIcon(icon55)
        self.actionZoom_in.setFont(font)
        self.actionZoom_out = QAction(mainWindow)
        self.actionZoom_out.setObjectName(u"actionZoom_out")
        icon56 = QIcon()
        icon56.addFile(u":/Icons/icons/zoom_out.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionZoom_out.setIcon(icon56)
        self.actionZoom_out.setFont(font)
        self.actionClustering = QAction(mainWindow)
        self.actionClustering.setObjectName(u"actionClustering")
        icon57 = QIcon()
        icon57.addFile(u":/Icons/icons/clustering.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionClustering.setIcon(icon57)
        self.actionClustering.setFont(font)
        self.actionClustering.setMenuRole(QAction.MenuRole.NoRole)
        self.actionUse_clustering = QAction(mainWindow)
        self.actionUse_clustering.setObjectName(u"actionUse_clustering")
        self.actionUse_clustering.setCheckable(True)
        icon58 = QIcon()
        icon58.addFile(u":/Icons/icons/clustering_use.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionUse_clustering.setIcon(icon58)
        self.actionUse_clustering.setFont(font)
        self.actionInvestments_evaluation = QAction(mainWindow)
        self.actionInvestments_evaluation.setObjectName(u"actionInvestments_evaluation")
        icon59 = QIcon()
        icon59.addFile(u":/Icons/icons/expansion_planning.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionInvestments_evaluation.setIcon(icon59)
        self.actionInvestments_evaluation.setFont(font)
        self.actionNew_bus_branch_diagram_from_selection = QAction(mainWindow)
        self.actionNew_bus_branch_diagram_from_selection.setObjectName(u"actionNew_bus_branch_diagram_from_selection")
        icon60 = QIcon()
        icon60.addFile(u":/Icons/icons/schematic.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNew_bus_branch_diagram_from_selection.setIcon(icon60)
        self.actionNew_bus_branch_diagram_from_selection.setFont(font)
        self.actionAdd_general_bus_branch_diagram = QAction(mainWindow)
        self.actionAdd_general_bus_branch_diagram.setObjectName(u"actionAdd_general_bus_branch_diagram")
        self.actionAdd_general_bus_branch_diagram.setIcon(icon60)
        self.actionAdd_general_bus_branch_diagram.setFont(font)
        self.actionAdd_map = QAction(mainWindow)
        self.actionAdd_map.setObjectName(u"actionAdd_map")
        icon61 = QIcon()
        icon61.addFile(u":/Icons/icons/map (add).svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_map.setIcon(icon61)
        self.actionAdd_map.setFont(font)
        self.actionRemove_selected_diagram = QAction(mainWindow)
        self.actionRemove_selected_diagram.setObjectName(u"actionRemove_selected_diagram")
        self.actionRemove_selected_diagram.setIcon(icon8)
        self.actionReport_a_bug = QAction(mainWindow)
        self.actionReport_a_bug.setObjectName(u"actionReport_a_bug")
        icon62 = QIcon()
        icon62.addFile(u":/Icons/icons/bug.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionReport_a_bug.setIcon(icon62)
        self.actionReport_a_bug.setFont(font)
        self.actionSearchDiagram = QAction(mainWindow)
        self.actionSearchDiagram.setObjectName(u"actionSearchDiagram")
        icon63 = QIcon()
        icon63.addFile(u":/Icons/icons/magnifying_glass.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSearchDiagram.setIcon(icon63)
        self.actionSearchDiagram.setFont(font)
        self.actionProcess_topology = QAction(mainWindow)
        self.actionProcess_topology.setObjectName(u"actionProcess_topology")
        self.actionProcess_topology.setIcon(icon60)
        self.actionProcess_topology.setFont(font)
        self.actionEdit_simulation_time_limits = QAction(mainWindow)
        self.actionEdit_simulation_time_limits.setObjectName(u"actionEdit_simulation_time_limits")
        icon64 = QIcon()
        icon64.addFile(u":/Icons/icons/time_series span.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionEdit_simulation_time_limits.setIcon(icon64)
        self.actionEdit_simulation_time_limits.setFont(font)
        self.actionactivate_time_series = QAction(mainWindow)
        self.actionactivate_time_series.setObjectName(u"actionactivate_time_series")
        self.actionactivate_time_series.setCheckable(True)
        icon65 = QIcon()
        icon65.addFile(u":/Icons/icons/time_series set.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionactivate_time_series.setIcon(icon65)
        self.actionactivate_time_series.setFont(font)
        self.actionClean_database = QAction(mainWindow)
        self.actionClean_database.setObjectName(u"actionClean_database")
        self.actionClean_database.setIcon(icon34)
        self.actionClean_database.setFont(font)
        self.actionScale = QAction(mainWindow)
        self.actionScale.setObjectName(u"actionScale")
        icon66 = QIcon()
        icon66.addFile(u":/Icons/icons/scale.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionScale.setIcon(icon66)
        self.actionScale.setFont(font)
        self.actionDisable_all_results_tags = QAction(mainWindow)
        self.actionDisable_all_results_tags.setObjectName(u"actionDisable_all_results_tags")
        icon67 = QIcon()
        icon67.addFile(u":/Icons/icons/uncheck_all.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDisable_all_results_tags.setIcon(icon67)
        self.actionDisable_all_results_tags.setFont(font)
        self.actionEnable_all_results_tags = QAction(mainWindow)
        self.actionEnable_all_results_tags.setObjectName(u"actionEnable_all_results_tags")
        icon68 = QIcon()
        icon68.addFile(u":/Icons/icons/check_all.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionEnable_all_results_tags.setIcon(icon68)
        self.actionEnable_all_results_tags.setFont(font)
        self.actionDetect_substations = QAction(mainWindow)
        self.actionDetect_substations.setObjectName(u"actionDetect_substations")
        icon69 = QIcon()
        icon69.addFile(u":/Icons/icons/substation.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDetect_substations.setIcon(icon69)
        self.actionDetect_substations.setFont(font)
        self.actionNodal_capacity = QAction(mainWindow)
        self.actionNodal_capacity.setObjectName(u"actionNodal_capacity")
        icon70 = QIcon()
        icon70.addFile(u":/Icons/icons/nodal_capacity.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNodal_capacity.setIcon(icon70)
        self.actionNodal_capacity.setFont(font)
        self.actionEnable_server_mode = QAction(mainWindow)
        self.actionEnable_server_mode.setObjectName(u"actionEnable_server_mode")
        self.actionEnable_server_mode.setCheckable(True)
        icon71 = QIcon()
        icon71.addFile(u":/Icons/icons/server.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionEnable_server_mode.setIcon(icon71)
        self.actionEnable_server_mode.setFont(font)
        self.actionRecord_video = QAction(mainWindow)
        self.actionRecord_video.setObjectName(u"actionRecord_video")
        icon72 = QIcon()
        icon72.addFile(u":/Icons/icons/record.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionRecord_video.setIcon(icon72)
        self.actionRecord_video.setFont(font)
        self.actionExport_circuit_differential = QAction(mainWindow)
        self.actionExport_circuit_differential.setObjectName(u"actionExport_circuit_differential")
        self.actionExport_circuit_differential.setIcon(icon23)
        self.actionExport_circuit_differential.setFont(font)
        self.actionAdd_custom_catalogue = QAction(mainWindow)
        self.actionAdd_custom_catalogue.setObjectName(u"actionAdd_custom_catalogue")
        icon73 = QIcon()
        icon73.addFile(u":/Icons/icons/CataloguePrivate.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_custom_catalogue.setIcon(icon73)
        self.actionAdd_custom_catalogue.setFont(font)
        self.actionExportCatalogue = QAction(mainWindow)
        self.actionExportCatalogue.setObjectName(u"actionExportCatalogue")
        self.actionExportCatalogue.setIcon(icon73)
        self.actionExportCatalogue.setFont(font)
        self.actionConsolidate_diagram_coordinates = QAction(mainWindow)
        self.actionConsolidate_diagram_coordinates.setObjectName(u"actionConsolidate_diagram_coordinates")
        icon74 = QIcon()
        icon74.addFile(u":/Icons/icons/assign_to_profile.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionConsolidate_diagram_coordinates.setIcon(icon74)
        self.actionConsolidate_diagram_coordinates.setFont(font)
        self.actionAdd_selected_as_remedial_action = QAction(mainWindow)
        self.actionAdd_selected_as_remedial_action.setObjectName(u"actionAdd_selected_as_remedial_action")
        icon75 = QIcon()
        icon75.addFile(u":/Icons/icons/add_remedial_action.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_selected_as_remedial_action.setIcon(icon75)
        self.actionDetect_facilities = QAction(mainWindow)
        self.actionDetect_facilities.setObjectName(u"actionDetect_facilities")
        icon76 = QIcon()
        icon76.addFile(u":/Icons/icons/powerplant.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDetect_facilities.setIcon(icon76)
        self.actionRotate = QAction(mainWindow)
        self.actionRotate.setObjectName(u"actionRotate")
        self.actionRotate.setIcon(icon26)
        self.actionRotate.setFont(font)
        self.actionReset_coordinates = QAction(mainWindow)
        self.actionReset_coordinates.setObjectName(u"actionReset_coordinates")
        icon77 = QIcon()
        icon77.addFile(u":/Icons/icons/down.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionReset_coordinates.setIcon(icon77)
        self.actionReset_coordinates.setFont(font)
        self.actionReliability = QAction(mainWindow)
        self.actionReliability.setObjectName(u"actionReliability")
        icon78 = QIcon()
        icon78.addFile(u":/Icons/icons/reliability.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionReliability.setIcon(icon78)
        self.actionReliability.setFont(font)
        self.actionReliability.setMenuRole(QAction.MenuRole.NoRole)
        self.actionColor_buses_by = QAction(mainWindow)
        self.actionColor_buses_by.setObjectName(u"actionColor_buses_by")
        self.actionColor_buses_by.setIcon(icon32)
        self.actionColor_buses_by.setFont(font)
        self.actionColor_substations_by = QAction(mainWindow)
        self.actionColor_substations_by.setObjectName(u"actionColor_substations_by")
        self.actionColor_substations_by.setIcon(icon32)
        self.actionColor_substations_by.setFont(font)
        self.actionColor_substations_by.setMenuRole(QAction.MenuRole.NoRole)
        self.actionSelect_buses_by = QAction(mainWindow)
        self.actionSelect_buses_by.setObjectName(u"actionSelect_buses_by")
        self.actionSelect_buses_by.setIcon(icon32)
        self.actionSelect_buses_by.setFont(font)
        self.actionSelect_buses_by.setMenuRole(QAction.MenuRole.NoRole)
        self.actionGrid_reduction = QAction(mainWindow)
        self.actionGrid_reduction.setObjectName(u"actionGrid_reduction")
        self.actionGrid_reduction.setIcon(icon60)
        self.actionGrid_reduction.setMenuRole(QAction.MenuRole.NoRole)
        self.actionSubstation_wizard = QAction(mainWindow)
        self.actionSubstation_wizard.setObjectName(u"actionSubstation_wizard")
        self.actionSubstation_wizard.setIcon(icon69)
        self.actionSubstation_wizard.setMenuRole(QAction.MenuRole.NoRole)
        self.centralwidget = QWidget(mainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.gridLayout_3 = QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.gridLayout_3.setContentsMargins(2, 2, 2, 2)
        self.tabWidget = QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName(u"tabWidget")
        font1 = QFont()
        font1.setPointSize(9)
        self.tabWidget.setFont(font1)
        self.GridTab = QWidget()
        self.GridTab.setObjectName(u"GridTab")
        self.verticalLayout_9 = QVBoxLayout(self.GridTab)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.tabWidget_3 = QTabWidget(self.GridTab)
        self.tabWidget_3.setObjectName(u"tabWidget_3")
        self.tabWidget_3.setFont(font1)
        self.tabWidget_3.setTabPosition(QTabWidget.TabPosition.South)
        self.tabWidget_3.setTabShape(QTabWidget.TabShape.Rounded)
        self.tabWidget_3.setElideMode(Qt.TextElideMode.ElideNone)
        self.tabWidget_3.setDocumentMode(True)
        self.GridSectionTab = QWidget()
        self.GridSectionTab.setObjectName(u"GridSectionTab")
        self.verticalLayout_30 = QVBoxLayout(self.GridSectionTab)
        self.verticalLayout_30.setObjectName(u"verticalLayout_30")
        self.verticalLayout_30.setContentsMargins(0, 0, 0, 0)
        self.frame_6 = QFrame(self.GridSectionTab)
        self.frame_6.setObjectName(u"frame_6")
        self.frame_6.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_6.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_5 = QVBoxLayout(self.frame_6)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.diagram_selection_splitter = QSplitter(self.frame_6)
        self.diagram_selection_splitter.setObjectName(u"diagram_selection_splitter")
        self.diagram_selection_splitter.setOrientation(Qt.Orientation.Horizontal)
        self.schematic_frame = QFrame(self.diagram_selection_splitter)
        self.schematic_frame.setObjectName(u"schematic_frame")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schematic_frame.sizePolicy().hasHeightForWidth())
        self.schematic_frame.setSizePolicy(sizePolicy)
        self.schematic_frame.setFrameShape(QFrame.Shape.NoFrame)
        self.schematic_frame.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_3 = QVBoxLayout(self.schematic_frame)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.schematic_layout = QHBoxLayout()
        self.schematic_layout.setObjectName(u"schematic_layout")

        self.verticalLayout_3.addLayout(self.schematic_layout)

        self.diagram_selection_splitter.addWidget(self.schematic_frame)
        self.diagram_selection_frame = QFrame(self.diagram_selection_splitter)
        self.diagram_selection_frame.setObjectName(u"diagram_selection_frame")
        self.diagram_selection_frame.setMaximumSize(QSize(600, 16777215))
        self.diagram_selection_frame.setFrameShape(QFrame.Shape.NoFrame)
        self.diagram_selection_frame.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_2 = QVBoxLayout(self.diagram_selection_frame)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.tabWidget_6 = QTabWidget(self.diagram_selection_frame)
        self.tabWidget_6.setObjectName(u"tabWidget_6")
        self.tabWidget_6.setFont(font1)
        self.tabWidget_6.setTabPosition(QTabWidget.TabPosition.North)
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.verticalLayout_37 = QVBoxLayout(self.tab_3)
        self.verticalLayout_37.setObjectName(u"verticalLayout_37")
        self.verticalLayout_37.setContentsMargins(0, 0, 0, 1)
        self.diagramsListView = QListView(self.tab_3)
        self.diagramsListView.setObjectName(u"diagramsListView")
        self.diagramsListView.setFont(font1)
        self.diagramsListView.setFrameShape(QFrame.Shape.NoFrame)

        self.verticalLayout_37.addWidget(self.diagramsListView)

        icon79 = QIcon()
        icon79.addFile(u":/Icons/icons/show_color_controls.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_6.addTab(self.tab_3, icon79, "")
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        self.verticalLayout = QVBoxLayout(self.tab)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 1)
        self.combinationsTreeView = QTreeView(self.tab)
        self.combinationsTreeView.setObjectName(u"combinationsTreeView")
        self.combinationsTreeView.setFrameShape(QFrame.Shape.NoFrame)

        self.verticalLayout.addWidget(self.combinationsTreeView)

        self.tabWidget_6.addTab(self.tab, icon50, "")
        self.tab_4 = QWidget()
        self.tab_4.setObjectName(u"tab_4")
        self.verticalLayout_38 = QVBoxLayout(self.tab_4)
        self.verticalLayout_38.setObjectName(u"verticalLayout_38")
        self.verticalLayout_38.setContentsMargins(0, 0, 0, 0)
        self.frame_58 = QFrame(self.tab_4)
        self.frame_58.setObjectName(u"frame_58")
        self.frame_58.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_58.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout = QGridLayout(self.frame_58)
        self.gridLayout.setObjectName(u"gridLayout")
        self.gridLayout.setVerticalSpacing(2)
        self.gridLayout.setContentsMargins(6, 0, 6, 4)
        self.label_60 = QLabel(self.frame_58)
        self.label_60.setObjectName(u"label_60")
        font2 = QFont()
        font2.setPointSize(8)
        self.label_60.setFont(font2)

        self.gridLayout.addWidget(self.label_60, 12, 0, 1, 1)

        self.frame_22 = QFrame(self.frame_58)
        self.frame_22.setObjectName(u"frame_22")
        self.frame_22.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_22.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_15 = QHBoxLayout(self.frame_22)
        self.horizontalLayout_15.setObjectName(u"horizontalLayout_15")
        self.horizontalLayout_15.setContentsMargins(0, 0, 0, 0)

        self.gridLayout.addWidget(self.frame_22, 16, 0, 1, 2)

        self.label_32 = QLabel(self.frame_58)
        self.label_32.setObjectName(u"label_32")
        self.label_32.setFont(font2)

        self.gridLayout.addWidget(self.label_32, 26, 0, 1, 1)

        self.fps_spinBox = QSpinBox(self.frame_58)
        self.fps_spinBox.setObjectName(u"fps_spinBox")
        self.fps_spinBox.setFont(font2)
        self.fps_spinBox.setMinimum(1)
        self.fps_spinBox.setMaximum(9999)
        self.fps_spinBox.setValue(30)

        self.gridLayout.addWidget(self.fps_spinBox, 27, 1, 1, 1)

        self.frame_24 = QFrame(self.frame_58)
        self.frame_24.setObjectName(u"frame_24")
        self.frame_24.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_24.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_32 = QGridLayout(self.frame_24)
        self.gridLayout_32.setObjectName(u"gridLayout_32")
        self.gridLayout_32.setContentsMargins(0, 0, 0, 0)
        self.label_154 = QLabel(self.frame_24)
        self.label_154.setObjectName(u"label_154")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.label_154.sizePolicy().hasHeightForWidth())
        self.label_154.setSizePolicy(sizePolicy1)
        self.label_154.setFont(font2)

        self.gridLayout_32.addWidget(self.label_154, 2, 0, 1, 1)

        self.label_113 = QLabel(self.frame_24)
        self.label_113.setObjectName(u"label_113")
        sizePolicy1.setHeightForWidth(self.label_113.sizePolicy().hasHeightForWidth())
        self.label_113.setSizePolicy(sizePolicy1)
        self.label_113.setFont(font2)

        self.gridLayout_32.addWidget(self.label_113, 5, 0, 1, 1)

        self.min_node_size_spinBox = QDoubleSpinBox(self.frame_24)
        self.min_node_size_spinBox.setObjectName(u"min_node_size_spinBox")
        self.min_node_size_spinBox.setFont(font2)
        self.min_node_size_spinBox.setDecimals(5)
        self.min_node_size_spinBox.setMinimum(0.000100000000000)
        self.min_node_size_spinBox.setMaximum(9999.000000000000000)
        self.min_node_size_spinBox.setSingleStep(0.100000000000000)
        self.min_node_size_spinBox.setValue(1.000000000000000)

        self.gridLayout_32.addWidget(self.min_node_size_spinBox, 3, 1, 1, 2)

        self.label_14 = QLabel(self.frame_24)
        self.label_14.setObjectName(u"label_14")
        sizePolicy1.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy1)
        self.label_14.setFont(font2)

        self.gridLayout_32.addWidget(self.label_14, 4, 0, 1, 1)

        self.palette_comboBox = QComboBox(self.frame_24)
        self.palette_comboBox.setObjectName(u"palette_comboBox")
        self.palette_comboBox.setFont(font2)

        self.gridLayout_32.addWidget(self.palette_comboBox, 0, 1, 1, 4)

        self.preset4_pushButton = QPushButton(self.frame_24)
        self.preset4_pushButton.setObjectName(u"preset4_pushButton")
        self.preset4_pushButton.setFont(font2)

        self.gridLayout_32.addWidget(self.preset4_pushButton, 2, 4, 1, 1)

        self.redraw_pushButton = QPushButton(self.frame_24)
        self.redraw_pushButton.setObjectName(u"redraw_pushButton")
        self.redraw_pushButton.setFont(font2)

        self.gridLayout_32.addWidget(self.redraw_pushButton, 6, 2, 1, 3)

        self.max_branch_size_spinBox = QDoubleSpinBox(self.frame_24)
        self.max_branch_size_spinBox.setObjectName(u"max_branch_size_spinBox")
        self.max_branch_size_spinBox.setFont(font2)
        self.max_branch_size_spinBox.setDecimals(5)
        self.max_branch_size_spinBox.setMinimum(0.000100000000000)
        self.max_branch_size_spinBox.setMaximum(9999.000000000000000)
        self.max_branch_size_spinBox.setSingleStep(0.100000000000000)
        self.max_branch_size_spinBox.setValue(20.000000000000000)

        self.gridLayout_32.addWidget(self.max_branch_size_spinBox, 4, 3, 1, 2)

        self.preset1_pushButton = QPushButton(self.frame_24)
        self.preset1_pushButton.setObjectName(u"preset1_pushButton")
        self.preset1_pushButton.setFont(font2)

        self.gridLayout_32.addWidget(self.preset1_pushButton, 2, 1, 1, 1)

        self.label = QLabel(self.frame_24)
        self.label.setObjectName(u"label")
        sizePolicy1.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy1)
        self.label.setFont(font2)

        self.gridLayout_32.addWidget(self.label, 3, 0, 1, 1)

        self.branch_width_based_on_flow_checkBox = QCheckBox(self.frame_24)
        self.branch_width_based_on_flow_checkBox.setObjectName(u"branch_width_based_on_flow_checkBox")
        self.branch_width_based_on_flow_checkBox.setFont(font2)
        self.branch_width_based_on_flow_checkBox.setChecked(False)

        self.gridLayout_32.addWidget(self.branch_width_based_on_flow_checkBox, 6, 0, 1, 2)

        self.label_43 = QLabel(self.frame_24)
        self.label_43.setObjectName(u"label_43")
        sizePolicy1.setHeightForWidth(self.label_43.sizePolicy().hasHeightForWidth())
        self.label_43.setSizePolicy(sizePolicy1)
        self.label_43.setFont(font2)

        self.gridLayout_32.addWidget(self.label_43, 0, 0, 1, 1)

        self.preset3_pushButton = QPushButton(self.frame_24)
        self.preset3_pushButton.setObjectName(u"preset3_pushButton")
        self.preset3_pushButton.setFont(font2)

        self.gridLayout_32.addWidget(self.preset3_pushButton, 2, 3, 1, 1)

        self.max_node_size_spinBox = QDoubleSpinBox(self.frame_24)
        self.max_node_size_spinBox.setObjectName(u"max_node_size_spinBox")
        self.max_node_size_spinBox.setFont(font2)
        self.max_node_size_spinBox.setDecimals(5)
        self.max_node_size_spinBox.setMinimum(0.000100000000000)
        self.max_node_size_spinBox.setMaximum(9999.000000000000000)
        self.max_node_size_spinBox.setSingleStep(0.100000000000000)
        self.max_node_size_spinBox.setValue(40.000000000000000)

        self.gridLayout_32.addWidget(self.max_node_size_spinBox, 3, 3, 1, 2)

        self.preset2_pushButton = QPushButton(self.frame_24)
        self.preset2_pushButton.setObjectName(u"preset2_pushButton")
        self.preset2_pushButton.setFont(font2)

        self.gridLayout_32.addWidget(self.preset2_pushButton, 2, 2, 1, 1)

        self.arrow_size_size_spinBox = QDoubleSpinBox(self.frame_24)
        self.arrow_size_size_spinBox.setObjectName(u"arrow_size_size_spinBox")
        self.arrow_size_size_spinBox.setFont(font2)
        self.arrow_size_size_spinBox.setDecimals(5)
        self.arrow_size_size_spinBox.setMinimum(0.000100000000000)
        self.arrow_size_size_spinBox.setMaximum(9999.000000000000000)
        self.arrow_size_size_spinBox.setSingleStep(0.100000000000000)
        self.arrow_size_size_spinBox.setValue(1.000000000000000)

        self.gridLayout_32.addWidget(self.arrow_size_size_spinBox, 5, 1, 1, 2)

        self.min_branch_size_spinBox = QDoubleSpinBox(self.frame_24)
        self.min_branch_size_spinBox.setObjectName(u"min_branch_size_spinBox")
        self.min_branch_size_spinBox.setFont(font2)
        self.min_branch_size_spinBox.setDecimals(5)
        self.min_branch_size_spinBox.setMinimum(0.000100000000000)
        self.min_branch_size_spinBox.setMaximum(9999.000000000000000)
        self.min_branch_size_spinBox.setSingleStep(0.100000000000000)
        self.min_branch_size_spinBox.setValue(1.000000000000000)

        self.gridLayout_32.addWidget(self.min_branch_size_spinBox, 4, 1, 1, 2)

        self.label_118 = QLabel(self.frame_24)
        self.label_118.setObjectName(u"label_118")
        self.label_118.setFont(font2)

        self.gridLayout_32.addWidget(self.label_118, 1, 0, 1, 1)

        self.tile_provider_comboBox = QComboBox(self.frame_24)
        self.tile_provider_comboBox.setObjectName(u"tile_provider_comboBox")
        self.tile_provider_comboBox.setFont(font2)

        self.gridLayout_32.addWidget(self.tile_provider_comboBox, 1, 1, 1, 4)


        self.gridLayout.addWidget(self.frame_24, 3, 0, 1, 2)

        self.resolution_factor_spinBox = QSpinBox(self.frame_58)
        self.resolution_factor_spinBox.setObjectName(u"resolution_factor_spinBox")
        self.resolution_factor_spinBox.setFont(font2)
        self.resolution_factor_spinBox.setMinimum(1)
        self.resolution_factor_spinBox.setMaximum(100)
        self.resolution_factor_spinBox.setValue(10)

        self.gridLayout.addWidget(self.resolution_factor_spinBox, 26, 1, 1, 1)

        self.ask_before_appliying_layout_checkBox = QCheckBox(self.frame_58)
        self.ask_before_appliying_layout_checkBox.setObjectName(u"ask_before_appliying_layout_checkBox")
        self.ask_before_appliying_layout_checkBox.setFont(font2)
        self.ask_before_appliying_layout_checkBox.setChecked(True)
        self.ask_before_appliying_layout_checkBox.setTristate(False)

        self.gridLayout.addWidget(self.ask_before_appliying_layout_checkBox, 14, 0, 1, 1)

        self.label_35 = QLabel(self.frame_58)
        self.label_35.setObjectName(u"label_35")
        self.label_35.setFont(font2)

        self.gridLayout.addWidget(self.label_35, 11, 0, 1, 1)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer, 28, 1, 1, 1)

        self.frame_30 = QFrame(self.frame_58)
        self.frame_30.setObjectName(u"frame_30")
        self.frame_30.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_30.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_18 = QHBoxLayout(self.frame_30)
        self.horizontalLayout_18.setObjectName(u"horizontalLayout_18")
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.label_66 = QLabel(self.frame_30)
        self.label_66.setObjectName(u"label_66")
        self.label_66.setMinimumSize(QSize(24, 24))
        self.label_66.setMaximumSize(QSize(24, 24))
        self.label_66.setPixmap(QPixmap(u":/Icons/icons/picture.svg"))
        self.label_66.setScaledContents(True)

        self.horizontalLayout_18.addWidget(self.label_66)

        self.label_45 = QLabel(self.frame_30)
        self.label_45.setObjectName(u"label_45")
        palette = QPalette()
        brush = QBrush(QColor(85, 87, 83, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush1 = QBrush(QColor(190, 190, 190, 255))
        brush1.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_45.setPalette(palette)
        font3 = QFont()
        font3.setPointSize(11)
        self.label_45.setFont(font3)
        self.label_45.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.horizontalLayout_18.addWidget(self.label_45)


        self.gridLayout.addWidget(self.frame_30, 25, 0, 1, 2)

        self.frame_3 = QFrame(self.frame_58)
        self.frame_3.setObjectName(u"frame_3")
        self.frame_3.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_3.setFrameShadow(QFrame.Shadow.Raised)
        self.formLayout_2 = QFormLayout(self.frame_3)
        self.formLayout_2.setObjectName(u"formLayout_2")
        self.formLayout_2.setContentsMargins(0, -1, 0, 0)
        self.label_110 = QLabel(self.frame_3)
        self.label_110.setObjectName(u"label_110")
        self.label_110.setMinimumSize(QSize(24, 24))
        self.label_110.setMaximumSize(QSize(24, 24))
        self.label_110.setPixmap(QPixmap(u":/Icons/icons/map.svg"))
        self.label_110.setScaledContents(True)

        self.formLayout_2.setWidget(0, QFormLayout.LabelRole, self.label_110)

        self.label_111 = QLabel(self.frame_3)
        self.label_111.setObjectName(u"label_111")
        palette1 = QPalette()
        palette1.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette1.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette1.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_111.setPalette(palette1)
        self.label_111.setFont(font3)
        self.label_111.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.formLayout_2.setWidget(0, QFormLayout.FieldRole, self.label_111)


        self.gridLayout.addWidget(self.frame_3, 0, 0, 1, 2)

        self.defaultBusVoltageSpinBox = QDoubleSpinBox(self.frame_58)
        self.defaultBusVoltageSpinBox.setObjectName(u"defaultBusVoltageSpinBox")
        self.defaultBusVoltageSpinBox.setFont(font2)
        self.defaultBusVoltageSpinBox.setDecimals(1)
        self.defaultBusVoltageSpinBox.setMaximum(999999999.000000000000000)
        self.defaultBusVoltageSpinBox.setValue(10.000000000000000)

        self.gridLayout.addWidget(self.defaultBusVoltageSpinBox, 11, 1, 1, 1)

        self.label_150 = QLabel(self.frame_58)
        self.label_150.setObjectName(u"label_150")
        self.label_150.setFont(font2)

        self.gridLayout.addWidget(self.label_150, 27, 0, 1, 1)

        self.frame_39 = QFrame(self.frame_58)
        self.frame_39.setObjectName(u"frame_39")
        self.frame_39.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_39.setFrameShadow(QFrame.Shadow.Raised)
        self.formLayout_3 = QFormLayout(self.frame_39)
        self.formLayout_3.setObjectName(u"formLayout_3")
        self.formLayout_3.setContentsMargins(0, -1, 0, 0)
        self.label_114 = QLabel(self.frame_39)
        self.label_114.setObjectName(u"label_114")
        self.label_114.setMinimumSize(QSize(24, 24))
        self.label_114.setMaximumSize(QSize(24, 24))
        self.label_114.setPixmap(QPixmap(u":/Icons/icons/schematic.svg"))
        self.label_114.setScaledContents(True)

        self.formLayout_3.setWidget(0, QFormLayout.LabelRole, self.label_114)

        self.label_149 = QLabel(self.frame_39)
        self.label_149.setObjectName(u"label_149")
        palette2 = QPalette()
        palette2.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette2.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette2.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_149.setPalette(palette2)
        self.label_149.setFont(font3)
        self.label_149.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.formLayout_3.setWidget(0, QFormLayout.FieldRole, self.label_149)


        self.gridLayout.addWidget(self.frame_39, 10, 0, 1, 2)

        self.automatic_layout_comboBox = QComboBox(self.frame_58)
        self.automatic_layout_comboBox.setObjectName(u"automatic_layout_comboBox")
        self.automatic_layout_comboBox.setFont(font2)

        self.gridLayout.addWidget(self.automatic_layout_comboBox, 14, 1, 1, 1)

        self.explosion_factor_doubleSpinBox = QDoubleSpinBox(self.frame_58)
        self.explosion_factor_doubleSpinBox.setObjectName(u"explosion_factor_doubleSpinBox")
        self.explosion_factor_doubleSpinBox.setFont(font2)
        self.explosion_factor_doubleSpinBox.setDecimals(3)
        self.explosion_factor_doubleSpinBox.setMinimum(1.000000000000000)
        self.explosion_factor_doubleSpinBox.setMaximum(999999999.000000000000000)
        self.explosion_factor_doubleSpinBox.setSingleStep(0.100000000000000)
        self.explosion_factor_doubleSpinBox.setValue(1.500000000000000)

        self.gridLayout.addWidget(self.explosion_factor_doubleSpinBox, 12, 1, 1, 1)

        self.use_schematic_objects_color_checkBox = QCheckBox(self.frame_58)
        self.use_schematic_objects_color_checkBox.setObjectName(u"use_schematic_objects_color_checkBox")
        self.use_schematic_objects_color_checkBox.setFont(font2)
        self.use_schematic_objects_color_checkBox.setChecked(False)
        self.use_schematic_objects_color_checkBox.setTristate(False)

        self.gridLayout.addWidget(self.use_schematic_objects_color_checkBox, 15, 0, 1, 2)


        self.verticalLayout_38.addWidget(self.frame_58)

        icon80 = QIcon()
        icon80.addFile(u":/Icons/icons/gear.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_6.addTab(self.tab_4, icon80, "")

        self.verticalLayout_2.addWidget(self.tabWidget_6)

        self.grid_colouring_frame = QFrame(self.diagram_selection_frame)
        self.grid_colouring_frame.setObjectName(u"grid_colouring_frame")
        self.grid_colouring_frame.setFrameShape(QFrame.Shape.NoFrame)
        self.grid_colouring_frame.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_31 = QGridLayout(self.grid_colouring_frame)
        self.gridLayout_31.setObjectName(u"gridLayout_31")
        self.gridLayout_31.setContentsMargins(0, 0, 4, 0)
        self.schematic_step_label = QLabel(self.grid_colouring_frame)
        self.schematic_step_label.setObjectName(u"schematic_step_label")
        self.schematic_step_label.setFont(font1)
        self.schematic_step_label.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.gridLayout_31.addWidget(self.schematic_step_label, 2, 0, 1, 3)

        self.available_results_to_color_comboBox = QComboBox(self.grid_colouring_frame)
        self.available_results_to_color_comboBox.setObjectName(u"available_results_to_color_comboBox")
        self.available_results_to_color_comboBox.setMinimumSize(QSize(164, 0))
        self.available_results_to_color_comboBox.setFont(font1)

        self.gridLayout_31.addWidget(self.available_results_to_color_comboBox, 0, 0, 2, 2)

        self.colour_results_pushButton = QPushButton(self.grid_colouring_frame)
        self.colour_results_pushButton.setObjectName(u"colour_results_pushButton")
        self.colour_results_pushButton.setMaximumSize(QSize(32, 16777215))
        icon81 = QIcon()
        icon81.addFile(u":/Icons/icons/color_grid.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.colour_results_pushButton.setIcon(icon81)

        self.gridLayout_31.addWidget(self.colour_results_pushButton, 0, 2, 2, 1)

        self.diagram_step_slider = QSlider(self.grid_colouring_frame)
        self.diagram_step_slider.setObjectName(u"diagram_step_slider")
        self.diagram_step_slider.setOrientation(Qt.Orientation.Horizontal)

        self.gridLayout_31.addWidget(self.diagram_step_slider, 3, 0, 1, 3)


        self.verticalLayout_2.addWidget(self.grid_colouring_frame)

        self.diagram_selection_splitter.addWidget(self.diagram_selection_frame)

        self.verticalLayout_5.addWidget(self.diagram_selection_splitter)


        self.verticalLayout_30.addWidget(self.frame_6)

        self.tabWidget_3.addTab(self.GridSectionTab, icon60, "")
        self.DataTab = QWidget()
        self.DataTab.setObjectName(u"DataTab")
        self.verticalLayout_8 = QVBoxLayout(self.DataTab)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.dataStructuresSplitter = QSplitter(self.DataTab)
        self.dataStructuresSplitter.setObjectName(u"dataStructuresSplitter")
        self.dataStructuresSplitter.setOrientation(Qt.Orientation.Horizontal)
        self.frame_26 = QFrame(self.dataStructuresSplitter)
        self.frame_26.setObjectName(u"frame_26")
        self.frame_26.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_26.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_27 = QVBoxLayout(self.frame_26)
        self.verticalLayout_27.setObjectName(u"verticalLayout_27")
        self.verticalLayout_27.setContentsMargins(-1, 6, 0, 6)
        self.dataStructuresTreeView = QTreeView(self.frame_26)
        self.dataStructuresTreeView.setObjectName(u"dataStructuresTreeView")
        self.dataStructuresTreeView.setAnimated(True)

        self.verticalLayout_27.addWidget(self.dataStructuresTreeView)

        self.dataStructuresSplitter.addWidget(self.frame_26)
        self.frame_38 = QFrame(self.dataStructuresSplitter)
        self.frame_38.setObjectName(u"frame_38")
        self.frame_38.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_38.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_26 = QVBoxLayout(self.frame_38)
        self.verticalLayout_26.setObjectName(u"verticalLayout_26")
        self.verticalLayout_26.setContentsMargins(0, 0, 0, 0)
        self.tabWidget_5 = QTabWidget(self.frame_38)
        self.tabWidget_5.setObjectName(u"tabWidget_5")
        self.tabWidget_5.setTabPosition(QTabWidget.TabPosition.East)
        self.tabWidget_5.setDocumentMode(True)
        self.tab_15 = QWidget()
        self.tab_15.setObjectName(u"tab_15")
        self.verticalLayout_20 = QVBoxLayout(self.tab_15)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.verticalLayout_20.setContentsMargins(0, 6, 8, 6)
        self.frame_54 = QFrame(self.tab_15)
        self.frame_54.setObjectName(u"frame_54")
        self.frame_54.setMinimumSize(QSize(0, 25))
        self.frame_54.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_54.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_28 = QHBoxLayout(self.frame_54)
        self.horizontalLayout_28.setObjectName(u"horizontalLayout_28")
        self.horizontalLayout_28.setContentsMargins(0, 0, 0, 0)
        self.smart_search_lineEdit = QLineEdit(self.frame_54)
        self.smart_search_lineEdit.setObjectName(u"smart_search_lineEdit")
        self.smart_search_lineEdit.setMinimumSize(QSize(120, 0))

        self.horizontalLayout_28.addWidget(self.smart_search_lineEdit)

        self.filter_pushButton = QPushButton(self.frame_54)
        self.filter_pushButton.setObjectName(u"filter_pushButton")
        self.filter_pushButton.setIcon(icon63)

        self.horizontalLayout_28.addWidget(self.filter_pushButton)

        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_28.addItem(self.horizontalSpacer_2)

        self.structure_analysis_pushButton = QPushButton(self.frame_54)
        self.structure_analysis_pushButton.setObjectName(u"structure_analysis_pushButton")
        icon82 = QIcon()
        icon82.addFile(u":/Icons/icons/histogram.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.structure_analysis_pushButton.setIcon(icon82)

        self.horizontalLayout_28.addWidget(self.structure_analysis_pushButton)


        self.verticalLayout_20.addWidget(self.frame_54)

        self.dataStructureTableView = QTableView(self.tab_15)
        self.dataStructureTableView.setObjectName(u"dataStructureTableView")
        self.dataStructureTableView.setFont(font1)

        self.verticalLayout_20.addWidget(self.dataStructureTableView)

        self.frame_9 = QFrame(self.tab_15)
        self.frame_9.setObjectName(u"frame_9")
        self.frame_9.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_9.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_25 = QHBoxLayout(self.frame_9)
        self.horizontalLayout_25.setObjectName(u"horizontalLayout_25")
        self.horizontalLayout_25.setContentsMargins(0, 0, 0, 0)
        self.set_profile_state_button = QPushButton(self.frame_9)
        self.set_profile_state_button.setObjectName(u"set_profile_state_button")
        icon83 = QIcon()
        icon83.addFile(u":/Icons/icons/copy2left.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.set_profile_state_button.setIcon(icon83)

        self.horizontalLayout_25.addWidget(self.set_profile_state_button)

        self.db_step_slider = QSlider(self.frame_9)
        self.db_step_slider.setObjectName(u"db_step_slider")
        self.db_step_slider.setOrientation(Qt.Orientation.Horizontal)

        self.horizontalLayout_25.addWidget(self.db_step_slider)

        self.db_step_label = QLabel(self.frame_9)
        self.db_step_label.setObjectName(u"db_step_label")
        self.db_step_label.setMinimumSize(QSize(200, 0))
        self.db_step_label.setFont(font1)
        self.db_step_label.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.horizontalLayout_25.addWidget(self.db_step_label)

        self.horizontalSpacer_9 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_25.addItem(self.horizontalSpacer_9)

        self.add_object_pushButton = QPushButton(self.frame_9)
        self.add_object_pushButton.setObjectName(u"add_object_pushButton")
        icon84 = QIcon()
        icon84.addFile(u":/Icons/icons/plus.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.add_object_pushButton.setIcon(icon84)

        self.horizontalLayout_25.addWidget(self.add_object_pushButton)

        self.delete_selected_objects_pushButton = QPushButton(self.frame_9)
        self.delete_selected_objects_pushButton.setObjectName(u"delete_selected_objects_pushButton")
        icon85 = QIcon()
        icon85.addFile(u":/Icons/icons/minus.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.delete_selected_objects_pushButton.setIcon(icon85)

        self.horizontalLayout_25.addWidget(self.delete_selected_objects_pushButton)


        self.verticalLayout_20.addWidget(self.frame_9)

        self.tabWidget_5.addTab(self.tab_15, icon50, "")
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.verticalLayout_11 = QVBoxLayout(self.tab_2)
        self.verticalLayout_11.setObjectName(u"verticalLayout_11")
        self.verticalLayout_11.setContentsMargins(0, 6, 8, 6)
        self.frame_17 = QFrame(self.tab_2)
        self.frame_17.setObjectName(u"frame_17")
        self.frame_17.setMaximumSize(QSize(16777215, 16777215))
        self.frame_17.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_17.setFrameShadow(QFrame.Shadow.Plain)
        self.horizontalLayout_9 = QHBoxLayout(self.frame_17)
        self.horizontalLayout_9.setObjectName(u"horizontalLayout_9")
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.associationsComboBox = QComboBox(self.frame_17)
        self.associationsComboBox.setObjectName(u"associationsComboBox")
        self.associationsComboBox.setMinimumSize(QSize(250, 0))

        self.horizontalLayout_9.addWidget(self.associationsComboBox)

        self.association_units_label = QLabel(self.frame_17)
        self.association_units_label.setObjectName(u"association_units_label")

        self.horizontalLayout_9.addWidget(self.association_units_label)

        self.horizontalSpacer_8 = QSpacerItem(794, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_9.addItem(self.horizontalSpacer_8)


        self.verticalLayout_11.addWidget(self.frame_17)

        self.frame_20 = QFrame(self.tab_2)
        self.frame_20.setObjectName(u"frame_20")
        self.frame_20.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_20.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_14 = QVBoxLayout(self.frame_20)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.associationsTableView = QTableView(self.frame_20)
        self.associationsTableView.setObjectName(u"associationsTableView")
        self.associationsTableView.setFont(font1)

        self.verticalLayout_14.addWidget(self.associationsTableView)


        self.verticalLayout_11.addWidget(self.frame_20)

        icon86 = QIcon()
        icon86.addFile(u":/Icons/icons/area_transfer.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_5.addTab(self.tab_2, icon86, "")
        self.tab_16 = QWidget()
        self.tab_16.setObjectName(u"tab_16")
        self.verticalLayout_42 = QVBoxLayout(self.tab_16)
        self.verticalLayout_42.setObjectName(u"verticalLayout_42")
        self.verticalLayout_42.setContentsMargins(0, 6, 8, 6)
        self.frame = QFrame(self.tab_16)
        self.frame.setObjectName(u"frame")
        self.frame.setFrameShape(QFrame.Shape.NoFrame)
        self.frame.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout = QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.device_type_magnitude_comboBox = QComboBox(self.frame)
        self.device_type_magnitude_comboBox.setObjectName(u"device_type_magnitude_comboBox")
        self.device_type_magnitude_comboBox.setMinimumSize(QSize(250, 0))

        self.horizontalLayout.addWidget(self.device_type_magnitude_comboBox)

        self.new_profiles_structure_pushButton = QPushButton(self.frame)
        self.new_profiles_structure_pushButton.setObjectName(u"new_profiles_structure_pushButton")
        self.new_profiles_structure_pushButton.setIcon(icon22)

        self.horizontalLayout.addWidget(self.new_profiles_structure_pushButton)

        self.delete_profiles_structure_pushButton = QPushButton(self.frame)
        self.delete_profiles_structure_pushButton.setObjectName(u"delete_profiles_structure_pushButton")
        icon87 = QIcon()
        icon87.addFile(u":/Icons/icons/new (delete).svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.delete_profiles_structure_pushButton.setIcon(icon87)

        self.horizontalLayout.addWidget(self.delete_profiles_structure_pushButton)

        self.edit_profiles_pushButton = QPushButton(self.frame)
        self.edit_profiles_pushButton.setObjectName(u"edit_profiles_pushButton")
        icon88 = QIcon()
        icon88.addFile(u":/Icons/icons/import_profiles.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.edit_profiles_pushButton.setIcon(icon88)
        self.edit_profiles_pushButton.setFlat(False)

        self.horizontalLayout.addWidget(self.edit_profiles_pushButton)

        self.edit_profiles_from_models_pushButton = QPushButton(self.frame)
        self.edit_profiles_from_models_pushButton.setObjectName(u"edit_profiles_from_models_pushButton")
        icon89 = QIcon()
        icon89.addFile(u":/Icons/icons/import_models.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.edit_profiles_from_models_pushButton.setIcon(icon89)
        self.edit_profiles_from_models_pushButton.setFlat(False)

        self.horizontalLayout.addWidget(self.edit_profiles_from_models_pushButton)

        self.horizontalSpacer = QSpacerItem(183, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer)

        self.plot_time_series_pushButton = QPushButton(self.frame)
        self.plot_time_series_pushButton.setObjectName(u"plot_time_series_pushButton")
        icon90 = QIcon()
        icon90.addFile(u":/Icons/icons/plot.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.plot_time_series_pushButton.setIcon(icon90)

        self.horizontalLayout.addWidget(self.plot_time_series_pushButton)


        self.verticalLayout_42.addWidget(self.frame)

        self.profiles_tableView = QTableView(self.tab_16)
        self.profiles_tableView.setObjectName(u"profiles_tableView")
        self.profiles_tableView.setFont(font1)
        self.profiles_tableView.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.profiles_tableView.setAlternatingRowColors(True)
        self.profiles_tableView.setSelectionMode(QAbstractItemView.SelectionMode.ContiguousSelection)

        self.verticalLayout_42.addWidget(self.profiles_tableView)

        self.frame_12 = QFrame(self.tab_16)
        self.frame_12.setObjectName(u"frame_12")
        self.frame_12.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_12.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_4 = QHBoxLayout(self.frame_12)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.copy_profile_pushButton = QPushButton(self.frame_12)
        self.copy_profile_pushButton.setObjectName(u"copy_profile_pushButton")
        icon91 = QIcon()
        icon91.addFile(u":/Icons/icons/copy.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.copy_profile_pushButton.setIcon(icon91)

        self.horizontalLayout_4.addWidget(self.copy_profile_pushButton)

        self.paste_profiles_pushButton = QPushButton(self.frame_12)
        self.paste_profiles_pushButton.setObjectName(u"paste_profiles_pushButton")
        icon92 = QIcon()
        icon92.addFile(u":/Icons/icons/paste.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.paste_profiles_pushButton.setIcon(icon92)

        self.horizontalLayout_4.addWidget(self.paste_profiles_pushButton)

        self.set_linear_combination_profile_pushButton = QPushButton(self.frame_12)
        self.set_linear_combination_profile_pushButton.setObjectName(u"set_linear_combination_profile_pushButton")
        icon93 = QIcon()
        icon93.addFile(u":/Icons/icons/copy2right.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.set_linear_combination_profile_pushButton.setIcon(icon93)

        self.horizontalLayout_4.addWidget(self.set_linear_combination_profile_pushButton)

        self.device_type_magnitude_comboBox_2 = QComboBox(self.frame_12)
        self.device_type_magnitude_comboBox_2.setObjectName(u"device_type_magnitude_comboBox_2")
        self.device_type_magnitude_comboBox_2.setMinimumSize(QSize(200, 0))

        self.horizontalLayout_4.addWidget(self.device_type_magnitude_comboBox_2)

        self.horizontalSpacer_13 = QSpacerItem(267, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_4.addItem(self.horizontalSpacer_13)

        self.profile_add_pushButton = QPushButton(self.frame_12)
        self.profile_add_pushButton.setObjectName(u"profile_add_pushButton")
        self.profile_add_pushButton.setIcon(icon84)

        self.horizontalLayout_4.addWidget(self.profile_add_pushButton)

        self.profile_subtract_pushButton = QPushButton(self.frame_12)
        self.profile_subtract_pushButton.setObjectName(u"profile_subtract_pushButton")
        self.profile_subtract_pushButton.setIcon(icon85)

        self.horizontalLayout_4.addWidget(self.profile_subtract_pushButton)

        self.profile_multiply_pushButton = QPushButton(self.frame_12)
        self.profile_multiply_pushButton.setObjectName(u"profile_multiply_pushButton")
        icon94 = QIcon()
        icon94.addFile(u":/Icons/icons/multiply.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.profile_multiply_pushButton.setIcon(icon94)

        self.horizontalLayout_4.addWidget(self.profile_multiply_pushButton)

        self.profile_divide_pushButton = QPushButton(self.frame_12)
        self.profile_divide_pushButton.setObjectName(u"profile_divide_pushButton")
        icon95 = QIcon()
        icon95.addFile(u":/Icons/icons/divide.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.profile_divide_pushButton.setIcon(icon95)

        self.horizontalLayout_4.addWidget(self.profile_divide_pushButton)

        self.set_profile_value_pushButton = QPushButton(self.frame_12)
        self.set_profile_value_pushButton.setObjectName(u"set_profile_value_pushButton")
        icon96 = QIcon()
        icon96.addFile(u":/Icons/icons/copy2up.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.set_profile_value_pushButton.setIcon(icon96)

        self.horizontalLayout_4.addWidget(self.set_profile_value_pushButton)

        self.profile_factor_doubleSpinBox = QDoubleSpinBox(self.frame_12)
        self.profile_factor_doubleSpinBox.setObjectName(u"profile_factor_doubleSpinBox")
        self.profile_factor_doubleSpinBox.setMinimum(-999999.000000000000000)
        self.profile_factor_doubleSpinBox.setMaximum(9999999.000000000000000)
        self.profile_factor_doubleSpinBox.setValue(1.000000000000000)

        self.horizontalLayout_4.addWidget(self.profile_factor_doubleSpinBox)


        self.verticalLayout_42.addWidget(self.frame_12)

        icon97 = QIcon()
        icon97.addFile(u":/Icons/icons/time_series.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_5.addTab(self.tab_16, icon97, "")

        self.verticalLayout_26.addWidget(self.tabWidget_5)

        self.dataStructuresSplitter.addWidget(self.frame_38)

        self.verticalLayout_8.addWidget(self.dataStructuresSplitter)

        self.tabWidget_3.addTab(self.DataTab, icon50, "")
        self.compiledArraysTab = QWidget()
        self.compiledArraysTab.setObjectName(u"compiledArraysTab")
        self.horizontalLayout_7 = QHBoxLayout(self.compiledArraysTab)
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.simulationDataSplitter = QSplitter(self.compiledArraysTab)
        self.simulationDataSplitter.setObjectName(u"simulationDataSplitter")
        self.simulationDataSplitter.setOrientation(Qt.Orientation.Horizontal)
        self.frame_28 = QFrame(self.simulationDataSplitter)
        self.frame_28.setObjectName(u"frame_28")
        self.frame_28.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_28.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_19 = QGridLayout(self.frame_28)
        self.gridLayout_19.setObjectName(u"gridLayout_19")
        self.gridLayout_19.setContentsMargins(-1, -1, 0, -1)
        self.simulation_data_island_comboBox = QComboBox(self.frame_28)
        self.simulation_data_island_comboBox.setObjectName(u"simulation_data_island_comboBox")

        self.gridLayout_19.addWidget(self.simulation_data_island_comboBox, 0, 2, 1, 2)

        self.exportSimulationDataButton = QPushButton(self.frame_28)
        self.exportSimulationDataButton.setObjectName(u"exportSimulationDataButton")
        self.exportSimulationDataButton.setMaximumSize(QSize(32, 16777215))
        self.exportSimulationDataButton.setIcon(icon19)

        self.gridLayout_19.addWidget(self.exportSimulationDataButton, 0, 1, 1, 1)

        self.compute_simulation_data_pushButton = QPushButton(self.frame_28)
        self.compute_simulation_data_pushButton.setObjectName(u"compute_simulation_data_pushButton")
        self.compute_simulation_data_pushButton.setMaximumSize(QSize(32, 16777215))
        icon98 = QIcon()
        icon98.addFile(u":/Icons/icons/calculator.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.compute_simulation_data_pushButton.setIcon(icon98)

        self.gridLayout_19.addWidget(self.compute_simulation_data_pushButton, 0, 0, 1, 1)

        self.simulationDataStructuresTreeView = QTreeView(self.frame_28)
        self.simulationDataStructuresTreeView.setObjectName(u"simulationDataStructuresTreeView")
        self.simulationDataStructuresTreeView.setAnimated(True)

        self.gridLayout_19.addWidget(self.simulationDataStructuresTreeView, 1, 0, 1, 4)

        self.simulationDataSplitter.addWidget(self.frame_28)
        self.frame_29 = QFrame(self.simulationDataSplitter)
        self.frame_29.setObjectName(u"frame_29")
        self.frame_29.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_29.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_23 = QGridLayout(self.frame_29)
        self.gridLayout_23.setObjectName(u"gridLayout_23")
        self.gridLayout_23.setContentsMargins(0, 8, -1, -1)
        self.arrayModeComboBox = QComboBox(self.frame_29)
        self.arrayModeComboBox.setObjectName(u"arrayModeComboBox")

        self.gridLayout_23.addWidget(self.arrayModeComboBox, 0, 3, 1, 1)

        self.horizontalSpacer_23 = QSpacerItem(510, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_23.addItem(self.horizontalSpacer_23, 0, 5, 1, 1)

        self.simulationDataStructureTableView = QTableView(self.frame_29)
        self.simulationDataStructureTableView.setObjectName(u"simulationDataStructureTableView")

        self.gridLayout_23.addWidget(self.simulationDataStructureTableView, 1, 0, 1, 7)

        self.copyArraysToNumpyButton = QPushButton(self.frame_29)
        self.copyArraysToNumpyButton.setObjectName(u"copyArraysToNumpyButton")
        icon99 = QIcon()
        icon99.addFile(u":/Icons/icons/array.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.copyArraysToNumpyButton.setIcon(icon99)

        self.gridLayout_23.addWidget(self.copyArraysToNumpyButton, 0, 1, 1, 1)

        self.plotArraysButton = QPushButton(self.frame_29)
        self.plotArraysButton.setObjectName(u"plotArraysButton")
        self.plotArraysButton.setMinimumSize(QSize(32, 0))
        self.plotArraysButton.setIcon(icon90)

        self.gridLayout_23.addWidget(self.plotArraysButton, 0, 6, 1, 1)

        self.copyArraysButton = QPushButton(self.frame_29)
        self.copyArraysButton.setObjectName(u"copyArraysButton")
        self.copyArraysButton.setMinimumSize(QSize(32, 0))
        self.copyArraysButton.setIcon(icon91)

        self.gridLayout_23.addWidget(self.copyArraysButton, 0, 2, 1, 1)

        self.simulationDataSplitter.addWidget(self.frame_29)

        self.horizontalLayout_7.addWidget(self.simulationDataSplitter)

        icon100 = QIcon()
        icon100.addFile(u":/Icons/icons/spmat.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_3.addTab(self.compiledArraysTab, icon100, "")
        self.commentsTab = QWidget()
        self.commentsTab.setObjectName(u"commentsTab")
        self.verticalLayout_18 = QVBoxLayout(self.commentsTab)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.comments_textEdit = QTextEdit(self.commentsTab)
        self.comments_textEdit.setObjectName(u"comments_textEdit")

        self.verticalLayout_18.addWidget(self.comments_textEdit)

        icon101 = QIcon()
        icon101.addFile(u":/Icons/icons/edit.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_3.addTab(self.commentsTab, icon101, "")

        self.verticalLayout_9.addWidget(self.tabWidget_3)

        self.tabWidget.addTab(self.GridTab, icon60, "")
        self.ResultsTab = QWidget()
        self.ResultsTab.setObjectName(u"ResultsTab")
        self.verticalLayout_13 = QVBoxLayout(self.ResultsTab)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.frame_33 = QFrame(self.ResultsTab)
        self.frame_33.setObjectName(u"frame_33")
        self.frame_33.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_33.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_28 = QVBoxLayout(self.frame_33)
        self.verticalLayout_28.setObjectName(u"verticalLayout_28")
        self.verticalLayout_28.setContentsMargins(0, 0, 0, 0)
        self.results_splitter = QSplitter(self.frame_33)
        self.results_splitter.setObjectName(u"results_splitter")
        self.results_splitter.setOrientation(Qt.Orientation.Horizontal)
        self.splitter = QSplitter(self.results_splitter)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setOrientation(Qt.Orientation.Vertical)
        self.frame_61 = QFrame(self.splitter)
        self.frame_61.setObjectName(u"frame_61")
        self.frame_61.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_61.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_10 = QVBoxLayout(self.frame_61)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.verticalLayout_10.setContentsMargins(-1, 6, 0, -1)
        self.results_treeView = QTreeView(self.frame_61)
        self.results_treeView.setObjectName(u"results_treeView")
        self.results_treeView.setAnimated(True)

        self.verticalLayout_10.addWidget(self.results_treeView)

        self.frame_62 = QFrame(self.frame_61)
        self.frame_62.setObjectName(u"frame_62")
        self.frame_62.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_62.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_34 = QHBoxLayout(self.frame_62)
        self.horizontalLayout_34.setObjectName(u"horizontalLayout_34")
        self.horizontalLayout_34.setContentsMargins(0, 0, 0, 1)
        self.label_16 = QLabel(self.frame_62)
        self.label_16.setObjectName(u"label_16")
        self.label_16.setMinimumSize(QSize(0, 24))
        palette3 = QPalette()
        brush2 = QBrush(QColor(119, 118, 123, 255))
        brush2.setStyle(Qt.SolidPattern)
        palette3.setBrush(QPalette.Active, QPalette.WindowText, brush2)
        palette3.setBrush(QPalette.Inactive, QPalette.WindowText, brush2)
        palette3.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_16.setPalette(palette3)

        self.horizontalLayout_34.addWidget(self.label_16)

        self.horizontalSpacer_22 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_34.addItem(self.horizontalSpacer_22)

        self.deleteDriverButton = QPushButton(self.frame_62)
        self.deleteDriverButton.setObjectName(u"deleteDriverButton")
        self.deleteDriverButton.setIcon(icon85)

        self.horizontalLayout_34.addWidget(self.deleteDriverButton)


        self.verticalLayout_10.addWidget(self.frame_62)

        self.splitter.addWidget(self.frame_61)
        self.frame_14 = QFrame(self.splitter)
        self.frame_14.setObjectName(u"frame_14")
        self.frame_14.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_14.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_6 = QVBoxLayout(self.frame_14)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.verticalLayout_6.setContentsMargins(-1, -1, 0, -1)
        self.diskSessionsTreeView = QTreeView(self.frame_14)
        self.diskSessionsTreeView.setObjectName(u"diskSessionsTreeView")
        self.diskSessionsTreeView.setAnimated(True)

        self.verticalLayout_6.addWidget(self.diskSessionsTreeView)

        self.frame_60 = QFrame(self.frame_14)
        self.frame_60.setObjectName(u"frame_60")
        self.frame_60.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_60.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_33 = QHBoxLayout(self.frame_60)
        self.horizontalLayout_33.setObjectName(u"horizontalLayout_33")
        self.horizontalLayout_33.setContentsMargins(0, 0, 0, 0)
        self.label_37 = QLabel(self.frame_60)
        self.label_37.setObjectName(u"label_37")
        palette4 = QPalette()
        palette4.setBrush(QPalette.Active, QPalette.WindowText, brush2)
        palette4.setBrush(QPalette.Inactive, QPalette.WindowText, brush2)
        palette4.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_37.setPalette(palette4)

        self.horizontalLayout_33.addWidget(self.label_37)

        self.horizontalSpacer_21 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_33.addItem(self.horizontalSpacer_21)

        self.loadResultFromDiskButton = QPushButton(self.frame_60)
        self.loadResultFromDiskButton.setObjectName(u"loadResultFromDiskButton")
        self.loadResultFromDiskButton.setIcon(icon1)

        self.horizontalLayout_33.addWidget(self.loadResultFromDiskButton)


        self.verticalLayout_6.addWidget(self.frame_60)

        self.splitter.addWidget(self.frame_14)
        self.results_splitter.addWidget(self.splitter)
        self.tabWidget_4 = QTabWidget(self.results_splitter)
        self.tabWidget_4.setObjectName(u"tabWidget_4")
        self.tabWidget_4.setTabPosition(QTabWidget.TabPosition.East)
        self.tabWidget_4.setDocumentMode(True)
        self.tab_7 = QWidget()
        self.tab_7.setObjectName(u"tab_7")
        self.verticalLayout_40 = QVBoxLayout(self.tab_7)
        self.verticalLayout_40.setObjectName(u"verticalLayout_40")
        self.verticalLayout_40.setContentsMargins(0, 0, 0, 0)
        self.frame_16 = QFrame(self.tab_7)
        self.frame_16.setObjectName(u"frame_16")
        self.frame_16.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_16.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_23 = QVBoxLayout(self.frame_16)
        self.verticalLayout_23.setObjectName(u"verticalLayout_23")
        self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)

        self.verticalLayout_40.addWidget(self.frame_16)

        self.frame_5 = QFrame(self.tab_7)
        self.frame_5.setObjectName(u"frame_5")
        self.frame_5.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_5.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_24 = QVBoxLayout(self.frame_5)
        self.verticalLayout_24.setObjectName(u"verticalLayout_24")
        self.verticalLayout_24.setContentsMargins(0, 0, 8, 8)
        self.resultsTableView = QTableView(self.frame_5)
        self.resultsTableView.setObjectName(u"resultsTableView")
        self.resultsTableView.setFont(font1)
        self.resultsTableView.setAlternatingRowColors(True)
        self.resultsTableView.setSelectionMode(QAbstractItemView.SelectionMode.ExtendedSelection)
        self.resultsTableView.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectItems)

        self.verticalLayout_24.addWidget(self.resultsTableView)

        self.frame_8 = QFrame(self.frame_5)
        self.frame_8.setObjectName(u"frame_8")
        self.frame_8.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_8.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_2 = QHBoxLayout(self.frame_8)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.search_results_lineEdit = QLineEdit(self.frame_8)
        self.search_results_lineEdit.setObjectName(u"search_results_lineEdit")

        self.horizontalLayout_2.addWidget(self.search_results_lineEdit)

        self.search_results_Button = QPushButton(self.frame_8)
        self.search_results_Button.setObjectName(u"search_results_Button")
        self.search_results_Button.setIcon(icon63)

        self.horizontalLayout_2.addWidget(self.search_results_Button)

        self.horizontalSpacer_20 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_20)

        self.units_label = QLabel(self.frame_8)
        self.units_label.setObjectName(u"units_label")

        self.horizontalLayout_2.addWidget(self.units_label)

        self.results_traspose_checkBox = QCheckBox(self.frame_8)
        self.results_traspose_checkBox.setObjectName(u"results_traspose_checkBox")
        icon102 = QIcon()
        icon102.addFile(u":/Icons/icons/transpose.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.results_traspose_checkBox.setIcon(icon102)

        self.horizontalLayout_2.addWidget(self.results_traspose_checkBox)

        self.results_as_cdf_checkBox = QCheckBox(self.frame_8)
        self.results_as_cdf_checkBox.setObjectName(u"results_as_cdf_checkBox")
        icon103 = QIcon()
        icon103.addFile(u":/Icons/icons/cdf.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.results_as_cdf_checkBox.setIcon(icon103)

        self.horizontalLayout_2.addWidget(self.results_as_cdf_checkBox)

        self.results_as_abs_checkBox = QCheckBox(self.frame_8)
        self.results_as_abs_checkBox.setObjectName(u"results_as_abs_checkBox")
        icon104 = QIcon()
        icon104.addFile(u":/Icons/icons/abs.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.results_as_abs_checkBox.setIcon(icon104)

        self.horizontalLayout_2.addWidget(self.results_as_abs_checkBox)

        self.stacked_plot_checkBox = QCheckBox(self.frame_8)
        self.stacked_plot_checkBox.setObjectName(u"stacked_plot_checkBox")
        icon105 = QIcon()
        icon105.addFile(u":/Icons/icons/stacked_plot.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.stacked_plot_checkBox.setIcon(icon105)

        self.horizontalLayout_2.addWidget(self.stacked_plot_checkBox)

        self.copy_results_pushButton = QPushButton(self.frame_8)
        self.copy_results_pushButton.setObjectName(u"copy_results_pushButton")
        self.copy_results_pushButton.setIcon(icon91)

        self.horizontalLayout_2.addWidget(self.copy_results_pushButton)

        self.copy_numpy_button = QPushButton(self.frame_8)
        self.copy_numpy_button.setObjectName(u"copy_numpy_button")
        self.copy_numpy_button.setIcon(icon99)

        self.horizontalLayout_2.addWidget(self.copy_numpy_button)

        self.saveResultsButton = QPushButton(self.frame_8)
        self.saveResultsButton.setObjectName(u"saveResultsButton")
        self.saveResultsButton.setIcon(icon19)

        self.horizontalLayout_2.addWidget(self.saveResultsButton)

        self.plot_data_pushButton = QPushButton(self.frame_8)
        self.plot_data_pushButton.setObjectName(u"plot_data_pushButton")
        self.plot_data_pushButton.setIcon(icon90)

        self.horizontalLayout_2.addWidget(self.plot_data_pushButton)


        self.verticalLayout_24.addWidget(self.frame_8)


        self.verticalLayout_40.addWidget(self.frame_5)

        self.tabWidget_4.addTab(self.tab_7, icon99, "")
        self.tab_14 = QWidget()
        self.tab_14.setObjectName(u"tab_14")
        self.verticalLayout_41 = QVBoxLayout(self.tab_14)
        self.verticalLayout_41.setObjectName(u"verticalLayout_41")
        self.verticalLayout_41.setContentsMargins(-1, 6, -1, -1)
        self.resultsLogsTreeView = QTreeView(self.tab_14)
        self.resultsLogsTreeView.setObjectName(u"resultsLogsTreeView")
        self.resultsLogsTreeView.setFont(font1)
        self.resultsLogsTreeView.setFrameShape(QFrame.Shape.StyledPanel)

        self.verticalLayout_41.addWidget(self.resultsLogsTreeView)

        self.frame_56 = QFrame(self.tab_14)
        self.frame_56.setObjectName(u"frame_56")
        self.frame_56.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_56.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_5 = QHBoxLayout(self.frame_56)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalSpacer_16 = QSpacerItem(866, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_5.addItem(self.horizontalSpacer_16)

        self.saveResultsLogsButton = QPushButton(self.frame_56)
        self.saveResultsLogsButton.setObjectName(u"saveResultsLogsButton")
        self.saveResultsLogsButton.setIcon(icon19)

        self.horizontalLayout_5.addWidget(self.saveResultsLogsButton)


        self.verticalLayout_41.addWidget(self.frame_56)

        self.tabWidget_4.addTab(self.tab_14, icon50, "")
        self.results_splitter.addWidget(self.tabWidget_4)

        self.verticalLayout_28.addWidget(self.results_splitter)


        self.verticalLayout_13.addWidget(self.frame_33)

        self.tabWidget.addTab(self.ResultsTab, icon90, "")
        self.main_console_tab = QWidget()
        self.main_console_tab.setObjectName(u"main_console_tab")
        self.verticalLayout_22 = QVBoxLayout(self.main_console_tab)
        self.verticalLayout_22.setObjectName(u"verticalLayout_22")
        self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.frame_10 = QFrame(self.main_console_tab)
        self.frame_10.setObjectName(u"frame_10")
        self.frame_10.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_10.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_34 = QVBoxLayout(self.frame_10)
        self.verticalLayout_34.setObjectName(u"verticalLayout_34")
        self.verticalLayout_34.setContentsMargins(0, 0, 0, 0)
        self.splitter_4 = QSplitter(self.frame_10)
        self.splitter_4.setObjectName(u"splitter_4")
        self.splitter_4.setOrientation(Qt.Orientation.Horizontal)
        self.frame_11 = QFrame(self.splitter_4)
        self.frame_11.setObjectName(u"frame_11")
        self.frame_11.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_11.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_35 = QVBoxLayout(self.frame_11)
        self.verticalLayout_35.setObjectName(u"verticalLayout_35")
        self.verticalLayout_35.setContentsMargins(6, 6, 6, 6)
        self.frame_55 = QFrame(self.frame_11)
        self.frame_55.setObjectName(u"frame_55")
        self.frame_55.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_55.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_3 = QHBoxLayout(self.frame_55)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.clearSourceCodeButton = QPushButton(self.frame_55)
        self.clearSourceCodeButton.setObjectName(u"clearSourceCodeButton")
        self.clearSourceCodeButton.setIcon(icon4)

        self.horizontalLayout_3.addWidget(self.clearSourceCodeButton)

        self.saveSourceCodeButton = QPushButton(self.frame_55)
        self.saveSourceCodeButton.setObjectName(u"saveSourceCodeButton")
        self.saveSourceCodeButton.setIcon(icon19)

        self.horizontalLayout_3.addWidget(self.saveSourceCodeButton)

        self.label_91 = QLabel(self.frame_55)
        self.label_91.setObjectName(u"label_91")

        self.horizontalLayout_3.addWidget(self.label_91)

        self.sourceCodeNameLineEdit = QLineEdit(self.frame_55)
        self.sourceCodeNameLineEdit.setObjectName(u"sourceCodeNameLineEdit")

        self.horizontalLayout_3.addWidget(self.sourceCodeNameLineEdit)

        self.label_98 = QLabel(self.frame_55)
        self.label_98.setObjectName(u"label_98")

        self.horizontalLayout_3.addWidget(self.label_98)

        self.runSourceCodeButton = QPushButton(self.frame_55)
        self.runSourceCodeButton.setObjectName(u"runSourceCodeButton")
        icon106 = QIcon()
        icon106.addFile(u":/Icons/icons/next.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.runSourceCodeButton.setIcon(icon106)

        self.horizontalLayout_3.addWidget(self.runSourceCodeButton)


        self.verticalLayout_35.addWidget(self.frame_55)

        self.sourceCodeTextEdit = QPlainTextEdit(self.frame_11)
        self.sourceCodeTextEdit.setObjectName(u"sourceCodeTextEdit")
        self.sourceCodeTextEdit.setFrameShape(QFrame.Shape.StyledPanel)

        self.verticalLayout_35.addWidget(self.sourceCodeTextEdit)

        self.splitter_4.addWidget(self.frame_11)
        self.console_splitter = QSplitter(self.splitter_4)
        self.console_splitter.setObjectName(u"console_splitter")
        self.console_splitter.setOrientation(Qt.Orientation.Vertical)
        self.frame_53 = QFrame(self.console_splitter)
        self.frame_53.setObjectName(u"frame_53")
        self.frame_53.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_53.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_32 = QVBoxLayout(self.frame_53)
        self.verticalLayout_32.setObjectName(u"verticalLayout_32")
        self.verticalLayout_32.setContentsMargins(6, 6, 6, 6)
        self.tabWidget_2 = QTabWidget(self.frame_53)
        self.tabWidget_2.setObjectName(u"tabWidget_2")
        self.tabWidget_2.setTabPosition(QTabWidget.TabPosition.East)
        self.tabWidget_2.setDocumentMode(True)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setMovable(True)
        self.pythonConsoleTab = QWidget()
        self.pythonConsoleTab.setObjectName(u"pythonConsoleTab")
        self.verticalLayout_33 = QVBoxLayout(self.pythonConsoleTab)
        self.verticalLayout_33.setObjectName(u"verticalLayout_33")
        self.verticalLayout_33.setContentsMargins(0, 0, 0, 0)
        self.consoleFrame = QFrame(self.pythonConsoleTab)
        self.consoleFrame.setObjectName(u"consoleFrame")
        self.consoleFrame.setFrameShape(QFrame.Shape.NoFrame)
        self.consoleFrame.setFrameShadow(QFrame.Shadow.Plain)
        self.verticalLayout_16 = QVBoxLayout(self.consoleFrame)
        self.verticalLayout_16.setObjectName(u"verticalLayout_16")
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.frame_57 = QFrame(self.consoleFrame)
        self.frame_57.setObjectName(u"frame_57")
        self.frame_57.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_57.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_11 = QHBoxLayout(self.frame_57)
        self.horizontalLayout_11.setObjectName(u"horizontalLayout_11")
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalSpacer_11 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_11.addItem(self.horizontalSpacer_11)

        self.clearConsoleButton = QPushButton(self.frame_57)
        self.clearConsoleButton.setObjectName(u"clearConsoleButton")
        self.clearConsoleButton.setIcon(icon34)

        self.horizontalLayout_11.addWidget(self.clearConsoleButton)


        self.verticalLayout_16.addWidget(self.frame_57)

        self.consoleLayout = QVBoxLayout()
        self.consoleLayout.setObjectName(u"consoleLayout")

        self.verticalLayout_16.addLayout(self.consoleLayout)


        self.verticalLayout_33.addWidget(self.consoleFrame)

        icon107 = QIcon()
        icon107.addFile(u":/Icons/icons/console.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tabWidget_2.addTab(self.pythonConsoleTab, icon107, "")
        self.sourceCodeTab = QWidget()
        self.sourceCodeTab.setObjectName(u"sourceCodeTab")
        self.verticalLayout_39 = QVBoxLayout(self.sourceCodeTab)
        self.verticalLayout_39.setObjectName(u"verticalLayout_39")
        self.verticalLayout_39.setContentsMargins(6, 0, 6, 0)
        self.sourceCodeTreeView = QTreeView(self.sourceCodeTab)
        self.sourceCodeTreeView.setObjectName(u"sourceCodeTreeView")
        self.sourceCodeTreeView.setFrameShape(QFrame.Shape.StyledPanel)

        self.verticalLayout_39.addWidget(self.sourceCodeTreeView)

        self.tabWidget_2.addTab(self.sourceCodeTab, icon50, "")

        self.verticalLayout_32.addWidget(self.tabWidget_2)

        self.console_splitter.addWidget(self.frame_53)
        self.splitter_4.addWidget(self.console_splitter)

        self.verticalLayout_34.addWidget(self.splitter_4)


        self.verticalLayout_22.addWidget(self.frame_10)

        self.tabWidget.addTab(self.main_console_tab, icon107, "")
        self.SettingsTab = QWidget()
        self.SettingsTab.setObjectName(u"SettingsTab")
        self.gridLayout_8 = QGridLayout(self.SettingsTab)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.frame_7 = QFrame(self.SettingsTab)
        self.frame_7.setObjectName(u"frame_7")
        self.frame_7.setMinimumSize(QSize(0, 0))
        self.frame_7.setMaximumSize(QSize(250, 16777215))
        self.frame_7.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_7.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_12 = QVBoxLayout(self.frame_7)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.frame_41 = QFrame(self.frame_7)
        self.frame_41.setObjectName(u"frame_41")
        self.frame_41.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_41.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_13 = QHBoxLayout(self.frame_41)
        self.horizontalLayout_13.setObjectName(u"horizontalLayout_13")
        self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.label_68 = QLabel(self.frame_41)
        self.label_68.setObjectName(u"label_68")
        self.label_68.setMinimumSize(QSize(24, 24))
        self.label_68.setMaximumSize(QSize(24, 24))
        self.label_68.setPixmap(QPixmap(u":/Icons/icons/gear.svg"))
        self.label_68.setScaledContents(True)

        self.horizontalLayout_13.addWidget(self.label_68)

        self.label_69 = QLabel(self.frame_41)
        self.label_69.setObjectName(u"label_69")
        palette5 = QPalette()
        palette5.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette5.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette5.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_69.setPalette(palette5)
        font4 = QFont()
        font4.setPointSize(16)
        self.label_69.setFont(font4)
        self.label_69.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_13.addWidget(self.label_69)


        self.verticalLayout_12.addWidget(self.frame_41)

        self.line_5 = QFrame(self.frame_7)
        self.line_5.setObjectName(u"line_5")
        palette6 = QPalette()
        brush3 = QBrush(QColor(186, 189, 182, 255))
        brush3.setStyle(Qt.SolidPattern)
        palette6.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette6.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette6.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_5.setPalette(palette6)
        self.line_5.setFrameShadow(QFrame.Shadow.Plain)
        self.line_5.setLineWidth(4)
        self.line_5.setFrameShape(QFrame.Shape.HLine)

        self.verticalLayout_12.addWidget(self.line_5)

        self.frame_25 = QFrame(self.frame_7)
        self.frame_25.setObjectName(u"frame_25")
        self.frame_25.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_25.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_17 = QVBoxLayout(self.frame_25)
        self.verticalLayout_17.setSpacing(2)
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.label_82 = QLabel(self.frame_25)
        self.label_82.setObjectName(u"label_82")
        self.label_82.setFont(font1)

        self.verticalLayout_17.addWidget(self.label_82)

        self.grid_name_line_edit = QLineEdit(self.frame_25)
        self.grid_name_line_edit.setObjectName(u"grid_name_line_edit")

        self.verticalLayout_17.addWidget(self.grid_name_line_edit)

        self.label_57 = QLabel(self.frame_25)
        self.label_57.setObjectName(u"label_57")
        self.label_57.setFont(font1)

        self.verticalLayout_17.addWidget(self.label_57)

        self.sbase_doubleSpinBox = QDoubleSpinBox(self.frame_25)
        self.sbase_doubleSpinBox.setObjectName(u"sbase_doubleSpinBox")
        self.sbase_doubleSpinBox.setFont(font1)
        self.sbase_doubleSpinBox.setDecimals(0)
        self.sbase_doubleSpinBox.setMinimum(1.000000000000000)
        self.sbase_doubleSpinBox.setMaximum(10000000000000000000.000000000000000)
        self.sbase_doubleSpinBox.setValue(100.000000000000000)

        self.verticalLayout_17.addWidget(self.sbase_doubleSpinBox)

        self.label_58 = QLabel(self.frame_25)
        self.label_58.setObjectName(u"label_58")
        self.label_58.setFont(font1)

        self.verticalLayout_17.addWidget(self.label_58)

        self.fbase_doubleSpinBox = QDoubleSpinBox(self.frame_25)
        self.fbase_doubleSpinBox.setObjectName(u"fbase_doubleSpinBox")
        self.fbase_doubleSpinBox.setFont(font1)
        self.fbase_doubleSpinBox.setDecimals(0)
        self.fbase_doubleSpinBox.setMinimum(50.000000000000000)
        self.fbase_doubleSpinBox.setMaximum(60.000000000000000)
        self.fbase_doubleSpinBox.setSingleStep(10.000000000000000)

        self.verticalLayout_17.addWidget(self.fbase_doubleSpinBox)

        self.label_101 = QLabel(self.frame_25)
        self.label_101.setObjectName(u"label_101")
        self.label_101.setFont(font1)

        self.verticalLayout_17.addWidget(self.label_101)

        self.snapshot_dateTimeEdit = QDateTimeEdit(self.frame_25)
        self.snapshot_dateTimeEdit.setObjectName(u"snapshot_dateTimeEdit")
        self.snapshot_dateTimeEdit.setFont(font1)
        self.snapshot_dateTimeEdit.setCalendarPopup(True)

        self.verticalLayout_17.addWidget(self.snapshot_dateTimeEdit)

        self.label_40 = QLabel(self.frame_25)
        self.label_40.setObjectName(u"label_40")

        self.verticalLayout_17.addWidget(self.label_40)

        self.frame_43 = QFrame(self.frame_25)
        self.frame_43.setObjectName(u"frame_43")
        self.frame_43.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_43.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_23 = QHBoxLayout(self.frame_43)
        self.horizontalLayout_23.setObjectName(u"horizontalLayout_23")
        self.horizontalLayout_23.setContentsMargins(0, 0, 0, 0)
        self.label_86 = QLabel(self.frame_43)
        self.label_86.setObjectName(u"label_86")
        self.label_86.setMinimumSize(QSize(24, 24))
        self.label_86.setMaximumSize(QSize(24, 24))
        self.label_86.setPixmap(QPixmap(u":/Icons/icons/piece.svg"))
        self.label_86.setScaledContents(True)

        self.horizontalLayout_23.addWidget(self.label_86)

        self.label_65 = QLabel(self.frame_43)
        self.label_65.setObjectName(u"label_65")
        palette7 = QPalette()
        palette7.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette7.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette7.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_65.setPalette(palette7)
        font5 = QFont()
        font5.setPointSize(12)
        self.label_65.setFont(font5)
        self.label_65.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_23.addWidget(self.label_65)


        self.verticalLayout_17.addWidget(self.frame_43)

        self.engineComboBox = QComboBox(self.frame_25)
        self.engineComboBox.setObjectName(u"engineComboBox")
        self.engineComboBox.setFont(font1)

        self.verticalLayout_17.addWidget(self.engineComboBox)

        self.label_48 = QLabel(self.frame_25)
        self.label_48.setObjectName(u"label_48")

        self.verticalLayout_17.addWidget(self.label_48)

        self.frame_37 = QFrame(self.frame_25)
        self.frame_37.setObjectName(u"frame_37")
        self.frame_37.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_37.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_19 = QHBoxLayout(self.frame_37)
        self.horizontalLayout_19.setObjectName(u"horizontalLayout_19")
        self.horizontalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.label_76 = QLabel(self.frame_37)
        self.label_76.setObjectName(u"label_76")
        self.label_76.setMinimumSize(QSize(24, 24))
        self.label_76.setMaximumSize(QSize(24, 24))
        self.label_76.setPixmap(QPixmap(u":/Icons/icons/plot.svg"))
        self.label_76.setScaledContents(True)

        self.horizontalLayout_19.addWidget(self.label_76)

        self.label_49 = QLabel(self.frame_37)
        self.label_49.setObjectName(u"label_49")
        palette8 = QPalette()
        palette8.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette8.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette8.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_49.setPalette(palette8)
        self.label_49.setFont(font5)
        self.label_49.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_19.addWidget(self.label_49)


        self.verticalLayout_17.addWidget(self.frame_37)

        self.plt_style_comboBox = QComboBox(self.frame_25)
        self.plt_style_comboBox.setObjectName(u"plt_style_comboBox")
        self.plt_style_comboBox.setFont(font1)

        self.verticalLayout_17.addWidget(self.plt_style_comboBox)


        self.verticalLayout_12.addWidget(self.frame_25)

        self.verticalSpacer_3 = QSpacerItem(20, 363, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_12.addItem(self.verticalSpacer_3)

        self.dark_mode_checkBox = QCheckBox(self.frame_7)
        self.dark_mode_checkBox.setObjectName(u"dark_mode_checkBox")
        self.dark_mode_checkBox.setFont(font1)

        self.verticalLayout_12.addWidget(self.dark_mode_checkBox)


        self.gridLayout_8.addWidget(self.frame_7, 0, 0, 1, 1)

        self.settings_tabWidget = QTabWidget(self.SettingsTab)
        self.settings_tabWidget.setObjectName(u"settings_tabWidget")
        self.settings_tabWidget.setEnabled(True)
        self.settings_tabWidget.setFont(font1)
        self.settings_tabWidget.setAutoFillBackground(False)
        self.settings_tabWidget.setTabPosition(QTabWidget.TabPosition.South)
        self.settings_tabWidget.setIconSize(QSize(16, 16))
        self.settings_tabWidget.setElideMode(Qt.TextElideMode.ElideNone)
        self.settings_tabWidget.setUsesScrollButtons(False)
        self.settings_tabWidget.setDocumentMode(False)
        self.settings_tabWidget.setMovable(False)
        self.settings_tabWidget.setTabBarAutoHide(False)
        self.pf_tab = QWidget()
        self.pf_tab.setObjectName(u"pf_tab")
        self.gridLayout_24 = QGridLayout(self.pf_tab)
        self.gridLayout_24.setObjectName(u"gridLayout_24")
        self.label_63 = QLabel(self.pf_tab)
        self.label_63.setObjectName(u"label_63")
        self.label_63.setMinimumSize(QSize(24, 24))
        self.label_63.setMaximumSize(QSize(24, 24))
        self.label_63.setPixmap(QPixmap(u":/Icons/icons/pf.svg"))
        self.label_63.setScaledContents(True)

        self.gridLayout_24.addWidget(self.label_63, 0, 0, 1, 1)

        self.label_17 = QLabel(self.pf_tab)
        self.label_17.setObjectName(u"label_17")
        palette9 = QPalette()
        palette9.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette9.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette9.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_17.setPalette(palette9)
        self.label_17.setFont(font4)
        self.label_17.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_24.addWidget(self.label_17, 0, 1, 1, 1)

        self.line_14 = QFrame(self.pf_tab)
        self.line_14.setObjectName(u"line_14")
        palette10 = QPalette()
        palette10.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette10.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette10.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_14.setPalette(palette10)
        self.line_14.setFrameShadow(QFrame.Shadow.Plain)
        self.line_14.setLineWidth(4)
        self.line_14.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_24.addWidget(self.line_14, 1, 0, 1, 4)

        self.frame_19 = QFrame(self.pf_tab)
        self.frame_19.setObjectName(u"frame_19")
        self.frame_19.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_19.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_22 = QGridLayout(self.frame_19)
        self.gridLayout_22.setObjectName(u"gridLayout_22")
        self.label_23 = QLabel(self.frame_19)
        self.label_23.setObjectName(u"label_23")
        self.label_23.setFont(font1)

        self.gridLayout_22.addWidget(self.label_23, 11, 0, 1, 1)

        self.verticalSpacer_10 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_22.addItem(self.verticalSpacer_10, 14, 0, 1, 1)

        self.label_6 = QLabel(self.frame_19)
        self.label_6.setObjectName(u"label_6")
        self.label_6.setFont(font1)

        self.gridLayout_22.addWidget(self.label_6, 10, 0, 1, 1)

        self.muSpinBox = QDoubleSpinBox(self.frame_19)
        self.muSpinBox.setObjectName(u"muSpinBox")
        self.muSpinBox.setFont(font1)
        self.muSpinBox.setDecimals(4)
        self.muSpinBox.setMinimum(0.000100000000000)
        self.muSpinBox.setMaximum(1.000000000000000)
        self.muSpinBox.setSingleStep(0.100000000000000)
        self.muSpinBox.setValue(1.000000000000000)

        self.gridLayout_22.addWidget(self.muSpinBox, 9, 1, 1, 2)

        self.verbositySpinBox = QSpinBox(self.frame_19)
        self.verbositySpinBox.setObjectName(u"verbositySpinBox")
        self.verbositySpinBox.setFont(font1)
        self.verbositySpinBox.setMaximum(2)

        self.gridLayout_22.addWidget(self.verbositySpinBox, 11, 1, 1, 2)

        self.label_22 = QLabel(self.frame_19)
        self.label_22.setObjectName(u"label_22")

        self.gridLayout_22.addWidget(self.label_22, 13, 0, 1, 2)

        self.label_5 = QLabel(self.frame_19)
        self.label_5.setObjectName(u"label_5")
        self.label_5.setFont(font1)

        self.gridLayout_22.addWidget(self.label_5, 8, 0, 1, 1)

        self.find_automatic_precission_Button = QPushButton(self.frame_19)
        self.find_automatic_precission_Button.setObjectName(u"find_automatic_precission_Button")
        self.find_automatic_precission_Button.setMaximumSize(QSize(50, 16777215))
        self.find_automatic_precission_Button.setFont(font1)

        self.gridLayout_22.addWidget(self.find_automatic_precission_Button, 8, 2, 1, 1)

        self.max_iterations_spinBox = QSpinBox(self.frame_19)
        self.max_iterations_spinBox.setObjectName(u"max_iterations_spinBox")
        self.max_iterations_spinBox.setFont(font1)
        self.max_iterations_spinBox.setMinimum(1)
        self.max_iterations_spinBox.setMaximum(1000)
        self.max_iterations_spinBox.setValue(40)

        self.gridLayout_22.addWidget(self.max_iterations_spinBox, 10, 1, 1, 2)

        self.label_2 = QLabel(self.frame_19)
        self.label_2.setObjectName(u"label_2")
        self.label_2.setFont(font1)

        self.gridLayout_22.addWidget(self.label_2, 0, 0, 1, 1)

        self.tolerance_spinBox = QSpinBox(self.frame_19)
        self.tolerance_spinBox.setObjectName(u"tolerance_spinBox")
        self.tolerance_spinBox.setFont(font1)
        self.tolerance_spinBox.setMinimum(1)
        self.tolerance_spinBox.setMaximum(15)
        self.tolerance_spinBox.setValue(4)

        self.gridLayout_22.addWidget(self.tolerance_spinBox, 8, 1, 1, 1)

        self.solver_comboBox = QComboBox(self.frame_19)
        self.solver_comboBox.setObjectName(u"solver_comboBox")
        self.solver_comboBox.setMinimumSize(QSize(200, 0))
        self.solver_comboBox.setFont(font1)

        self.gridLayout_22.addWidget(self.solver_comboBox, 0, 1, 1, 2)

        self.label_11 = QLabel(self.frame_19)
        self.label_11.setObjectName(u"label_11")
        self.label_11.setFont(font1)

        self.gridLayout_22.addWidget(self.label_11, 9, 0, 1, 1)


        self.gridLayout_24.addWidget(self.frame_19, 2, 0, 1, 3)

        self.horizontalSpacer_5 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_24.addItem(self.horizontalSpacer_5, 2, 6, 1, 1)

        self.label_70 = QLabel(self.pf_tab)
        self.label_70.setObjectName(u"label_70")
        self.label_70.setMinimumSize(QSize(24, 24))
        self.label_70.setMaximumSize(QSize(24, 24))
        self.label_70.setPixmap(QPixmap(u":/Icons/icons/ptdf.svg"))
        self.label_70.setScaledContents(True)

        self.gridLayout_24.addWidget(self.label_70, 0, 4, 1, 1)

        self.label_71 = QLabel(self.pf_tab)
        self.label_71.setObjectName(u"label_71")
        palette11 = QPalette()
        palette11.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette11.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette11.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_71.setPalette(palette11)
        self.label_71.setFont(font4)
        self.label_71.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_24.addWidget(self.label_71, 0, 5, 1, 1)

        self.line_22 = QFrame(self.pf_tab)
        self.line_22.setObjectName(u"line_22")
        palette12 = QPalette()
        palette12.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette12.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette12.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_22.setPalette(palette12)
        self.line_22.setFrameShadow(QFrame.Shadow.Plain)
        self.line_22.setLineWidth(4)
        self.line_22.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_24.addWidget(self.line_22, 1, 4, 1, 2)

        self.frame_32 = QFrame(self.pf_tab)
        self.frame_32.setObjectName(u"frame_32")
        self.frame_32.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_32.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_14 = QGridLayout(self.frame_32)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.gridLayout_14.setContentsMargins(-1, 0, -1, -1)
        self.ptdf_correct_nonsense_values_checkBox = QCheckBox(self.frame_32)
        self.ptdf_correct_nonsense_values_checkBox.setObjectName(u"ptdf_correct_nonsense_values_checkBox")
        self.ptdf_correct_nonsense_values_checkBox.setFont(font1)
        self.ptdf_correct_nonsense_values_checkBox.setChecked(False)

        self.gridLayout_14.addWidget(self.ptdf_correct_nonsense_values_checkBox, 3, 0, 1, 2)

        self.usePfValuesForAtcCheckBox = QCheckBox(self.frame_32)
        self.usePfValuesForAtcCheckBox.setObjectName(u"usePfValuesForAtcCheckBox")
        self.usePfValuesForAtcCheckBox.setFont(font1)
        self.usePfValuesForAtcCheckBox.setChecked(True)

        self.gridLayout_14.addWidget(self.usePfValuesForAtcCheckBox, 4, 0, 1, 2)

        self.ptdf_distributed_slack_checkBox = QCheckBox(self.frame_32)
        self.ptdf_distributed_slack_checkBox.setObjectName(u"ptdf_distributed_slack_checkBox")
        self.ptdf_distributed_slack_checkBox.setFont(font1)
        self.ptdf_distributed_slack_checkBox.setChecked(False)

        self.gridLayout_14.addWidget(self.ptdf_distributed_slack_checkBox, 2, 0, 1, 2)

        self.ptdf_threshold_doubleSpinBox = QDoubleSpinBox(self.frame_32)
        self.ptdf_threshold_doubleSpinBox.setObjectName(u"ptdf_threshold_doubleSpinBox")
        self.ptdf_threshold_doubleSpinBox.setFont(font1)
        self.ptdf_threshold_doubleSpinBox.setDecimals(6)
        self.ptdf_threshold_doubleSpinBox.setMaximum(1.000000000000000)
        self.ptdf_threshold_doubleSpinBox.setSingleStep(0.001000000000000)
        self.ptdf_threshold_doubleSpinBox.setValue(0.010000000000000)

        self.gridLayout_14.addWidget(self.ptdf_threshold_doubleSpinBox, 6, 1, 1, 1)

        self.label_122 = QLabel(self.frame_32)
        self.label_122.setObjectName(u"label_122")
        self.label_122.setFont(font1)

        self.gridLayout_14.addWidget(self.label_122, 7, 0, 1, 1)

        self.verticalSpacer_12 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_14.addItem(self.verticalSpacer_12, 8, 0, 1, 1)

        self.frame_42 = QFrame(self.frame_32)
        self.frame_42.setObjectName(u"frame_42")
        self.frame_42.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_42.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_14 = QHBoxLayout(self.frame_42)
        self.horizontalLayout_14.setObjectName(u"horizontalLayout_14")
        self.horizontalLayout_14.setContentsMargins(0, 0, 0, 0)

        self.gridLayout_14.addWidget(self.frame_42, 0, 0, 1, 2)

        self.lodf_threshold_doubleSpinBox = QDoubleSpinBox(self.frame_32)
        self.lodf_threshold_doubleSpinBox.setObjectName(u"lodf_threshold_doubleSpinBox")
        self.lodf_threshold_doubleSpinBox.setFont(font1)
        self.lodf_threshold_doubleSpinBox.setDecimals(6)
        self.lodf_threshold_doubleSpinBox.setMaximum(1.000000000000000)
        self.lodf_threshold_doubleSpinBox.setSingleStep(0.001000000000000)
        self.lodf_threshold_doubleSpinBox.setValue(0.050000000000000)

        self.gridLayout_14.addWidget(self.lodf_threshold_doubleSpinBox, 7, 1, 1, 1)

        self.label_116 = QLabel(self.frame_32)
        self.label_116.setObjectName(u"label_116")
        self.label_116.setFont(font1)

        self.gridLayout_14.addWidget(self.label_116, 6, 0, 1, 1)

        self.label_124 = QLabel(self.frame_32)
        self.label_124.setObjectName(u"label_124")

        self.gridLayout_14.addWidget(self.label_124, 5, 0, 1, 1)


        self.gridLayout_24.addWidget(self.frame_32, 2, 4, 1, 2)

        self.frame_36 = QFrame(self.pf_tab)
        self.frame_36.setObjectName(u"frame_36")
        self.frame_36.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_36.setFrameShadow(QFrame.Shadow.Plain)
        self.verticalLayout_4 = QVBoxLayout(self.frame_36)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.helm_retry_checkBox = QCheckBox(self.frame_36)
        self.helm_retry_checkBox.setObjectName(u"helm_retry_checkBox")
        self.helm_retry_checkBox.setFont(font1)
        self.helm_retry_checkBox.setChecked(True)

        self.verticalLayout_4.addWidget(self.helm_retry_checkBox)

        self.use_voltage_guess_checkBox = QCheckBox(self.frame_36)
        self.use_voltage_guess_checkBox.setObjectName(u"use_voltage_guess_checkBox")
        self.use_voltage_guess_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.use_voltage_guess_checkBox)

        self.ignore_single_node_islands_checkBox = QCheckBox(self.frame_36)
        self.ignore_single_node_islands_checkBox.setObjectName(u"ignore_single_node_islands_checkBox")
        self.ignore_single_node_islands_checkBox.setFont(font1)
        self.ignore_single_node_islands_checkBox.setChecked(True)

        self.verticalLayout_4.addWidget(self.ignore_single_node_islands_checkBox)

        self.label_50 = QLabel(self.frame_36)
        self.label_50.setObjectName(u"label_50")

        self.verticalLayout_4.addWidget(self.label_50)

        self.pf_three_phase_checkBox = QCheckBox(self.frame_36)
        self.pf_three_phase_checkBox.setObjectName(u"pf_three_phase_checkBox")
        self.pf_three_phase_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.pf_three_phase_checkBox)

        self.distributed_slack_checkBox = QCheckBox(self.frame_36)
        self.distributed_slack_checkBox.setObjectName(u"distributed_slack_checkBox")
        self.distributed_slack_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.distributed_slack_checkBox)

        self.control_q_checkBox = QCheckBox(self.frame_36)
        self.control_q_checkBox.setObjectName(u"control_q_checkBox")
        self.control_q_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.control_q_checkBox)

        self.control_tap_modules_checkBox = QCheckBox(self.frame_36)
        self.control_tap_modules_checkBox.setObjectName(u"control_tap_modules_checkBox")
        self.control_tap_modules_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.control_tap_modules_checkBox)

        self.control_tap_phase_checkBox = QCheckBox(self.frame_36)
        self.control_tap_phase_checkBox.setObjectName(u"control_tap_phase_checkBox")
        self.control_tap_phase_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.control_tap_phase_checkBox)

        self.control_remote_voltage_checkBox = QCheckBox(self.frame_36)
        self.control_remote_voltage_checkBox.setObjectName(u"control_remote_voltage_checkBox")
        self.control_remote_voltage_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.control_remote_voltage_checkBox)

        self.orthogonalize_pf_controls_checkBox = QCheckBox(self.frame_36)
        self.orthogonalize_pf_controls_checkBox.setObjectName(u"orthogonalize_pf_controls_checkBox")
        self.orthogonalize_pf_controls_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.orthogonalize_pf_controls_checkBox)

        self.initialize_pf_angles_checkBox = QCheckBox(self.frame_36)
        self.initialize_pf_angles_checkBox.setObjectName(u"initialize_pf_angles_checkBox")
        self.initialize_pf_angles_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.initialize_pf_angles_checkBox)

        self.label_54 = QLabel(self.frame_36)
        self.label_54.setObjectName(u"label_54")

        self.verticalLayout_4.addWidget(self.label_54)

        self.temperature_correction_checkBox = QCheckBox(self.frame_36)
        self.temperature_correction_checkBox.setObjectName(u"temperature_correction_checkBox")
        self.temperature_correction_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.temperature_correction_checkBox)

        self.apply_impedance_tolerances_checkBox = QCheckBox(self.frame_36)
        self.apply_impedance_tolerances_checkBox.setObjectName(u"apply_impedance_tolerances_checkBox")
        self.apply_impedance_tolerances_checkBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.apply_impedance_tolerances_checkBox)

        self.label_56 = QLabel(self.frame_36)
        self.label_56.setObjectName(u"label_56")

        self.verticalLayout_4.addWidget(self.label_56)

        self.addPowerFlowReportCheckBox = QCheckBox(self.frame_36)
        self.addPowerFlowReportCheckBox.setObjectName(u"addPowerFlowReportCheckBox")
        self.addPowerFlowReportCheckBox.setFont(font1)

        self.verticalLayout_4.addWidget(self.addPowerFlowReportCheckBox)

        self.verticalSpacer_14 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_4.addItem(self.verticalSpacer_14)


        self.gridLayout_24.addWidget(self.frame_36, 2, 3, 1, 1)

        self.settings_tabWidget.addTab(self.pf_tab, icon5, "")
        self.cpf_tab = QWidget()
        self.cpf_tab.setObjectName(u"cpf_tab")
        self.horizontalLayout_10 = QHBoxLayout(self.cpf_tab)
        self.horizontalLayout_10.setObjectName(u"horizontalLayout_10")
        self.frame_21 = QFrame(self.cpf_tab)
        self.frame_21.setObjectName(u"frame_21")
        self.frame_21.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_21.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_2 = QGridLayout(self.frame_21)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.gridLayout_2.setContentsMargins(-1, 0, -1, -1)
        self.vs_max_iterations_spinBox = QSpinBox(self.frame_21)
        self.vs_max_iterations_spinBox.setObjectName(u"vs_max_iterations_spinBox")
        self.vs_max_iterations_spinBox.setFont(font1)
        self.vs_max_iterations_spinBox.setMinimum(1)
        self.vs_max_iterations_spinBox.setMaximum(300)
        self.vs_max_iterations_spinBox.setValue(20)

        self.gridLayout_2.addWidget(self.vs_max_iterations_spinBox, 2, 1, 1, 2)

        self.label_8 = QLabel(self.frame_21)
        self.label_8.setObjectName(u"label_8")
        self.label_8.setFont(font1)

        self.gridLayout_2.addWidget(self.label_8, 3, 0, 1, 1)

        self.label_25 = QLabel(self.frame_21)
        self.label_25.setObjectName(u"label_25")
        self.label_25.setFont(font1)

        self.gridLayout_2.addWidget(self.label_25, 15, 0, 1, 3)

        self.vc_stop_at_comboBox = QComboBox(self.frame_21)
        self.vc_stop_at_comboBox.setObjectName(u"vc_stop_at_comboBox")
        self.vc_stop_at_comboBox.setFont(font1)

        self.gridLayout_2.addWidget(self.vc_stop_at_comboBox, 3, 1, 1, 2)

        self.alpha_doubleSpinBox = QDoubleSpinBox(self.frame_21)
        self.alpha_doubleSpinBox.setObjectName(u"alpha_doubleSpinBox")
        self.alpha_doubleSpinBox.setFont(font1)
        self.alpha_doubleSpinBox.setMinimum(-99.000000000000000)
        self.alpha_doubleSpinBox.setValue(2.000000000000000)

        self.gridLayout_2.addWidget(self.alpha_doubleSpinBox, 8, 1, 1, 2)

        self.line_17 = QFrame(self.frame_21)
        self.line_17.setObjectName(u"line_17")
        palette13 = QPalette()
        palette13.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette13.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette13.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_17.setPalette(palette13)
        self.line_17.setFrameShadow(QFrame.Shadow.Plain)
        self.line_17.setLineWidth(4)
        self.line_17.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_2.addWidget(self.line_17, 1, 0, 1, 3)

        self.vs_departure_comboBox = QComboBox(self.frame_21)
        self.vs_departure_comboBox.setObjectName(u"vs_departure_comboBox")
        self.vs_departure_comboBox.setFont(font1)

        self.gridLayout_2.addWidget(self.vs_departure_comboBox, 11, 1, 1, 2)

        self.label_107 = QLabel(self.frame_21)
        self.label_107.setObjectName(u"label_107")

        self.gridLayout_2.addWidget(self.label_107, 9, 0, 1, 1)

        self.label_19 = QLabel(self.frame_21)
        self.label_19.setObjectName(u"label_19")
        self.label_19.setFont(font1)

        self.gridLayout_2.addWidget(self.label_19, 11, 0, 1, 1)

        self.start_vs_from_selected_radioButton = QRadioButton(self.frame_21)
        self.start_vs_from_selected_radioButton.setObjectName(u"start_vs_from_selected_radioButton")
        self.start_vs_from_selected_radioButton.setFont(font1)

        self.gridLayout_2.addWidget(self.start_vs_from_selected_radioButton, 10, 0, 1, 3)

        self.vs_target_comboBox = QComboBox(self.frame_21)
        self.vs_target_comboBox.setObjectName(u"vs_target_comboBox")
        self.vs_target_comboBox.setFont(font1)

        self.gridLayout_2.addWidget(self.vs_target_comboBox, 12, 1, 1, 2)

        self.atcRadioButton = QRadioButton(self.frame_21)
        self.atcRadioButton.setObjectName(u"atcRadioButton")
        self.atcRadioButton.setFont(font1)

        self.gridLayout_2.addWidget(self.atcRadioButton, 14, 0, 1, 3)

        self.label_106 = QLabel(self.frame_21)
        self.label_106.setObjectName(u"label_106")

        self.gridLayout_2.addWidget(self.label_106, 4, 0, 1, 1)

        self.label_18 = QLabel(self.frame_21)
        self.label_18.setObjectName(u"label_18")
        self.label_18.setFont(font1)

        self.gridLayout_2.addWidget(self.label_18, 8, 0, 1, 1)

        self.label_29 = QLabel(self.frame_21)
        self.label_29.setObjectName(u"label_29")
        self.label_29.setFont(font1)

        self.gridLayout_2.addWidget(self.label_29, 2, 0, 1, 1)

        self.label_20 = QLabel(self.frame_21)
        self.label_20.setObjectName(u"label_20")
        self.label_20.setFont(font1)

        self.gridLayout_2.addWidget(self.label_20, 12, 0, 1, 1)

        self.label_108 = QLabel(self.frame_21)
        self.label_108.setObjectName(u"label_108")

        self.gridLayout_2.addWidget(self.label_108, 13, 0, 1, 1)

        self.frame_44 = QFrame(self.frame_21)
        self.frame_44.setObjectName(u"frame_44")
        self.frame_44.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_44.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_16 = QHBoxLayout(self.frame_44)
        self.horizontalLayout_16.setObjectName(u"horizontalLayout_16")
        self.horizontalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.label_74 = QLabel(self.frame_44)
        self.label_74.setObjectName(u"label_74")
        self.label_74.setMinimumSize(QSize(24, 24))
        self.label_74.setMaximumSize(QSize(24, 24))
        self.label_74.setPixmap(QPixmap(u":/Icons/icons/continuation_power_flow.svg"))
        self.label_74.setScaledContents(True)

        self.horizontalLayout_16.addWidget(self.label_74)

        self.label_46 = QLabel(self.frame_44)
        self.label_46.setObjectName(u"label_46")
        palette14 = QPalette()
        palette14.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette14.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette14.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_46.setPalette(palette14)
        self.label_46.setFont(font4)
        self.label_46.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_16.addWidget(self.label_46)


        self.gridLayout_2.addWidget(self.frame_44, 0, 0, 1, 3)

        self.label_67 = QLabel(self.frame_21)
        self.label_67.setObjectName(u"label_67")
        self.label_67.setFont(font5)

        self.gridLayout_2.addWidget(self.label_67, 5, 0, 1, 3)

        self.start_vs_from_default_radioButton = QRadioButton(self.frame_21)
        self.start_vs_from_default_radioButton.setObjectName(u"start_vs_from_default_radioButton")
        self.start_vs_from_default_radioButton.setFont(font1)
        self.start_vs_from_default_radioButton.setChecked(True)

        self.gridLayout_2.addWidget(self.start_vs_from_default_radioButton, 7, 0, 1, 3)

        self.verticalSpacer_7 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_2.addItem(self.verticalSpacer_7, 16, 0, 1, 3)


        self.horizontalLayout_10.addWidget(self.frame_21)

        self.horizontalSpacer_24 = QSpacerItem(589, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_10.addItem(self.horizontalSpacer_24)

        self.settings_tabWidget.addTab(self.cpf_tab, icon10, "")
        self.opf_tab = QWidget()
        self.opf_tab.setObjectName(u"opf_tab")
        self.gridLayout_10 = QGridLayout(self.opf_tab)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.groupBox_3 = QGroupBox(self.opf_tab)
        self.groupBox_3.setObjectName(u"groupBox_3")
        font6 = QFont()
        font6.setPointSize(12)
        font6.setBold(False)
        self.groupBox_3.setFont(font6)
        self.gridLayout_27 = QGridLayout(self.groupBox_3)
        self.gridLayout_27.setObjectName(u"gridLayout_27")
        self.verticalSpacer_21 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_27.addItem(self.verticalSpacer_21, 8, 0, 1, 1)

        self.label_129 = QLabel(self.groupBox_3)
        self.label_129.setObjectName(u"label_129")
        font7 = QFont()
        font7.setPointSize(9)
        font7.setBold(False)
        self.label_129.setFont(font7)

        self.gridLayout_27.addWidget(self.label_129, 2, 0, 1, 1)

        self.ips_initialize_with_pf_checkBox = QCheckBox(self.groupBox_3)
        self.ips_initialize_with_pf_checkBox.setObjectName(u"ips_initialize_with_pf_checkBox")
        self.ips_initialize_with_pf_checkBox.setFont(font7)

        self.gridLayout_27.addWidget(self.ips_initialize_with_pf_checkBox, 6, 0, 1, 2)

        self.ips_method_comboBox = QComboBox(self.groupBox_3)
        self.ips_method_comboBox.setObjectName(u"ips_method_comboBox")
        self.ips_method_comboBox.setFont(font7)

        self.gridLayout_27.addWidget(self.ips_method_comboBox, 0, 1, 1, 1)

        self.ips_iterations_spinBox = QSpinBox(self.groupBox_3)
        self.ips_iterations_spinBox.setObjectName(u"ips_iterations_spinBox")
        self.ips_iterations_spinBox.setFont(font7)
        self.ips_iterations_spinBox.setMinimum(1)
        self.ips_iterations_spinBox.setMaximum(9999999)
        self.ips_iterations_spinBox.setValue(100)

        self.gridLayout_27.addWidget(self.ips_iterations_spinBox, 2, 1, 1, 1)

        self.label_130 = QLabel(self.groupBox_3)
        self.label_130.setObjectName(u"label_130")

        self.gridLayout_27.addWidget(self.label_130, 5, 0, 1, 1)

        self.label_126 = QLabel(self.groupBox_3)
        self.label_126.setObjectName(u"label_126")
        self.label_126.setFont(font7)

        self.gridLayout_27.addWidget(self.label_126, 1, 0, 1, 1)

        self.ips_tolerance_spinBox = QSpinBox(self.groupBox_3)
        self.ips_tolerance_spinBox.setObjectName(u"ips_tolerance_spinBox")
        self.ips_tolerance_spinBox.setFont(font7)
        self.ips_tolerance_spinBox.setMinimum(1)
        self.ips_tolerance_spinBox.setMaximum(15)
        self.ips_tolerance_spinBox.setValue(4)

        self.gridLayout_27.addWidget(self.ips_tolerance_spinBox, 1, 1, 1, 1)

        self.label_125 = QLabel(self.groupBox_3)
        self.label_125.setObjectName(u"label_125")
        self.label_125.setFont(font7)

        self.gridLayout_27.addWidget(self.label_125, 0, 0, 1, 1)

        self.ips_trust_radius_doubleSpinBox = QDoubleSpinBox(self.groupBox_3)
        self.ips_trust_radius_doubleSpinBox.setObjectName(u"ips_trust_radius_doubleSpinBox")
        self.ips_trust_radius_doubleSpinBox.setFont(font7)
        self.ips_trust_radius_doubleSpinBox.setDecimals(4)
        self.ips_trust_radius_doubleSpinBox.setSingleStep(0.100000000000000)
        self.ips_trust_radius_doubleSpinBox.setValue(1.000000000000000)

        self.gridLayout_27.addWidget(self.ips_trust_radius_doubleSpinBox, 3, 1, 1, 1)

        self.label_127 = QLabel(self.groupBox_3)
        self.label_127.setObjectName(u"label_127")
        self.label_127.setFont(font7)

        self.gridLayout_27.addWidget(self.label_127, 3, 0, 1, 1)

        self.ips_control_Qlimits_checkBox = QCheckBox(self.groupBox_3)
        self.ips_control_Qlimits_checkBox.setObjectName(u"ips_control_Qlimits_checkBox")
        self.ips_control_Qlimits_checkBox.setFont(font7)

        self.gridLayout_27.addWidget(self.ips_control_Qlimits_checkBox, 7, 0, 1, 2)


        self.gridLayout_10.addWidget(self.groupBox_3, 3, 4, 1, 1)

        self.horizontalSpacer_10 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_10.addItem(self.horizontalSpacer_10, 3, 5, 1, 1)

        self.groupBox = QGroupBox(self.opf_tab)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setFont(font6)
        self.gridLayout_18 = QGridLayout(self.groupBox)
        self.gridLayout_18.setObjectName(u"gridLayout_18")
        self.label_10 = QLabel(self.groupBox)
        self.label_10.setObjectName(u"label_10")
        self.label_10.setFont(font7)

        self.gridLayout_18.addWidget(self.label_10, 0, 0, 1, 1)

        self.opfZonalGroupByComboBox = QComboBox(self.groupBox)
        self.opfZonalGroupByComboBox.setObjectName(u"opfZonalGroupByComboBox")
        self.opfZonalGroupByComboBox.setFont(font7)

        self.gridLayout_18.addWidget(self.opfZonalGroupByComboBox, 2, 1, 1, 1)

        self.opfUnitCommitmentCheckBox = QCheckBox(self.groupBox)
        self.opfUnitCommitmentCheckBox.setObjectName(u"opfUnitCommitmentCheckBox")
        self.opfUnitCommitmentCheckBox.setFont(font7)

        self.gridLayout_18.addWidget(self.opfUnitCommitmentCheckBox, 5, 0, 1, 1)

        self.label_132 = QLabel(self.groupBox)
        self.label_132.setObjectName(u"label_132")

        self.gridLayout_18.addWidget(self.label_132, 4, 0, 1, 2)

        self.opf_time_grouping_comboBox = QComboBox(self.groupBox)
        self.opf_time_grouping_comboBox.setObjectName(u"opf_time_grouping_comboBox")
        self.opf_time_grouping_comboBox.setFont(font7)

        self.gridLayout_18.addWidget(self.opf_time_grouping_comboBox, 1, 1, 1, 1)

        self.mip_solver_comboBox = QComboBox(self.groupBox)
        self.mip_solver_comboBox.setObjectName(u"mip_solver_comboBox")
        self.mip_solver_comboBox.setFont(font7)

        self.gridLayout_18.addWidget(self.mip_solver_comboBox, 0, 1, 1, 1)

        self.fixOpfCheckBox = QCheckBox(self.groupBox)
        self.fixOpfCheckBox.setObjectName(u"fixOpfCheckBox")
        self.fixOpfCheckBox.setFont(font7)

        self.gridLayout_18.addWidget(self.fixOpfCheckBox, 8, 0, 1, 2)

        self.considerContingenciesOpfCheckBox = QCheckBox(self.groupBox)
        self.considerContingenciesOpfCheckBox.setObjectName(u"considerContingenciesOpfCheckBox")
        self.considerContingenciesOpfCheckBox.setFont(font7)

        self.gridLayout_18.addWidget(self.considerContingenciesOpfCheckBox, 6, 0, 1, 2)

        self.label_4 = QLabel(self.groupBox)
        self.label_4.setObjectName(u"label_4")
        self.label_4.setFont(font7)

        self.gridLayout_18.addWidget(self.label_4, 1, 0, 1, 1)

        self.save_mip_checkBox = QCheckBox(self.groupBox)
        self.save_mip_checkBox.setObjectName(u"save_mip_checkBox")
        self.save_mip_checkBox.setFont(font7)

        self.gridLayout_18.addWidget(self.save_mip_checkBox, 11, 0, 1, 2)

        self.verticalSpacer_18 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_18.addItem(self.verticalSpacer_18, 12, 0, 1, 1)

        self.label_104 = QLabel(self.groupBox)
        self.label_104.setObjectName(u"label_104")
        self.label_104.setFont(font7)

        self.gridLayout_18.addWidget(self.label_104, 3, 0, 1, 1)

        self.label_103 = QLabel(self.groupBox)
        self.label_103.setObjectName(u"label_103")
        self.label_103.setFont(font7)

        self.gridLayout_18.addWidget(self.label_103, 2, 0, 1, 1)

        self.opfContingencyToleranceSpinBox = QDoubleSpinBox(self.groupBox)
        self.opfContingencyToleranceSpinBox.setObjectName(u"opfContingencyToleranceSpinBox")
        self.opfContingencyToleranceSpinBox.setFont(font7)
        self.opfContingencyToleranceSpinBox.setDecimals(4)
        self.opfContingencyToleranceSpinBox.setSingleStep(0.010000000000000)
        self.opfContingencyToleranceSpinBox.setValue(0.050000000000000)

        self.gridLayout_18.addWidget(self.opfContingencyToleranceSpinBox, 3, 1, 1, 1)

        self.opfGEPCheckBox = QCheckBox(self.groupBox)
        self.opfGEPCheckBox.setObjectName(u"opfGEPCheckBox")
        self.opfGEPCheckBox.setFont(font7)

        self.gridLayout_18.addWidget(self.opfGEPCheckBox, 7, 0, 1, 2)


        self.gridLayout_10.addWidget(self.groupBox, 3, 3, 1, 1)

        self.label_73 = QLabel(self.opf_tab)
        self.label_73.setObjectName(u"label_73")
        palette15 = QPalette()
        palette15.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette15.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette15.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_73.setPalette(palette15)
        self.label_73.setFont(font4)
        self.label_73.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_10.addWidget(self.label_73, 0, 1, 1, 1)

        self.line_16 = QFrame(self.opf_tab)
        self.line_16.setObjectName(u"line_16")
        palette16 = QPalette()
        palette16.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette16.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette16.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_16.setPalette(palette16)
        self.line_16.setFrameShadow(QFrame.Shadow.Plain)
        self.line_16.setLineWidth(4)
        self.line_16.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_10.addWidget(self.line_16, 2, 0, 1, 5)

        self.groupBox_2 = QGroupBox(self.opf_tab)
        self.groupBox_2.setObjectName(u"groupBox_2")
        self.groupBox_2.setFont(font6)
        self.gridLayout_26 = QGridLayout(self.groupBox_2)
        self.gridLayout_26.setObjectName(u"gridLayout_26")
        self.label_128 = QLabel(self.groupBox_2)
        self.label_128.setObjectName(u"label_128")
        self.label_128.setFont(font7)

        self.gridLayout_26.addWidget(self.label_128, 1, 0, 1, 1)

        self.label_42 = QLabel(self.groupBox_2)
        self.label_42.setObjectName(u"label_42")
        self.label_42.setFont(font7)

        self.gridLayout_26.addWidget(self.label_42, 0, 0, 1, 1)

        self.verticalSpacer_5 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_26.addItem(self.verticalSpacer_5, 7, 0, 1, 1)

        self.lpf_solver_comboBox = QComboBox(self.groupBox_2)
        self.lpf_solver_comboBox.setObjectName(u"lpf_solver_comboBox")
        self.lpf_solver_comboBox.setFont(font7)

        self.gridLayout_26.addWidget(self.lpf_solver_comboBox, 0, 1, 1, 1)

        self.ips_verbose_spinBox = QSpinBox(self.groupBox_2)
        self.ips_verbose_spinBox.setObjectName(u"ips_verbose_spinBox")
        self.ips_verbose_spinBox.setFont(font7)

        self.gridLayout_26.addWidget(self.ips_verbose_spinBox, 1, 1, 1, 1)

        self.addOptimalPowerFlowReportCheckBox = QCheckBox(self.groupBox_2)
        self.addOptimalPowerFlowReportCheckBox.setObjectName(u"addOptimalPowerFlowReportCheckBox")
        self.addOptimalPowerFlowReportCheckBox.setFont(font7)

        self.gridLayout_26.addWidget(self.addOptimalPowerFlowReportCheckBox, 6, 0, 1, 2)

        self.label_133 = QLabel(self.groupBox_2)
        self.label_133.setObjectName(u"label_133")

        self.gridLayout_26.addWidget(self.label_133, 2, 0, 1, 1)

        self.opfMaximizeExcahngeCheckBox = QCheckBox(self.groupBox_2)
        self.opfMaximizeExcahngeCheckBox.setObjectName(u"opfMaximizeExcahngeCheckBox")
        self.opfMaximizeExcahngeCheckBox.setFont(font7)

        self.gridLayout_26.addWidget(self.opfMaximizeExcahngeCheckBox, 5, 0, 1, 2)

        self.skipOpfGenerationLimitsCheckBox = QCheckBox(self.groupBox_2)
        self.skipOpfGenerationLimitsCheckBox.setObjectName(u"skipOpfGenerationLimitsCheckBox")
        self.skipOpfGenerationLimitsCheckBox.setFont(font7)

        self.gridLayout_26.addWidget(self.skipOpfGenerationLimitsCheckBox, 3, 0, 1, 2)


        self.gridLayout_10.addWidget(self.groupBox_2, 3, 0, 1, 3)

        self.label_72 = QLabel(self.opf_tab)
        self.label_72.setObjectName(u"label_72")
        self.label_72.setMinimumSize(QSize(24, 24))
        self.label_72.setMaximumSize(QSize(24, 24))
        self.label_72.setPixmap(QPixmap(u":/Icons/icons/dcopf.svg"))
        self.label_72.setScaledContents(True)

        self.gridLayout_10.addWidget(self.label_72, 0, 0, 1, 1)

        self.settings_tabWidget.addTab(self.opf_tab, icon15, "")
        self.ntc_tab = QWidget()
        self.ntc_tab.setObjectName(u"ntc_tab")
        self.gridLayout_13 = QGridLayout(self.ntc_tab)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.groupBox_5 = QGroupBox(self.ntc_tab)
        self.groupBox_5.setObjectName(u"groupBox_5")
        self.groupBox_5.setFont(font5)
        self.gridLayout_15 = QGridLayout(self.groupBox_5)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.ntcSelectBasedOnAcerCriteriaCheckBox = QCheckBox(self.groupBox_5)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setObjectName(u"ntcSelectBasedOnAcerCriteriaCheckBox")
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setFont(font1)

        self.gridLayout_15.addWidget(self.ntcSelectBasedOnAcerCriteriaCheckBox, 7, 0, 1, 1)

        self.skipNtcGenerationLimitsCheckBox = QCheckBox(self.groupBox_5)
        self.skipNtcGenerationLimitsCheckBox.setObjectName(u"skipNtcGenerationLimitsCheckBox")
        self.skipNtcGenerationLimitsCheckBox.setFont(font1)
        self.skipNtcGenerationLimitsCheckBox.setChecked(True)

        self.gridLayout_15.addWidget(self.skipNtcGenerationLimitsCheckBox, 0, 0, 1, 2)

        self.trmSpinBox = QSpinBox(self.groupBox_5)
        self.trmSpinBox.setObjectName(u"trmSpinBox")
        self.trmSpinBox.setFont(font1)
        self.trmSpinBox.setMaximum(1500)
        self.trmSpinBox.setSingleStep(10)
        self.trmSpinBox.setValue(400)
        self.trmSpinBox.setDisplayIntegerBase(10)

        self.gridLayout_15.addWidget(self.trmSpinBox, 2, 0, 1, 1)

        self.consider_ntc_contingencies_checkBox = QCheckBox(self.groupBox_5)
        self.consider_ntc_contingencies_checkBox.setObjectName(u"consider_ntc_contingencies_checkBox")
        self.consider_ntc_contingencies_checkBox.setFont(font1)

        self.gridLayout_15.addWidget(self.consider_ntc_contingencies_checkBox, 11, 0, 1, 2)

        self.ntcSelectBasedOnExchangeSensitivityCheckBox = QCheckBox(self.groupBox_5)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setObjectName(u"ntcSelectBasedOnExchangeSensitivityCheckBox")
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setFont(font1)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setChecked(True)

        self.gridLayout_15.addWidget(self.ntcSelectBasedOnExchangeSensitivityCheckBox, 5, 0, 1, 1)

        self.ntcLoadRuleSpinBox = QSpinBox(self.groupBox_5)
        self.ntcLoadRuleSpinBox.setObjectName(u"ntcLoadRuleSpinBox")
        self.ntcLoadRuleSpinBox.setFont(font1)
        self.ntcLoadRuleSpinBox.setMaximum(100)
        self.ntcLoadRuleSpinBox.setValue(70)

        self.gridLayout_15.addWidget(self.ntcLoadRuleSpinBox, 8, 0, 1, 1)

        self.label_26 = QLabel(self.groupBox_5)
        self.label_26.setObjectName(u"label_26")

        self.gridLayout_15.addWidget(self.label_26, 9, 0, 1, 1)

        self.verticalSpacer_23 = QSpacerItem(20, 168, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_15.addItem(self.verticalSpacer_23, 13, 1, 1, 1)

        self.label_36 = QLabel(self.groupBox_5)
        self.label_36.setObjectName(u"label_36")

        self.gridLayout_15.addWidget(self.label_36, 3, 0, 1, 1)

        self.label_64 = QLabel(self.groupBox_5)
        self.label_64.setObjectName(u"label_64")
        palette17 = QPalette()
        brush4 = QBrush(QColor(36, 31, 49, 255))
        brush4.setStyle(Qt.SolidPattern)
        palette17.setBrush(QPalette.Active, QPalette.WindowText, brush4)
        brush5 = QBrush(QColor(0, 0, 0, 255))
        brush5.setStyle(Qt.SolidPattern)
        palette17.setBrush(QPalette.Inactive, QPalette.WindowText, brush5)
        palette17.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_64.setPalette(palette17)
        self.label_64.setFont(font6)

        self.gridLayout_15.addWidget(self.label_64, 4, 0, 1, 2)

        self.label_105 = QLabel(self.groupBox_5)
        self.label_105.setObjectName(u"label_105")
        palette18 = QPalette()
        palette18.setBrush(QPalette.Active, QPalette.WindowText, brush4)
        palette18.setBrush(QPalette.Inactive, QPalette.WindowText, brush5)
        palette18.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_105.setPalette(palette18)
        self.label_105.setFont(font6)

        self.gridLayout_15.addWidget(self.label_105, 10, 0, 1, 2)

        self.ntcAlphaSpinBox = QSpinBox(self.groupBox_5)
        self.ntcAlphaSpinBox.setObjectName(u"ntcAlphaSpinBox")
        self.ntcAlphaSpinBox.setFont(font1)
        self.ntcAlphaSpinBox.setMaximum(100)
        self.ntcAlphaSpinBox.setValue(5)

        self.gridLayout_15.addWidget(self.ntcAlphaSpinBox, 6, 0, 1, 1)

        self.label_231 = QLabel(self.groupBox_5)
        self.label_231.setObjectName(u"label_231")
        self.label_231.setFont(font1)

        self.gridLayout_15.addWidget(self.label_231, 1, 0, 1, 1)

        self.strict_ntc_formulation_checkBox = QCheckBox(self.groupBox_5)
        self.strict_ntc_formulation_checkBox.setObjectName(u"strict_ntc_formulation_checkBox")
        self.strict_ntc_formulation_checkBox.setFont(font1)

        self.gridLayout_15.addWidget(self.strict_ntc_formulation_checkBox, 12, 0, 1, 2)


        self.gridLayout_13.addWidget(self.groupBox_5, 2, 2, 2, 1)

        self.groupBox_4 = QGroupBox(self.ntc_tab)
        self.groupBox_4.setObjectName(u"groupBox_4")
        self.groupBox_4.setFont(font5)
        self.gridLayout_20 = QGridLayout(self.groupBox_4)
        self.gridLayout_20.setObjectName(u"gridLayout_20")
        self.verticalSpacer_22 = QSpacerItem(20, 325, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_20.addItem(self.verticalSpacer_22, 5, 0, 1, 1)

        self.label_30 = QLabel(self.groupBox_4)
        self.label_30.setObjectName(u"label_30")
        self.label_30.setFont(font1)

        self.gridLayout_20.addWidget(self.label_30, 3, 0, 1, 1)

        self.label_77 = QLabel(self.groupBox_4)
        self.label_77.setObjectName(u"label_77")
        self.label_77.setFont(font1)

        self.gridLayout_20.addWidget(self.label_77, 1, 0, 1, 1)

        self.ntcReportLoadingThresholdSpinBox = QSpinBox(self.groupBox_4)
        self.ntcReportLoadingThresholdSpinBox.setObjectName(u"ntcReportLoadingThresholdSpinBox")
        self.ntcReportLoadingThresholdSpinBox.setFont(font1)
        self.ntcReportLoadingThresholdSpinBox.setMaximum(9999)
        self.ntcReportLoadingThresholdSpinBox.setValue(98)

        self.gridLayout_20.addWidget(self.ntcReportLoadingThresholdSpinBox, 4, 0, 1, 1)

        self.transferMethodComboBox = QComboBox(self.groupBox_4)
        self.transferMethodComboBox.setObjectName(u"transferMethodComboBox")
        self.transferMethodComboBox.setFont(font1)

        self.gridLayout_20.addWidget(self.transferMethodComboBox, 2, 0, 1, 1)


        self.gridLayout_13.addWidget(self.groupBox_4, 2, 0, 2, 2)

        self.line_27 = QFrame(self.ntc_tab)
        self.line_27.setObjectName(u"line_27")
        palette19 = QPalette()
        palette19.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette19.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette19.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_27.setPalette(palette19)
        self.line_27.setFrameShadow(QFrame.Shadow.Plain)
        self.line_27.setLineWidth(4)
        self.line_27.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_13.addWidget(self.line_27, 1, 0, 1, 4)

        self.label_97 = QLabel(self.ntc_tab)
        self.label_97.setObjectName(u"label_97")
        self.label_97.setMinimumSize(QSize(24, 24))
        self.label_97.setMaximumSize(QSize(24, 24))
        self.label_97.setPixmap(QPixmap(u":/Icons/icons/ntc_opf.svg"))
        self.label_97.setScaledContents(True)

        self.gridLayout_13.addWidget(self.label_97, 0, 0, 1, 1)

        self.horizontalSpacer_6 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_13.addItem(self.horizontalSpacer_6, 2, 4, 2, 1)

        self.groupBox_6 = QGroupBox(self.ntc_tab)
        self.groupBox_6.setObjectName(u"groupBox_6")
        self.groupBox_6.setFont(font5)
        self.groupBox_6.setFlat(False)
        self.groupBox_6.setCheckable(False)
        self.gridLayout_29 = QGridLayout(self.groupBox_6)
        self.gridLayout_29.setObjectName(u"gridLayout_29")
        self.verticalSpacer_24 = QSpacerItem(20, 393, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_29.addItem(self.verticalSpacer_24, 3, 0, 1, 1)

        self.n1ConsiderationCheckBox = QCheckBox(self.groupBox_6)
        self.n1ConsiderationCheckBox.setObjectName(u"n1ConsiderationCheckBox")
        self.n1ConsiderationCheckBox.setFont(font1)
        self.n1ConsiderationCheckBox.setChecked(True)

        self.gridLayout_29.addWidget(self.n1ConsiderationCheckBox, 2, 0, 1, 2)

        self.label_62 = QLabel(self.groupBox_6)
        self.label_62.setObjectName(u"label_62")
        self.label_62.setFont(font1)

        self.gridLayout_29.addWidget(self.label_62, 0, 0, 1, 2)

        self.atcThresholdSpinBox = QDoubleSpinBox(self.groupBox_6)
        self.atcThresholdSpinBox.setObjectName(u"atcThresholdSpinBox")
        self.atcThresholdSpinBox.setFont(font1)
        self.atcThresholdSpinBox.setDecimals(4)
        self.atcThresholdSpinBox.setMaximum(1.000000000000000)
        self.atcThresholdSpinBox.setSingleStep(0.010000000000000)
        self.atcThresholdSpinBox.setValue(0.050000000000000)

        self.gridLayout_29.addWidget(self.atcThresholdSpinBox, 1, 0, 1, 2)


        self.gridLayout_13.addWidget(self.groupBox_6, 2, 3, 2, 1)

        self.label_96 = QLabel(self.ntc_tab)
        self.label_96.setObjectName(u"label_96")
        palette20 = QPalette()
        palette20.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette20.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette20.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_96.setPalette(palette20)
        self.label_96.setFont(font4)

        self.gridLayout_13.addWidget(self.label_96, 0, 1, 1, 1)

        self.settings_tabWidget.addTab(self.ntc_tab, icon45, "")
        self.nodal_capacity_tab = QWidget()
        self.nodal_capacity_tab.setObjectName(u"nodal_capacity_tab")
        self.gridLayout_16 = QGridLayout(self.nodal_capacity_tab)
        self.gridLayout_16.setObjectName(u"gridLayout_16")
        self.groupBox_7 = QGroupBox(self.nodal_capacity_tab)
        self.groupBox_7.setObjectName(u"groupBox_7")
        self.groupBox_7.setFont(font5)
        self.gridLayout_12 = QGridLayout(self.groupBox_7)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.label_143 = QLabel(self.groupBox_7)
        self.label_143.setObjectName(u"label_143")
        self.label_143.setFont(font1)

        self.gridLayout_12.addWidget(self.label_143, 3, 0, 1, 1)

        self.nodal_capacity_sense_SpinBox = QDoubleSpinBox(self.groupBox_7)
        self.nodal_capacity_sense_SpinBox.setObjectName(u"nodal_capacity_sense_SpinBox")
        self.nodal_capacity_sense_SpinBox.setFont(font1)
        self.nodal_capacity_sense_SpinBox.setMinimum(-1.000000000000000)
        self.nodal_capacity_sense_SpinBox.setMaximum(1.000000000000000)
        self.nodal_capacity_sense_SpinBox.setValue(1.000000000000000)

        self.gridLayout_12.addWidget(self.nodal_capacity_sense_SpinBox, 3, 1, 1, 1)

        self.label_142 = QLabel(self.groupBox_7)
        self.label_142.setObjectName(u"label_142")
        self.label_142.setFont(font1)

        self.gridLayout_12.addWidget(self.label_142, 0, 0, 1, 1)

        self.nodal_capacity_method_comboBox = QComboBox(self.groupBox_7)
        self.nodal_capacity_method_comboBox.setObjectName(u"nodal_capacity_method_comboBox")
        self.nodal_capacity_method_comboBox.setFont(font1)

        self.gridLayout_12.addWidget(self.nodal_capacity_method_comboBox, 1, 0, 1, 2)

        self.verticalSpacer_6 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_12.addItem(self.verticalSpacer_6, 4, 0, 1, 1)

        self.label_144 = QLabel(self.groupBox_7)
        self.label_144.setObjectName(u"label_144")

        self.gridLayout_12.addWidget(self.label_144, 2, 0, 1, 1)


        self.gridLayout_16.addWidget(self.groupBox_7, 2, 0, 1, 2)

        self.label_141 = QLabel(self.nodal_capacity_tab)
        self.label_141.setObjectName(u"label_141")
        self.label_141.setMinimumSize(QSize(24, 24))
        self.label_141.setMaximumSize(QSize(24, 24))
        self.label_141.setPixmap(QPixmap(u":/Icons/icons/nodal_capacity.svg"))
        self.label_141.setScaledContents(True)

        self.gridLayout_16.addWidget(self.label_141, 0, 0, 1, 1)

        self.line_32 = QFrame(self.nodal_capacity_tab)
        self.line_32.setObjectName(u"line_32")
        palette21 = QPalette()
        palette21.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette21.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette21.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_32.setPalette(palette21)
        self.line_32.setFrameShadow(QFrame.Shadow.Plain)
        self.line_32.setLineWidth(4)
        self.line_32.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_16.addWidget(self.line_32, 1, 0, 1, 3)

        self.label_140 = QLabel(self.nodal_capacity_tab)
        self.label_140.setObjectName(u"label_140")
        palette22 = QPalette()
        palette22.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette22.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette22.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_140.setPalette(palette22)
        self.label_140.setFont(font4)

        self.gridLayout_16.addWidget(self.label_140, 0, 1, 1, 1)

        self.horizontalSpacer_4 = QSpacerItem(630, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_16.addItem(self.horizontalSpacer_4, 2, 2, 1, 1)

        self.settings_tabWidget.addTab(self.nodal_capacity_tab, icon70, "")
        self.transfer_tab = QWidget()
        self.transfer_tab.setObjectName(u"transfer_tab")
        self.horizontalLayout_12 = QHBoxLayout(self.transfer_tab)
        self.horizontalLayout_12.setObjectName(u"horizontalLayout_12")
        self.frame_40 = QFrame(self.transfer_tab)
        self.frame_40.setObjectName(u"frame_40")
        self.frame_40.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_40.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_4 = QGridLayout(self.frame_40)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.line_26 = QFrame(self.frame_40)
        self.line_26.setObjectName(u"line_26")
        palette23 = QPalette()
        palette23.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette23.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette23.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_26.setPalette(palette23)
        self.line_26.setFrameShadow(QFrame.Shadow.Plain)
        self.line_26.setLineWidth(4)
        self.line_26.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_4.addWidget(self.line_26, 1, 0, 1, 2)

        self.label_95 = QLabel(self.frame_40)
        self.label_95.setObjectName(u"label_95")
        palette24 = QPalette()
        palette24.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette24.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette24.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_95.setPalette(palette24)
        self.label_95.setFont(font4)

        self.gridLayout_4.addWidget(self.label_95, 0, 1, 1, 1)

        self.label_92 = QLabel(self.frame_40)
        self.label_92.setObjectName(u"label_92")
        self.label_92.setMinimumSize(QSize(24, 24))
        self.label_92.setMaximumSize(QSize(24, 24))
        self.label_92.setPixmap(QPixmap(u":/Icons/icons/area_transfer.svg"))
        self.label_92.setScaledContents(True)

        self.gridLayout_4.addWidget(self.label_92, 0, 0, 1, 1)

        self.splitter_2 = QSplitter(self.frame_40)
        self.splitter_2.setObjectName(u"splitter_2")
        self.splitter_2.setOrientation(Qt.Orientation.Horizontal)
        self.frame_34 = QFrame(self.splitter_2)
        self.frame_34.setObjectName(u"frame_34")
        self.frame_34.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_34.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_9 = QGridLayout(self.frame_34)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.label_41 = QLabel(self.frame_34)
        self.label_41.setObjectName(u"label_41")
        self.label_41.setFont(font1)

        self.gridLayout_9.addWidget(self.label_41, 0, 0, 1, 1)

        self.fromComboBox = QComboBox(self.frame_34)
        self.fromComboBox.setObjectName(u"fromComboBox")

        self.gridLayout_9.addWidget(self.fromComboBox, 0, 1, 1, 1)

        self.fromListView = QListView(self.frame_34)
        self.fromListView.setObjectName(u"fromListView")
        self.fromListView.setFont(font1)

        self.gridLayout_9.addWidget(self.fromListView, 1, 0, 1, 2)

        self.splitter_2.addWidget(self.frame_34)
        self.frame_35 = QFrame(self.splitter_2)
        self.frame_35.setObjectName(u"frame_35")
        self.frame_35.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_35.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_30 = QGridLayout(self.frame_35)
        self.gridLayout_30.setObjectName(u"gridLayout_30")
        self.label_21 = QLabel(self.frame_35)
        self.label_21.setObjectName(u"label_21")
        self.label_21.setFont(font1)

        self.gridLayout_30.addWidget(self.label_21, 0, 0, 1, 1)

        self.toComboBox = QComboBox(self.frame_35)
        self.toComboBox.setObjectName(u"toComboBox")

        self.gridLayout_30.addWidget(self.toComboBox, 0, 1, 1, 1)

        self.toListView = QListView(self.frame_35)
        self.toListView.setObjectName(u"toListView")
        self.toListView.setFont(font1)

        self.gridLayout_30.addWidget(self.toListView, 1, 0, 1, 2)

        self.splitter_2.addWidget(self.frame_35)

        self.gridLayout_4.addWidget(self.splitter_2, 2, 0, 1, 2)


        self.horizontalLayout_12.addWidget(self.frame_40)

        self.settings_tabWidget.addTab(self.transfer_tab, icon86, "")
        self.contingencies_tab = QWidget()
        self.contingencies_tab.setObjectName(u"contingencies_tab")
        self.horizontalLayout_42 = QHBoxLayout(self.contingencies_tab)
        self.horizontalLayout_42.setObjectName(u"horizontalLayout_42")
        self.frame_76 = QFrame(self.contingencies_tab)
        self.frame_76.setObjectName(u"frame_76")
        self.frame_76.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_76.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_28 = QGridLayout(self.frame_76)
        self.gridLayout_28.setObjectName(u"gridLayout_28")
        self.gridLayout_28.setContentsMargins(-1, 0, -1, -1)
        self.frame_4 = QFrame(self.frame_76)
        self.frame_4.setObjectName(u"frame_4")
        self.frame_4.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_4.setFrameShadow(QFrame.Shadow.Raised)
        self.formLayout = QFormLayout(self.frame_4)
        self.formLayout.setObjectName(u"formLayout")
        self.label_151 = QLabel(self.frame_4)
        self.label_151.setObjectName(u"label_151")
        self.label_151.setFont(font1)

        self.formLayout.setWidget(0, QFormLayout.SpanningRole, self.label_151)

        self.label_152 = QLabel(self.frame_4)
        self.label_152.setObjectName(u"label_152")
        self.label_152.setMaximumSize(QSize(80, 16777215))
        self.label_152.setFont(font1)

        self.formLayout.setWidget(1, QFormLayout.LabelRole, self.label_152)

        self.contingency_filter_by_comboBox = QComboBox(self.frame_4)
        self.contingency_filter_by_comboBox.setObjectName(u"contingency_filter_by_comboBox")
        self.contingency_filter_by_comboBox.setFont(font1)

        self.formLayout.setWidget(1, QFormLayout.FieldRole, self.contingency_filter_by_comboBox)

        self.contingency_group_filter_listView = QListView(self.frame_4)
        self.contingency_group_filter_listView.setObjectName(u"contingency_group_filter_listView")
        self.contingency_group_filter_listView.setMinimumSize(QSize(500, 0))
        self.contingency_group_filter_listView.setFont(font1)

        self.formLayout.setWidget(2, QFormLayout.SpanningRole, self.contingency_group_filter_listView)


        self.gridLayout_28.addWidget(self.frame_4, 3, 2, 15, 1)

        self.frame_13 = QFrame(self.frame_76)
        self.frame_13.setObjectName(u"frame_13")
        self.frame_13.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_13.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_25 = QGridLayout(self.frame_13)
        self.gridLayout_25.setObjectName(u"gridLayout_25")
        self.label_123 = QLabel(self.frame_13)
        self.label_123.setObjectName(u"label_123")
        self.label_123.setFont(font1)

        self.gridLayout_25.addWidget(self.label_123, 7, 0, 1, 1)

        self.label_52 = QLabel(self.frame_13)
        self.label_52.setObjectName(u"label_52")

        self.gridLayout_25.addWidget(self.label_52, 4, 0, 1, 1)

        self.label_53 = QLabel(self.frame_13)
        self.label_53.setObjectName(u"label_53")
        self.label_53.setFont(font1)

        self.gridLayout_25.addWidget(self.label_53, 5, 0, 1, 1)

        self.srap_revert_to_nominal_rating_checkBox = QCheckBox(self.frame_13)
        self.srap_revert_to_nominal_rating_checkBox.setObjectName(u"srap_revert_to_nominal_rating_checkBox")
        self.srap_revert_to_nominal_rating_checkBox.setFont(font1)

        self.gridLayout_25.addWidget(self.srap_revert_to_nominal_rating_checkBox, 8, 0, 1, 1)

        self.use_srap_checkBox = QCheckBox(self.frame_13)
        self.use_srap_checkBox.setObjectName(u"use_srap_checkBox")
        self.use_srap_checkBox.setFont(font1)

        self.gridLayout_25.addWidget(self.use_srap_checkBox, 3, 0, 1, 1)

        self.contingency_detailed_massive_report_checkBox = QCheckBox(self.frame_13)
        self.contingency_detailed_massive_report_checkBox.setObjectName(u"contingency_detailed_massive_report_checkBox")
        self.contingency_detailed_massive_report_checkBox.setFont(font1)

        self.gridLayout_25.addWidget(self.contingency_detailed_massive_report_checkBox, 9, 0, 1, 1)

        self.srap_limit_doubleSpinBox = QDoubleSpinBox(self.frame_13)
        self.srap_limit_doubleSpinBox.setObjectName(u"srap_limit_doubleSpinBox")
        self.srap_limit_doubleSpinBox.setFont(font1)
        self.srap_limit_doubleSpinBox.setDecimals(1)
        self.srap_limit_doubleSpinBox.setMaximum(9999999.000000000000000)
        self.srap_limit_doubleSpinBox.setValue(1400.000000000000000)

        self.gridLayout_25.addWidget(self.srap_limit_doubleSpinBox, 5, 1, 1, 1)

        self.srap_top_n_SpinBox = QSpinBox(self.frame_13)
        self.srap_top_n_SpinBox.setObjectName(u"srap_top_n_SpinBox")
        self.srap_top_n_SpinBox.setFont(font1)
        self.srap_top_n_SpinBox.setMinimum(1)
        self.srap_top_n_SpinBox.setMaximum(9999999)
        self.srap_top_n_SpinBox.setValue(10)

        self.gridLayout_25.addWidget(self.srap_top_n_SpinBox, 6, 1, 1, 1)

        self.contingency_deadband_SpinBox = QDoubleSpinBox(self.frame_13)
        self.contingency_deadband_SpinBox.setObjectName(u"contingency_deadband_SpinBox")
        self.contingency_deadband_SpinBox.setFont(font1)
        self.contingency_deadband_SpinBox.setDecimals(2)
        self.contingency_deadband_SpinBox.setValue(0.050000000000000)

        self.gridLayout_25.addWidget(self.contingency_deadband_SpinBox, 2, 1, 1, 1)

        self.label_27 = QLabel(self.frame_13)
        self.label_27.setObjectName(u"label_27")
        self.label_27.setFont(font1)

        self.gridLayout_25.addWidget(self.label_27, 2, 0, 1, 1)

        self.label_1322 = QLabel(self.frame_13)
        self.label_1322.setObjectName(u"label_1322")

        self.gridLayout_25.addWidget(self.label_1322, 6, 0, 1, 1)

        self.label_119 = QLabel(self.frame_13)
        self.label_119.setObjectName(u"label_119")
        self.label_119.setFont(font1)

        self.gridLayout_25.addWidget(self.label_119, 0, 0, 1, 1)

        self.srap_deadband_doubleSpinBox = QDoubleSpinBox(self.frame_13)
        self.srap_deadband_doubleSpinBox.setObjectName(u"srap_deadband_doubleSpinBox")
        self.srap_deadband_doubleSpinBox.setFont(font1)
        self.srap_deadband_doubleSpinBox.setDecimals(1)
        self.srap_deadband_doubleSpinBox.setMaximum(999999999.000000000000000)
        self.srap_deadband_doubleSpinBox.setValue(10.000000000000000)

        self.gridLayout_25.addWidget(self.srap_deadband_doubleSpinBox, 7, 1, 1, 1)

        self.verticalSpacer_19 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_25.addItem(self.verticalSpacer_19, 10, 0, 1, 1)

        self.contingencyEngineComboBox = QComboBox(self.frame_13)
        self.contingencyEngineComboBox.setObjectName(u"contingencyEngineComboBox")
        self.contingencyEngineComboBox.setFont(font1)

        self.gridLayout_25.addWidget(self.contingencyEngineComboBox, 1, 0, 1, 2)


        self.gridLayout_28.addWidget(self.frame_13, 3, 0, 1, 2)

        self.frame_78 = QFrame(self.frame_76)
        self.frame_78.setObjectName(u"frame_78")
        self.frame_78.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_78.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_41 = QHBoxLayout(self.frame_78)
        self.horizontalLayout_41.setObjectName(u"horizontalLayout_41")
        self.horizontalLayout_41.setContentsMargins(0, 0, 0, 0)
        self.label_109 = QLabel(self.frame_78)
        self.label_109.setObjectName(u"label_109")
        self.label_109.setMinimumSize(QSize(24, 24))
        self.label_109.setMaximumSize(QSize(24, 24))
        self.label_109.setPixmap(QPixmap(u":/Icons/icons/otdf.svg"))
        self.label_109.setScaledContents(True)

        self.horizontalLayout_41.addWidget(self.label_109)

        self.label_117 = QLabel(self.frame_78)
        self.label_117.setObjectName(u"label_117")
        palette25 = QPalette()
        palette25.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette25.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette25.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_117.setPalette(palette25)
        self.label_117.setFont(font4)
        self.label_117.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_41.addWidget(self.label_117)


        self.gridLayout_28.addWidget(self.frame_78, 0, 0, 1, 2)

        self.horizontalSpacer_28 = QSpacerItem(828, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_28.addItem(self.horizontalSpacer_28, 3, 3, 1, 1)

        self.line_25 = QFrame(self.frame_76)
        self.line_25.setObjectName(u"line_25")
        palette26 = QPalette()
        palette26.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette26.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette26.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_25.setPalette(palette26)
        self.line_25.setFrameShadow(QFrame.Shadow.Plain)
        self.line_25.setLineWidth(4)
        self.line_25.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_28.addWidget(self.line_25, 2, 0, 1, 4)


        self.horizontalLayout_42.addWidget(self.frame_76)

        self.settings_tabWidget.addTab(self.contingencies_tab, icon44, "")
        self.ml_tab = QWidget()
        self.ml_tab.setObjectName(u"ml_tab")
        self.horizontalLayout_6 = QHBoxLayout(self.ml_tab)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.frame_18 = QFrame(self.ml_tab)
        self.frame_18.setObjectName(u"frame_18")
        self.frame_18.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_18.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_21 = QGridLayout(self.frame_18)
        self.gridLayout_21.setObjectName(u"gridLayout_21")
        self.gridLayout_21.setContentsMargins(-1, 0, -1, -1)
        self.label_31 = QLabel(self.frame_18)
        self.label_31.setObjectName(u"label_31")

        self.gridLayout_21.addWidget(self.label_31, 20, 0, 1, 1)

        self.line_24 = QFrame(self.frame_18)
        self.line_24.setObjectName(u"line_24")
        palette27 = QPalette()
        palette27.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette27.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette27.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_24.setPalette(palette27)
        self.line_24.setFrameShadow(QFrame.Shadow.Plain)
        self.line_24.setLineWidth(4)
        self.line_24.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_21.addWidget(self.line_24, 14, 0, 1, 3)

        self.label_121 = QLabel(self.frame_18)
        self.label_121.setObjectName(u"label_121")
        palette28 = QPalette()
        palette28.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette28.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette28.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_121.setPalette(palette28)
        self.label_121.setFont(font4)
        self.label_121.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_21.addWidget(self.label_121, 21, 1, 1, 2)

        self.line_29 = QFrame(self.frame_18)
        self.line_29.setObjectName(u"line_29")
        palette29 = QPalette()
        palette29.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette29.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette29.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_29.setPalette(palette29)
        self.line_29.setFrameShadow(QFrame.Shadow.Plain)
        self.line_29.setLineWidth(4)
        self.line_29.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_21.addWidget(self.line_29, 9, 0, 1, 3)

        self.node_distances_elements_spinBox = QSpinBox(self.frame_18)
        self.node_distances_elements_spinBox.setObjectName(u"node_distances_elements_spinBox")
        self.node_distances_elements_spinBox.setFont(font1)
        self.node_distances_elements_spinBox.setMinimum(1)
        self.node_distances_elements_spinBox.setMaximum(99999)
        self.node_distances_elements_spinBox.setValue(2)

        self.gridLayout_21.addWidget(self.node_distances_elements_spinBox, 17, 2, 1, 1)

        self.label_89 = QLabel(self.frame_18)
        self.label_89.setObjectName(u"label_89")
        palette30 = QPalette()
        palette30.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette30.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette30.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_89.setPalette(palette30)
        self.label_89.setFont(font4)
        self.label_89.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_21.addWidget(self.label_89, 13, 1, 1, 2)

        self.internal_investment_methods_radioButton = QRadioButton(self.frame_18)
        self.internal_investment_methods_radioButton.setObjectName(u"internal_investment_methods_radioButton")
        self.internal_investment_methods_radioButton.setFont(font1)
        self.internal_investment_methods_radioButton.setChecked(True)

        self.gridLayout_21.addWidget(self.internal_investment_methods_radioButton, 25, 0, 1, 3)

        self.label_88 = QLabel(self.frame_18)
        self.label_88.setObjectName(u"label_88")
        self.label_88.setMinimumSize(QSize(24, 24))
        self.label_88.setMaximumSize(QSize(24, 24))
        self.label_88.setPixmap(QPixmap(u":/Icons/icons/color_grid.svg"))
        self.label_88.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_88, 13, 0, 1, 1)

        self.cluster_number_spinBox = QSpinBox(self.frame_18)
        self.cluster_number_spinBox.setObjectName(u"cluster_number_spinBox")
        self.cluster_number_spinBox.setFont(font1)
        self.cluster_number_spinBox.setMinimum(1)
        self.cluster_number_spinBox.setMaximum(999999)
        self.cluster_number_spinBox.setValue(200)

        self.gridLayout_21.addWidget(self.cluster_number_spinBox, 10, 2, 1, 1)

        self.label_44 = QLabel(self.frame_18)
        self.label_44.setObjectName(u"label_44")

        self.gridLayout_21.addWidget(self.label_44, 18, 0, 1, 2)

        self.plugins_investment_methods_radioButton = QRadioButton(self.frame_18)
        self.plugins_investment_methods_radioButton.setObjectName(u"plugins_investment_methods_radioButton")
        self.plugins_investment_methods_radioButton.setFont(font1)

        self.gridLayout_21.addWidget(self.plugins_investment_methods_radioButton, 29, 0, 1, 3)

        self.label_7 = QLabel(self.frame_18)
        self.label_7.setObjectName(u"label_7")

        self.gridLayout_21.addWidget(self.label_7, 12, 0, 1, 2)

        self.label_153 = QLabel(self.frame_18)
        self.label_153.setObjectName(u"label_153")
        self.label_153.setFont(font1)

        self.gridLayout_21.addWidget(self.label_153, 28, 0, 1, 2)

        self.plugins_investment_evaluation_method_ComboBox = QComboBox(self.frame_18)
        self.plugins_investment_evaluation_method_ComboBox.setObjectName(u"plugins_investment_evaluation_method_ComboBox")
        self.plugins_investment_evaluation_method_ComboBox.setFont(font1)

        self.gridLayout_21.addWidget(self.plugins_investment_evaluation_method_ComboBox, 30, 2, 1, 1)

        self.label_33 = QLabel(self.frame_18)
        self.label_33.setObjectName(u"label_33")
        self.label_33.setFont(font1)

        self.gridLayout_21.addWidget(self.label_33, 10, 0, 1, 2)

        self.investment_evaluation_objfunc_ComboBox = QComboBox(self.frame_18)
        self.investment_evaluation_objfunc_ComboBox.setObjectName(u"investment_evaluation_objfunc_ComboBox")
        self.investment_evaluation_objfunc_ComboBox.setFont(font1)

        self.gridLayout_21.addWidget(self.investment_evaluation_objfunc_ComboBox, 28, 2, 1, 1)

        self.frame_59 = QFrame(self.frame_18)
        self.frame_59.setObjectName(u"frame_59")
        self.frame_59.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_59.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_32 = QHBoxLayout(self.frame_59)
        self.horizontalLayout_32.setObjectName(u"horizontalLayout_32")
        self.horizontalLayout_32.setContentsMargins(0, 0, 0, 0)
        self.label_93 = QLabel(self.frame_59)
        self.label_93.setObjectName(u"label_93")
        palette31 = QPalette()
        palette31.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette31.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette31.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_93.setPalette(palette31)
        self.label_93.setFont(font4)
        self.label_93.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_32.addWidget(self.label_93)


        self.gridLayout_21.addWidget(self.frame_59, 8, 1, 1, 1)

        self.node_distances_sigma_doubleSpinBox = QDoubleSpinBox(self.frame_18)
        self.node_distances_sigma_doubleSpinBox.setObjectName(u"node_distances_sigma_doubleSpinBox")
        self.node_distances_sigma_doubleSpinBox.setFont(font1)
        self.node_distances_sigma_doubleSpinBox.setDecimals(6)
        self.node_distances_sigma_doubleSpinBox.setSingleStep(0.010000000000000)
        self.node_distances_sigma_doubleSpinBox.setValue(0.750000000000000)

        self.gridLayout_21.addWidget(self.node_distances_sigma_doubleSpinBox, 16, 2, 1, 1)

        self.label_61 = QLabel(self.frame_18)
        self.label_61.setObjectName(u"label_61")
        self.label_61.setFont(font1)

        self.gridLayout_21.addWidget(self.label_61, 17, 0, 1, 2)

        self.max_investments_evluation_number_spinBox = QSpinBox(self.frame_18)
        self.max_investments_evluation_number_spinBox.setObjectName(u"max_investments_evluation_number_spinBox")
        self.max_investments_evluation_number_spinBox.setFont(font1)
        self.max_investments_evluation_number_spinBox.setMinimum(1)
        self.max_investments_evluation_number_spinBox.setMaximum(999999999)
        self.max_investments_evluation_number_spinBox.setValue(4)

        self.gridLayout_21.addWidget(self.max_investments_evluation_number_spinBox, 23, 2, 1, 1)

        self.label_94 = QLabel(self.frame_18)
        self.label_94.setObjectName(u"label_94")
        self.label_94.setMinimumSize(QSize(24, 24))
        self.label_94.setMaximumSize(QSize(24, 24))
        self.label_94.setPixmap(QPixmap(u":/Icons/icons/clustering.svg"))
        self.label_94.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_94, 8, 0, 1, 1)

        self.verticalSpacer_16 = QSpacerItem(20, 250, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_21.addItem(self.verticalSpacer_16, 33, 1, 1, 1)

        self.label_83 = QLabel(self.frame_18)
        self.label_83.setObjectName(u"label_83")
        self.label_83.setFont(font1)

        self.gridLayout_21.addWidget(self.label_83, 30, 0, 1, 2)

        self.line_30 = QFrame(self.frame_18)
        self.line_30.setObjectName(u"line_30")
        palette32 = QPalette()
        palette32.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette32.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette32.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_30.setPalette(palette32)
        self.line_30.setFrameShadow(QFrame.Shadow.Plain)
        self.line_30.setLineWidth(4)
        self.line_30.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_21.addWidget(self.line_30, 22, 0, 1, 3)

        self.label_38 = QLabel(self.frame_18)
        self.label_38.setObjectName(u"label_38")
        self.label_38.setFont(font1)

        self.gridLayout_21.addWidget(self.label_38, 16, 0, 1, 2)

        self.label_120 = QLabel(self.frame_18)
        self.label_120.setObjectName(u"label_120")
        self.label_120.setMinimumSize(QSize(24, 24))
        self.label_120.setMaximumSize(QSize(24, 24))
        self.label_120.setPixmap(QPixmap(u":/Icons/icons/expansion_planning.svg"))
        self.label_120.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_120, 21, 0, 1, 1)

        self.label_3 = QLabel(self.frame_18)
        self.label_3.setObjectName(u"label_3")
        self.label_3.setFont(font1)

        self.gridLayout_21.addWidget(self.label_3, 26, 0, 1, 2)

        self.investment_evaluation_method_ComboBox = QComboBox(self.frame_18)
        self.investment_evaluation_method_ComboBox.setObjectName(u"investment_evaluation_method_ComboBox")
        self.investment_evaluation_method_ComboBox.setFont(font1)

        self.gridLayout_21.addWidget(self.investment_evaluation_method_ComboBox, 26, 2, 1, 1)

        self.label_87 = QLabel(self.frame_18)
        self.label_87.setObjectName(u"label_87")

        self.gridLayout_21.addWidget(self.label_87, 24, 0, 1, 2)

        self.label_51 = QLabel(self.frame_18)
        self.label_51.setObjectName(u"label_51")
        self.label_51.setFont(font1)

        self.gridLayout_21.addWidget(self.label_51, 23, 0, 1, 2)


        self.horizontalLayout_6.addWidget(self.frame_18)

        self.frame_15 = QFrame(self.ml_tab)
        self.frame_15.setObjectName(u"frame_15")
        self.frame_15.setMinimumSize(QSize(300, 0))
        self.frame_15.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_15.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_6 = QGridLayout(self.frame_15)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.gridLayout_6.setContentsMargins(-1, 0, -1, -1)
        self.line_10 = QFrame(self.frame_15)
        self.line_10.setObjectName(u"line_10")
        palette33 = QPalette()
        palette33.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette33.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette33.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_10.setPalette(palette33)
        self.line_10.setFrameShadow(QFrame.Shadow.Plain)
        self.line_10.setLineWidth(4)
        self.line_10.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_6.addWidget(self.line_10, 9, 0, 1, 3)

        self.max_iterations_stochastic_spinBox = QSpinBox(self.frame_15)
        self.max_iterations_stochastic_spinBox.setObjectName(u"max_iterations_stochastic_spinBox")
        self.max_iterations_stochastic_spinBox.setFont(font1)
        self.max_iterations_stochastic_spinBox.setMinimum(10)
        self.max_iterations_stochastic_spinBox.setMaximum(99999999)
        self.max_iterations_stochastic_spinBox.setValue(1000)

        self.gridLayout_6.addWidget(self.max_iterations_stochastic_spinBox, 6, 2, 1, 1)

        self.tolerance_stochastic_spinBox = QSpinBox(self.frame_15)
        self.tolerance_stochastic_spinBox.setObjectName(u"tolerance_stochastic_spinBox")
        self.tolerance_stochastic_spinBox.setFont(font1)
        self.tolerance_stochastic_spinBox.setMinimum(1)
        self.tolerance_stochastic_spinBox.setMaximum(20)
        self.tolerance_stochastic_spinBox.setValue(4)

        self.gridLayout_6.addWidget(self.tolerance_stochastic_spinBox, 5, 2, 1, 1)

        self.cascading_islands_spinBox = QSpinBox(self.frame_15)
        self.cascading_islands_spinBox.setObjectName(u"cascading_islands_spinBox")
        self.cascading_islands_spinBox.setFont(font1)
        self.cascading_islands_spinBox.setMinimum(1)
        self.cascading_islands_spinBox.setMaximum(999999)
        self.cascading_islands_spinBox.setValue(2)

        self.gridLayout_6.addWidget(self.cascading_islands_spinBox, 10, 2, 1, 1)

        self.label_78 = QLabel(self.frame_15)
        self.label_78.setObjectName(u"label_78")
        self.label_78.setMinimumSize(QSize(24, 24))
        self.label_78.setMaximumSize(QSize(24, 24))
        self.label_78.setPixmap(QPixmap(u":/Icons/icons/blackout.svg"))
        self.label_78.setScaledContents(True)

        self.gridLayout_6.addWidget(self.label_78, 8, 0, 1, 1)

        self.label_47 = QLabel(self.frame_15)
        self.label_47.setObjectName(u"label_47")
        palette34 = QPalette()
        palette34.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette34.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette34.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_47.setPalette(palette34)
        self.label_47.setFont(font4)
        self.label_47.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_6.addWidget(self.label_47, 0, 1, 1, 2)

        self.label_157 = QLabel(self.frame_15)
        self.label_157.setObjectName(u"label_157")
        self.label_157.setFont(font1)

        self.gridLayout_6.addWidget(self.label_157, 16, 0, 1, 2)

        self.label_79 = QLabel(self.frame_15)
        self.label_79.setObjectName(u"label_79")
        palette35 = QPalette()
        palette35.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette35.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette35.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_79.setPalette(palette35)
        self.label_79.setFont(font4)
        self.label_79.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_6.addWidget(self.label_79, 8, 1, 1, 2)

        self.label_156 = QLabel(self.frame_15)
        self.label_156.setObjectName(u"label_156")

        self.gridLayout_6.addWidget(self.label_156, 11, 0, 1, 3)

        self.max_iterations_reliability_spinBox = QSpinBox(self.frame_15)
        self.max_iterations_reliability_spinBox.setObjectName(u"max_iterations_reliability_spinBox")
        self.max_iterations_reliability_spinBox.setFont(font1)
        self.max_iterations_reliability_spinBox.setMinimum(10)
        self.max_iterations_reliability_spinBox.setMaximum(99999999)
        self.max_iterations_reliability_spinBox.setValue(1000)

        self.gridLayout_6.addWidget(self.max_iterations_reliability_spinBox, 16, 2, 1, 1)

        self.label_55 = QLabel(self.frame_15)
        self.label_55.setObjectName(u"label_55")
        self.label_55.setFont(font1)

        self.gridLayout_6.addWidget(self.label_55, 3, 0, 1, 2)

        self.label_99 = QLabel(self.frame_15)
        self.label_99.setObjectName(u"label_99")
        self.label_99.setMinimumSize(QSize(24, 24))
        self.label_99.setMaximumSize(QSize(24, 24))
        self.label_99.setPixmap(QPixmap(u":/Icons/icons/reliability.svg"))
        self.label_99.setScaledContents(True)

        self.gridLayout_6.addWidget(self.label_99, 13, 0, 1, 1)

        self.label_138 = QLabel(self.frame_15)
        self.label_138.setObjectName(u"label_138")

        self.gridLayout_6.addWidget(self.label_138, 7, 0, 1, 3)

        self.line_6 = QFrame(self.frame_15)
        self.line_6.setObjectName(u"line_6")
        palette36 = QPalette()
        palette36.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette36.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette36.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_6.setPalette(palette36)
        self.line_6.setFrameShadow(QFrame.Shadow.Plain)
        self.line_6.setLineWidth(4)
        self.line_6.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_6.addWidget(self.line_6, 14, 0, 1, 3)

        self.label_28 = QLabel(self.frame_15)
        self.label_28.setObjectName(u"label_28")
        self.label_28.setFont(font1)

        self.gridLayout_6.addWidget(self.label_28, 10, 0, 1, 2)

        self.stochastic_pf_method_comboBox = QComboBox(self.frame_15)
        self.stochastic_pf_method_comboBox.setObjectName(u"stochastic_pf_method_comboBox")
        self.stochastic_pf_method_comboBox.setFont(font1)

        self.gridLayout_6.addWidget(self.stochastic_pf_method_comboBox, 3, 2, 1, 1)

        self.verticalSpacer_8 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_6.addItem(self.verticalSpacer_8, 17, 1, 1, 1)

        self.label_75 = QLabel(self.frame_15)
        self.label_75.setObjectName(u"label_75")
        self.label_75.setMinimumSize(QSize(24, 24))
        self.label_75.setMaximumSize(QSize(24, 24))
        self.label_75.setPixmap(QPixmap(u":/Icons/icons/stochastic_power_flow.svg"))
        self.label_75.setScaledContents(True)

        self.gridLayout_6.addWidget(self.label_75, 0, 0, 1, 1)

        self.line_4 = QFrame(self.frame_15)
        self.line_4.setObjectName(u"line_4")
        palette37 = QPalette()
        palette37.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette37.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette37.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_4.setPalette(palette37)
        self.line_4.setFrameShadow(QFrame.Shadow.Plain)
        self.line_4.setLineWidth(4)
        self.line_4.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_6.addWidget(self.line_4, 1, 0, 1, 3)

        self.label_12 = QLabel(self.frame_15)
        self.label_12.setObjectName(u"label_12")
        self.label_12.setFont(font1)

        self.gridLayout_6.addWidget(self.label_12, 5, 0, 1, 2)

        self.label_13 = QLabel(self.frame_15)
        self.label_13.setObjectName(u"label_13")
        self.label_13.setFont(font1)

        self.gridLayout_6.addWidget(self.label_13, 6, 0, 1, 2)

        self.label_100 = QLabel(self.frame_15)
        self.label_100.setObjectName(u"label_100")
        palette38 = QPalette()
        palette38.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette38.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette38.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_100.setPalette(palette38)
        self.label_100.setFont(font4)
        self.label_100.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.gridLayout_6.addWidget(self.label_100, 13, 1, 1, 2)

        self.label_158 = QLabel(self.frame_15)
        self.label_158.setObjectName(u"label_158")
        self.label_158.setFont(font1)

        self.gridLayout_6.addWidget(self.label_158, 15, 0, 1, 2)

        self.reliability_method_comboBox = QComboBox(self.frame_15)
        self.reliability_method_comboBox.setObjectName(u"reliability_method_comboBox")
        self.reliability_method_comboBox.setFont(font1)

        self.gridLayout_6.addWidget(self.reliability_method_comboBox, 15, 2, 1, 1)


        self.horizontalLayout_6.addWidget(self.frame_15)

        self.horizontalSpacer_3 = QSpacerItem(935, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_6.addItem(self.horizontalSpacer_3)

        self.settings_tabWidget.addTab(self.ml_tab, icon57, "")
        self.topology_tab = QWidget()
        self.topology_tab.setObjectName(u"topology_tab")
        self.gridLayout_17 = QGridLayout(self.topology_tab)
        self.gridLayout_17.setObjectName(u"gridLayout_17")
        self.horizontalSpacer_18 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_17.addItem(self.horizontalSpacer_18, 0, 2, 1, 1)

        self.frame_27 = QFrame(self.topology_tab)
        self.frame_27.setObjectName(u"frame_27")
        self.frame_27.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_27.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_21 = QVBoxLayout(self.frame_27)
        self.verticalLayout_21.setObjectName(u"verticalLayout_21")
        self.verticalLayout_21.setContentsMargins(-1, 0, -1, -1)
        self.frame_48 = QFrame(self.frame_27)
        self.frame_48.setObjectName(u"frame_48")
        self.frame_48.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_48.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_20 = QHBoxLayout(self.frame_48)
        self.horizontalLayout_20.setObjectName(u"horizontalLayout_20")
        self.horizontalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.label_80 = QLabel(self.frame_48)
        self.label_80.setObjectName(u"label_80")
        self.label_80.setMinimumSize(QSize(24, 24))
        self.label_80.setMaximumSize(QSize(24, 24))
        self.label_80.setPixmap(QPixmap(u":/Icons/icons/grid_reduction.svg"))
        self.label_80.setScaledContents(True)

        self.horizontalLayout_20.addWidget(self.label_80)

        self.label_81 = QLabel(self.frame_48)
        self.label_81.setObjectName(u"label_81")
        palette39 = QPalette()
        palette39.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette39.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette39.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_81.setPalette(palette39)
        self.label_81.setFont(font4)
        self.label_81.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_20.addWidget(self.label_81)


        self.verticalLayout_21.addWidget(self.frame_48)

        self.line_20 = QFrame(self.frame_27)
        self.line_20.setObjectName(u"line_20")
        palette40 = QPalette()
        palette40.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette40.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette40.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_20.setPalette(palette40)
        self.line_20.setFrameShadow(QFrame.Shadow.Plain)
        self.line_20.setLineWidth(4)
        self.line_20.setFrameShape(QFrame.Shape.HLine)

        self.verticalLayout_21.addWidget(self.line_20)

        self.label_59 = QLabel(self.frame_27)
        self.label_59.setObjectName(u"label_59")
        self.label_59.setFont(font1)

        self.verticalLayout_21.addWidget(self.label_59)

        self.removeByTypeListView = QListView(self.frame_27)
        self.removeByTypeListView.setObjectName(u"removeByTypeListView")
        self.removeByTypeListView.setFont(font1)

        self.verticalLayout_21.addWidget(self.removeByTypeListView)

        self.rxThresholdCheckBox = QCheckBox(self.frame_27)
        self.rxThresholdCheckBox.setObjectName(u"rxThresholdCheckBox")
        self.rxThresholdCheckBox.setFont(font1)
        self.rxThresholdCheckBox.setChecked(True)

        self.verticalLayout_21.addWidget(self.rxThresholdCheckBox)

        self.rxThresholdSpinBox = QSpinBox(self.frame_27)
        self.rxThresholdSpinBox.setObjectName(u"rxThresholdSpinBox")
        self.rxThresholdSpinBox.setFont(font1)
        self.rxThresholdSpinBox.setValue(5)

        self.verticalLayout_21.addWidget(self.rxThresholdSpinBox)

        self.verticalSpacer_11 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_21.addItem(self.verticalSpacer_11)


        self.gridLayout_17.addWidget(self.frame_27, 0, 0, 1, 1)

        self.frame_31 = QFrame(self.topology_tab)
        self.frame_31.setObjectName(u"frame_31")
        self.frame_31.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_31.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_25 = QVBoxLayout(self.frame_31)
        self.verticalLayout_25.setObjectName(u"verticalLayout_25")
        self.verticalLayout_25.setContentsMargins(-1, 0, -1, -1)
        self.frame_50 = QFrame(self.frame_31)
        self.frame_50.setObjectName(u"frame_50")
        self.frame_50.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_50.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_22 = QHBoxLayout(self.frame_50)
        self.horizontalLayout_22.setObjectName(u"horizontalLayout_22")
        self.horizontalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.label_84 = QLabel(self.frame_50)
        self.label_84.setObjectName(u"label_84")
        self.label_84.setMinimumSize(QSize(24, 24))
        self.label_84.setMaximumSize(QSize(24, 24))
        self.label_84.setPixmap(QPixmap(u":/Icons/icons/rate_br.svg"))
        self.label_84.setScaledContents(True)

        self.horizontalLayout_22.addWidget(self.label_84)

        self.label_85 = QLabel(self.frame_50)
        self.label_85.setObjectName(u"label_85")
        palette41 = QPalette()
        palette41.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette41.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette41.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_85.setPalette(palette41)
        self.label_85.setFont(font4)
        self.label_85.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft)

        self.horizontalLayout_22.addWidget(self.label_85)


        self.verticalLayout_25.addWidget(self.frame_50)

        self.line_8 = QFrame(self.frame_31)
        self.line_8.setObjectName(u"line_8")
        palette42 = QPalette()
        palette42.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette42.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette42.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_8.setPalette(palette42)
        self.line_8.setFrameShadow(QFrame.Shadow.Plain)
        self.line_8.setLineWidth(4)
        self.line_8.setFrameShape(QFrame.Shape.HLine)

        self.verticalLayout_25.addWidget(self.line_8)

        self.frame_23 = QFrame(self.frame_31)
        self.frame_23.setObjectName(u"frame_23")
        self.frame_23.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_23.setFrameShadow(QFrame.Shadow.Raised)
        self.verticalLayout_15 = QVBoxLayout(self.frame_23)
        self.verticalLayout_15.setObjectName(u"verticalLayout_15")
        self.label_34 = QLabel(self.frame_23)
        self.label_34.setObjectName(u"label_34")
        self.label_34.setFont(font1)

        self.verticalLayout_15.addWidget(self.label_34)

        self.branch_rating_doubleSpinBox = QDoubleSpinBox(self.frame_23)
        self.branch_rating_doubleSpinBox.setObjectName(u"branch_rating_doubleSpinBox")
        self.branch_rating_doubleSpinBox.setFont(font1)
        self.branch_rating_doubleSpinBox.setMinimum(1.000000000000000)
        self.branch_rating_doubleSpinBox.setMaximum(100.000000000000000)
        self.branch_rating_doubleSpinBox.setSingleStep(0.100000000000000)
        self.branch_rating_doubleSpinBox.setValue(1.200000000000000)

        self.verticalLayout_15.addWidget(self.branch_rating_doubleSpinBox)

        self.rating_override_checkBox = QCheckBox(self.frame_23)
        self.rating_override_checkBox.setObjectName(u"rating_override_checkBox")
        self.rating_override_checkBox.setFont(font1)

        self.verticalLayout_15.addWidget(self.rating_override_checkBox)


        self.verticalLayout_25.addWidget(self.frame_23)

        self.verticalSpacer_15 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_25.addItem(self.verticalSpacer_15)


        self.gridLayout_17.addWidget(self.frame_31, 0, 1, 1, 1)

        self.settings_tabWidget.addTab(self.topology_tab, icon13, "")
        self.file_tab = QWidget()
        self.file_tab.setObjectName(u"file_tab")
        self.horizontalLayout_40 = QHBoxLayout(self.file_tab)
        self.horizontalLayout_40.setObjectName(u"horizontalLayout_40")
        self.frame_77 = QFrame(self.file_tab)
        self.frame_77.setObjectName(u"frame_77")
        self.frame_77.setMinimumSize(QSize(300, 0))
        self.frame_77.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_77.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_11 = QGridLayout(self.frame_77)
        self.gridLayout_11.setObjectName(u"gridLayout_11")
        self.raw_export_version_comboBox = QComboBox(self.frame_77)
        self.raw_export_version_comboBox.setObjectName(u"raw_export_version_comboBox")

        self.gridLayout_11.addWidget(self.raw_export_version_comboBox, 11, 1, 1, 1)

        self.line_28 = QFrame(self.frame_77)
        self.line_28.setObjectName(u"line_28")
        palette43 = QPalette()
        palette43.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette43.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette43.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_28.setPalette(palette43)
        self.line_28.setFrameShadow(QFrame.Shadow.Plain)
        self.line_28.setLineWidth(4)
        self.line_28.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_11.addWidget(self.line_28, 1, 0, 1, 2)

        self.verticalSpacer_20 = QSpacerItem(20, 436, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_11.addItem(self.verticalSpacer_20, 12, 1, 1, 1)

        self.file_information_label = QLabel(self.frame_77)
        self.file_information_label.setObjectName(u"file_information_label")
        self.file_information_label.setFont(font1)
        self.file_information_label.setWordWrap(True)
        self.file_information_label.setTextInteractionFlags(Qt.TextInteractionFlag.LinksAccessibleByMouse|Qt.TextInteractionFlag.TextSelectableByKeyboard|Qt.TextInteractionFlag.TextSelectableByMouse)

        self.gridLayout_11.addWidget(self.file_information_label, 3, 0, 1, 2)

        self.label_131 = QLabel(self.frame_77)
        self.label_131.setObjectName(u"label_131")
        palette44 = QPalette()
        palette44.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette44.setBrush(QPalette.Inactive, QPalette.WindowText, brush5)
        palette44.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_131.setPalette(palette44)
        self.label_131.setFont(font4)

        self.gridLayout_11.addWidget(self.label_131, 9, 1, 1, 1)

        self.saveResultsCheckBox = QCheckBox(self.frame_77)
        self.saveResultsCheckBox.setObjectName(u"saveResultsCheckBox")
        self.saveResultsCheckBox.setFont(font1)

        self.gridLayout_11.addWidget(self.saveResultsCheckBox, 7, 0, 1, 2)

        self.model_version_label = QLabel(self.frame_77)
        self.model_version_label.setObjectName(u"model_version_label")
        self.model_version_label.setFont(font1)

        self.gridLayout_11.addWidget(self.model_version_label, 4, 0, 1, 2)

        self.label_145 = QLabel(self.frame_77)
        self.label_145.setObjectName(u"label_145")
        self.label_145.setMinimumSize(QSize(24, 24))
        self.label_145.setMaximumSize(QSize(24, 24))
        self.label_145.setPixmap(QPixmap(u":/Icons/icons/new2c.svg"))
        self.label_145.setScaledContents(True)

        self.gridLayout_11.addWidget(self.label_145, 9, 0, 1, 1)

        self.label_155 = QLabel(self.frame_77)
        self.label_155.setObjectName(u"label_155")

        self.gridLayout_11.addWidget(self.label_155, 8, 0, 1, 1)

        self.line_33 = QFrame(self.frame_77)
        self.line_33.setObjectName(u"line_33")
        palette45 = QPalette()
        palette45.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette45.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette45.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_33.setPalette(palette45)
        self.line_33.setFrameShadow(QFrame.Shadow.Plain)
        self.line_33.setLineWidth(4)
        self.line_33.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_11.addWidget(self.line_33, 10, 0, 1, 2)

        self.label_112 = QLabel(self.frame_77)
        self.label_112.setObjectName(u"label_112")
        self.label_112.setFont(font1)

        self.gridLayout_11.addWidget(self.label_112, 11, 0, 1, 1)

        self.label_39 = QLabel(self.frame_77)
        self.label_39.setObjectName(u"label_39")
        self.label_39.setFont(font1)

        self.gridLayout_11.addWidget(self.label_39, 2, 0, 1, 2)

        self.label_115 = QLabel(self.frame_77)
        self.label_115.setObjectName(u"label_115")
        palette46 = QPalette()
        palette46.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette46.setBrush(QPalette.Inactive, QPalette.WindowText, brush5)
        palette46.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_115.setPalette(palette46)
        self.label_115.setFont(font4)

        self.gridLayout_11.addWidget(self.label_115, 0, 1, 1, 1)

        self.label_136 = QLabel(self.frame_77)
        self.label_136.setObjectName(u"label_136")
        self.label_136.setMinimumSize(QSize(24, 24))
        self.label_136.setMaximumSize(QSize(24, 24))
        self.label_136.setPixmap(QPixmap(u":/Icons/icons/new2c.svg"))
        self.label_136.setScaledContents(True)

        self.gridLayout_11.addWidget(self.label_136, 0, 0, 1, 1)

        self.user_name_label = QLabel(self.frame_77)
        self.user_name_label.setObjectName(u"user_name_label")
        self.user_name_label.setFont(font1)

        self.gridLayout_11.addWidget(self.user_name_label, 5, 0, 1, 2)

        self.grid_idtag_label = QLabel(self.frame_77)
        self.grid_idtag_label.setObjectName(u"grid_idtag_label")
        self.grid_idtag_label.setFont(font1)

        self.gridLayout_11.addWidget(self.grid_idtag_label, 6, 0, 1, 2)


        self.horizontalLayout_40.addWidget(self.frame_77)

        self.frame_79 = QFrame(self.file_tab)
        self.frame_79.setObjectName(u"frame_79")
        self.frame_79.setMinimumSize(QSize(300, 0))
        self.frame_79.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_79.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_5 = QGridLayout(self.frame_79)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.line_31 = QFrame(self.frame_79)
        self.line_31.setObjectName(u"line_31")
        palette47 = QPalette()
        palette47.setBrush(QPalette.Active, QPalette.WindowText, brush3)
        palette47.setBrush(QPalette.Inactive, QPalette.WindowText, brush3)
        palette47.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_31.setPalette(palette47)
        self.line_31.setFrameShadow(QFrame.Shadow.Plain)
        self.line_31.setLineWidth(4)
        self.line_31.setFrameShape(QFrame.Shape.HLine)

        self.gridLayout_5.addWidget(self.line_31, 1, 0, 1, 3)

        self.label_134 = QLabel(self.frame_79)
        self.label_134.setObjectName(u"label_134")
        palette48 = QPalette()
        palette48.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette48.setBrush(QPalette.Inactive, QPalette.WindowText, brush5)
        palette48.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_134.setPalette(palette48)
        self.label_134.setFont(font4)

        self.gridLayout_5.addWidget(self.label_134, 0, 1, 1, 2)

        self.label_102 = QLabel(self.frame_79)
        self.label_102.setObjectName(u"label_102")

        self.gridLayout_5.addWidget(self.label_102, 10, 0, 1, 1)

        self.label_139 = QLabel(self.frame_79)
        self.label_139.setObjectName(u"label_139")
        self.label_139.setFont(font1)

        self.gridLayout_5.addWidget(self.label_139, 11, 0, 1, 3)

        self.cgmes_dc_as_hvdclines_checkBox = QCheckBox(self.frame_79)
        self.cgmes_dc_as_hvdclines_checkBox.setObjectName(u"cgmes_dc_as_hvdclines_checkBox")
        self.cgmes_dc_as_hvdclines_checkBox.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_dc_as_hvdclines_checkBox, 15, 0, 1, 3)

        self.cgmes_single_profile_per_file_checkBox = QCheckBox(self.frame_79)
        self.cgmes_single_profile_per_file_checkBox.setObjectName(u"cgmes_single_profile_per_file_checkBox")
        self.cgmes_single_profile_per_file_checkBox.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_single_profile_per_file_checkBox, 13, 0, 1, 3)

        self.selectCGMESBoundarySetButton = QPushButton(self.frame_79)
        self.selectCGMESBoundarySetButton.setObjectName(u"selectCGMESBoundarySetButton")
        self.selectCGMESBoundarySetButton.setMaximumSize(QSize(80, 16777215))
        self.selectCGMESBoundarySetButton.setFont(font1)

        self.gridLayout_5.addWidget(self.selectCGMESBoundarySetButton, 9, 2, 1, 1)

        self.cgmes_version_comboBox = QComboBox(self.frame_79)
        self.cgmes_version_comboBox.setObjectName(u"cgmes_version_comboBox")
        self.cgmes_version_comboBox.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_version_comboBox, 3, 0, 1, 3)

        self.cgmes_map_regions_like_raw_checkBox = QCheckBox(self.frame_79)
        self.cgmes_map_regions_like_raw_checkBox.setObjectName(u"cgmes_map_regions_like_raw_checkBox")
        self.cgmes_map_regions_like_raw_checkBox.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_map_regions_like_raw_checkBox, 14, 0, 1, 3)

        self.label_135 = QLabel(self.frame_79)
        self.label_135.setObjectName(u"label_135")
        self.label_135.setFont(font1)

        self.gridLayout_5.addWidget(self.label_135, 2, 0, 1, 3)

        self.label_90 = QLabel(self.frame_79)
        self.label_90.setObjectName(u"label_90")
        self.label_90.setFont(font1)

        self.gridLayout_5.addWidget(self.label_90, 8, 0, 1, 3)

        self.cgmes_boundary_set_label = QLabel(self.frame_79)
        self.cgmes_boundary_set_label.setObjectName(u"cgmes_boundary_set_label")
        self.cgmes_boundary_set_label.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_boundary_set_label, 9, 0, 1, 2)

        self.label_137 = QLabel(self.frame_79)
        self.label_137.setObjectName(u"label_137")
        self.label_137.setMinimumSize(QSize(24, 24))
        self.label_137.setMaximumSize(QSize(24, 24))
        self.label_137.setPixmap(QPixmap(u":/Icons/icons/new2.svg"))
        self.label_137.setScaledContents(True)

        self.gridLayout_5.addWidget(self.label_137, 0, 0, 1, 1)

        self.cgmes_profiles_listView = QListView(self.frame_79)
        self.cgmes_profiles_listView.setObjectName(u"cgmes_profiles_listView")
        self.cgmes_profiles_listView.setFont(font1)

        self.gridLayout_5.addWidget(self.cgmes_profiles_listView, 12, 0, 1, 3)


        self.horizontalLayout_40.addWidget(self.frame_79)

        self.horizontalSpacer_27 = QSpacerItem(659, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_40.addItem(self.horizontalSpacer_27)

        self.settings_tabWidget.addTab(self.file_tab, icon4, "")
        self.tab_5 = QWidget()
        self.tab_5.setObjectName(u"tab_5")
        self.verticalLayout_7 = QVBoxLayout(self.tab_5)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.server_tableView = QTableView(self.tab_5)
        self.server_tableView.setObjectName(u"server_tableView")
        self.server_tableView.setFont(font1)

        self.verticalLayout_7.addWidget(self.server_tableView)

        self.frame_2 = QFrame(self.tab_5)
        self.frame_2.setObjectName(u"frame_2")
        self.frame_2.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_2.setFrameShadow(QFrame.Shadow.Raised)
        self.horizontalLayout_8 = QHBoxLayout(self.frame_2)
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.label_146 = QLabel(self.frame_2)
        self.label_146.setObjectName(u"label_146")
        self.label_146.setFont(font1)

        self.horizontalLayout_8.addWidget(self.label_146)

        self.server_url_lineEdit = QLineEdit(self.frame_2)
        self.server_url_lineEdit.setObjectName(u"server_url_lineEdit")
        self.server_url_lineEdit.setFont(font1)

        self.horizontalLayout_8.addWidget(self.server_url_lineEdit)

        self.label_147 = QLabel(self.frame_2)
        self.label_147.setObjectName(u"label_147")
        self.label_147.setFont(font1)

        self.horizontalLayout_8.addWidget(self.label_147)

        self.server_port_spinBox = QSpinBox(self.frame_2)
        self.server_port_spinBox.setObjectName(u"server_port_spinBox")
        self.server_port_spinBox.setFont(font1)
        self.server_port_spinBox.setMaximum(9999999)
        self.server_port_spinBox.setValue(8000)

        self.horizontalLayout_8.addWidget(self.server_port_spinBox)

        self.label_148 = QLabel(self.frame_2)
        self.label_148.setObjectName(u"label_148")
        self.label_148.setFont(font1)

        self.horizontalLayout_8.addWidget(self.label_148)

        self.server_pwd_lineEdit = QLineEdit(self.frame_2)
        self.server_pwd_lineEdit.setObjectName(u"server_pwd_lineEdit")
        self.server_pwd_lineEdit.setFont(font1)
        self.server_pwd_lineEdit.setEchoMode(QLineEdit.EchoMode.Password)

        self.horizontalLayout_8.addWidget(self.server_pwd_lineEdit)

        self.secureServerConnectionCheckBox = QCheckBox(self.frame_2)
        self.secureServerConnectionCheckBox.setObjectName(u"secureServerConnectionCheckBox")

        self.horizontalLayout_8.addWidget(self.secureServerConnectionCheckBox)

        self.horizontalSpacer_7 = QSpacerItem(304, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_8.addItem(self.horizontalSpacer_7)

        self.server_status_label = QLabel(self.frame_2)
        self.server_status_label.setObjectName(u"server_status_label")
        self.server_status_label.setFont(font1)

        self.horizontalLayout_8.addWidget(self.server_status_label)


        self.verticalLayout_7.addWidget(self.frame_2)

        self.settings_tabWidget.addTab(self.tab_5, icon71, "")

        self.gridLayout_8.addWidget(self.settings_tabWidget, 0, 2, 1, 1)

        self.tabWidget.addTab(self.SettingsTab, icon80, "")

        self.gridLayout_3.addWidget(self.tabWidget, 0, 0, 1, 1)

        self.progress_frame = QFrame(self.centralwidget)
        self.progress_frame.setObjectName(u"progress_frame")
        self.progress_frame.setFrameShape(QFrame.Shape.NoFrame)
        self.progress_frame.setFrameShadow(QFrame.Shadow.Raised)
        self.gridLayout_7 = QGridLayout(self.progress_frame)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.progress_label = QLabel(self.progress_frame)
        self.progress_label.setObjectName(u"progress_label")
        self.progress_label.setFont(font)

        self.gridLayout_7.addWidget(self.progress_label, 2, 3, 1, 1)

        self.cancelButton = QPushButton(self.progress_frame)
        self.cancelButton.setObjectName(u"cancelButton")
        self.cancelButton.setMinimumSize(QSize(0, 24))
        self.cancelButton.setFont(font)
        self.cancelButton.setIcon(icon48)

        self.gridLayout_7.addWidget(self.cancelButton, 4, 0, 1, 1)

        self.progressBar = QProgressBar(self.progress_frame)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setFont(font)
        self.progressBar.setStyleSheet(u"QProgressBar {\n"
"	border: 1px solid rgb(186, 189, 182);\n"
"    border-radius: 5px;\n"
"	text-align: center;\n"
"}\n"
"QProgressBar::chunk{\n"
"	background-color: rgb(0, 180, 136)\n"
"}")
        self.progressBar.setValue(20)
        self.progressBar.setInvertedAppearance(False)

        self.gridLayout_7.addWidget(self.progressBar, 4, 3, 1, 1)


        self.gridLayout_3.addWidget(self.progress_frame, 3, 0, 1, 1)

        mainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QMenuBar(mainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1198, 21))
        self.menuBar.setFont(font)
        self.menuProject = QMenu(self.menuBar)
        self.menuProject.setObjectName(u"menuProject")
        self.menuAbout = QMenu(self.menuBar)
        self.menuAbout.setObjectName(u"menuAbout")
        self.menuActions = QMenu(self.menuBar)
        self.menuActions.setObjectName(u"menuActions")
        self.menuSimulations = QMenu(self.menuBar)
        self.menuSimulations.setObjectName(u"menuSimulations")
        self.menuSimulations.setFont(font)
        self.menuModel = QMenu(self.menuBar)
        self.menuModel.setObjectName(u"menuModel")
        self.menuModel.setFont(font)
        self.menuDiagrams = QMenu(self.menuBar)
        self.menuDiagrams.setObjectName(u"menuDiagrams")
        self.menuplugins = QMenu(self.menuBar)
        self.menuplugins.setObjectName(u"menuplugins")
        mainWindow.setMenuBar(self.menuBar)
        self.toolBar = QToolBar(mainWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setFont(font2)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QSize(26, 26))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)
        self.toolBar.setFloatable(False)
        mainWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolBar)

        self.menuBar.addAction(self.menuProject.menuAction())
        self.menuBar.addAction(self.menuActions.menuAction())
        self.menuBar.addAction(self.menuDiagrams.menuAction())
        self.menuBar.addAction(self.menuModel.menuAction())
        self.menuBar.addAction(self.menuSimulations.menuAction())
        self.menuBar.addAction(self.menuplugins.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())
        self.menuProject.addAction(self.actionNew_project)
        self.menuProject.addAction(self.actiongrid_Generator)
        self.menuProject.addAction(self.actionOpen_file)
        self.menuProject.addAction(self.actionAdd_circuit)
        self.menuProject.addAction(self.actionImport_bus_coordinates)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionSave)
        self.menuProject.addAction(self.actionSave_as)
        self.menuProject.addAction(self.actionExport_circuit_differential)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionExport_all_the_device_s_profiles)
        self.menuProject.addAction(self.actionExport_all_results)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionExport_contingencies)
        self.menuProject.addAction(self.actionImport_contingencies)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionExportCatalogue)
        self.menuProject.addAction(self.actionAdd_custom_catalogue)
        self.menuAbout.addAction(self.actionOnline_documentation)
        self.menuAbout.addAction(self.actionReport_a_bug)
        self.menuAbout.addAction(self.actionAbout)
        self.menuActions.addAction(self.actionAdd_default_catalogue)
        self.menuActions.addAction(self.actionClear_stuff_running_right_now)
        self.menuActions.addAction(self.actionReset_console)
        self.menuSimulations.addAction(self.actionactivate_time_series)
        self.menuSimulations.addAction(self.actionEdit_simulation_time_limits)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionPower_flow)
        self.menuSimulations.addAction(self.actionLinearAnalysis)
        self.menuSimulations.addAction(self.actionSigma_analysis)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionShort_Circuit)
        self.menuSimulations.addAction(self.actionVoltage_stability)
        self.menuSimulations.addAction(self.actionContingency_analysis)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionOPF)
        self.menuSimulations.addAction(self.actionOpf_to_Power_flow)
        self.menuSimulations.addAction(self.actionSet_OPF_generation_to_profiles)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionATC)
        self.menuSimulations.addAction(self.actionOptimal_Net_Transfer_Capacity)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionClustering)
        self.menuSimulations.addAction(self.actionUse_clustering)
        self.menuSimulations.addAction(self.actionFind_node_groups)
        self.menuSimulations.addAction(self.actionPower_flow_Stochastic)
        self.menuSimulations.addAction(self.actionInvestments_evaluation)
        self.menuSimulations.addAction(self.actionAdd_selected_as_new_investment)
        self.menuSimulations.addAction(self.actionReliability)
        self.menuSimulations.addAction(self.actionBlackout_cascade)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionInputs_analysis)
        self.menuSimulations.addAction(self.actionStorage_location_suggestion)
        self.menuSimulations.addSeparator()
        self.menuModel.addAction(self.actionAuto_rate_branches)
        self.menuModel.addAction(self.actionDetect_transformers)
        self.menuModel.addAction(self.actionDetect_substations)
        self.menuModel.addAction(self.actionDetect_facilities)
        self.menuModel.addAction(self.actionFuse_devices)
        self.menuModel.addAction(self.actionGrid_reduction)
        self.menuModel.addAction(self.actionre_index_time)
        self.menuModel.addAction(self.actionScale)
        self.menuModel.addSeparator()
        self.menuModel.addAction(self.actionLaunch_data_analysis_tool)
        self.menuModel.addAction(self.actionInitialize_contingencies)
        self.menuModel.addAction(self.actionAdd_selected_to_contingency)
        self.menuModel.addAction(self.actionAdd_selected_as_remedial_action)
        self.menuModel.addAction(self.actionSubstation_wizard)
        self.menuModel.addAction(self.actionFix_generators_active_based_on_the_power)
        self.menuModel.addAction(self.actionFix_loads_active_based_on_the_power)
        self.menuModel.addAction(self.actionDelete_inconsistencies)
        self.menuModel.addAction(self.actionClean_database)
        self.menuModel.addSeparator()
        self.menuModel.addAction(self.actionSetSelectedBusCountry)
        self.menuModel.addAction(self.actionSetSelectedBusArea)
        self.menuModel.addAction(self.actionSetSelectedBusZone)
        self.menuModel.addSeparator()
        self.menuDiagrams.addAction(self.actionAdd_general_bus_branch_diagram)
        self.menuDiagrams.addAction(self.actionNew_bus_branch_diagram_from_selection)
        self.menuDiagrams.addAction(self.actionBigger_nodes)
        self.menuDiagrams.addAction(self.actionSmaller_nodes)
        self.menuDiagrams.addAction(self.actionAutoatic_layout)
        self.menuDiagrams.addAction(self.actionTry_to_fix_buses_location)
        self.menuDiagrams.addAction(self.actionRotate)
        self.menuDiagrams.addAction(self.actionDisable_all_results_tags)
        self.menuDiagrams.addAction(self.actionEnable_all_results_tags)
        self.menuDiagrams.addAction(self.actionSet_schematic_positions_from_GPS_coordinates)
        self.menuDiagrams.addAction(self.actionColor_buses_by)
        self.menuDiagrams.addAction(self.actionSelect_buses_by)
        self.menuDiagrams.addSeparator()
        self.menuDiagrams.addAction(self.actionAdd_map)
        self.menuDiagrams.addAction(self.actionReset_coordinates)
        self.menuDiagrams.addAction(self.actionColor_substations_by)
        self.menuDiagrams.addSeparator()
        self.menuDiagrams.addAction(self.actionZoom_in)
        self.menuDiagrams.addAction(self.actionZoom_out)
        self.menuDiagrams.addAction(self.actionCenter_view)
        self.menuDiagrams.addAction(self.actionConsolidate_diagram_coordinates)
        self.menuDiagrams.addAction(self.actionSearchDiagram)
        self.menuDiagrams.addAction(self.actionDelete_selected)
        self.menuDiagrams.addSeparator()
        self.menuDiagrams.addAction(self.actionTakePicture)
        self.menuDiagrams.addAction(self.actionRecord_video)
        self.toolBar.addAction(self.actionNew_project)
        self.toolBar.addAction(self.actionOpen_file)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionEnable_server_mode)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionInputs_analysis)
        self.toolBar.addAction(self.actionPower_flow)
        self.toolBar.addAction(self.actionLinearAnalysis)
        self.toolBar.addAction(self.actionSigma_analysis)
        self.toolBar.addAction(self.actionShort_Circuit)
        self.toolBar.addAction(self.actionVoltage_stability)
        self.toolBar.addAction(self.actionContingency_analysis)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOptimal_Net_Transfer_Capacity)
        self.toolBar.addAction(self.actionNodal_capacity)
        self.toolBar.addAction(self.actionOPF)
        self.toolBar.addAction(self.actionOpf_to_Power_flow)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionInvestments_evaluation)
        self.toolBar.addAction(self.actionPower_flow_Stochastic)
        self.toolBar.addAction(self.actionReliability)
        self.toolBar.addAction(self.actionClustering)
        self.toolBar.addAction(self.actionUse_clustering)
        self.toolBar.addAction(self.actionEdit_simulation_time_limits)
        self.toolBar.addAction(self.actionactivate_time_series)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAdd_selected_to_contingency)
        self.toolBar.addAction(self.actionAdd_selected_as_remedial_action)
        self.toolBar.addAction(self.actionAdd_selected_as_new_investment)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionBigger_nodes)
        self.toolBar.addAction(self.actionSmaller_nodes)
        self.toolBar.addAction(self.actionCenter_view)
        self.toolBar.addAction(self.actionAutoatic_layout)
        self.toolBar.addAction(self.actionDelete_selected)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionLaunch_data_analysis_tool)
        self.toolBar.addSeparator()

        self.retranslateUi(mainWindow)

        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(0)
        self.tabWidget_6.setCurrentIndex(0)
        self.tabWidget_5.setCurrentIndex(0)
        self.tabWidget_4.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.settings_tabWidget.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(mainWindow)
    # setupUi

    def retranslateUi(self, mainWindow):
        mainWindow.setWindowTitle(QCoreApplication.translate("mainWindow", u"GridCal", None))
        self.actionOpen_file.setText(QCoreApplication.translate("mainWindow", u"Open file", None))
#if QT_CONFIG(shortcut)
        self.actionOpen_file.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("mainWindow", u"Save", None))
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionTakePicture.setText(QCoreApplication.translate("mainWindow", u"Take picture", None))
        self.actionNew_project.setText(QCoreApplication.translate("mainWindow", u"New project", None))
#if QT_CONFIG(shortcut)
        self.actionNew_project.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_flow.setText(QCoreApplication.translate("mainWindow", u"Power Flow", None))
#if QT_CONFIG(tooltip)
        self.actionPower_flow.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Power Flow</span></p><p>Run a power flow analysis</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPower_flow.setShortcut(QCoreApplication.translate("mainWindow", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_Flow_Time_series.setText(QCoreApplication.translate("mainWindow", u"Power flow time series", None))
#if QT_CONFIG(tooltip)
        self.actionPower_Flow_Time_series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Power flow</span></p><p>Run the power flow study with time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPower_Flow_Time_series.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionBigger_nodes.setText(QCoreApplication.translate("mainWindow", u"Expand", None))
#if QT_CONFIG(tooltip)
        self.actionBigger_nodes.setToolTip(QCoreApplication.translate("mainWindow", u"Expand distances", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionBigger_nodes.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+Alt++", None))
#endif // QT_CONFIG(shortcut)
        self.actionSmaller_nodes.setText(QCoreApplication.translate("mainWindow", u"Shrink", None))
#if QT_CONFIG(tooltip)
        self.actionSmaller_nodes.setToolTip(QCoreApplication.translate("mainWindow", u"Shrink distances", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSmaller_nodes.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+Alt+-", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_flow_Stochastic.setText(QCoreApplication.translate("mainWindow", u"Stochastic power flow", None))
#if QT_CONFIG(tooltip)
        self.actionPower_flow_Stochastic.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Stochastic power flow</span></p><p>Perform a stochastic power flow over the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionVoltage_stability.setText(QCoreApplication.translate("mainWindow", u"Continuation power flow", None))
#if QT_CONFIG(tooltip)
        self.actionVoltage_stability.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Continuation power flow</span></p><p>Run a continuation power flow over the snapshot data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionAbout.setText(QCoreApplication.translate("mainWindow", u"About", None))
        self.actionCenter_view.setText(QCoreApplication.translate("mainWindow", u"center view", None))
#if QT_CONFIG(tooltip)
        self.actionCenter_view.setToolTip(QCoreApplication.translate("mainWindow", u"Center view", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionCenter_view.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionShort_Circuit.setText(QCoreApplication.translate("mainWindow", u"Short Circuit", None))
#if QT_CONFIG(tooltip)
        self.actionShort_Circuit.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Short Circuit</span></p><p>Run a short circuit study over the snapshot data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionAutoatic_layout.setText(QCoreApplication.translate("mainWindow", u"Automatic grid layout", None))
#if QT_CONFIG(tooltip)
        self.actionAutoatic_layout.setToolTip(QCoreApplication.translate("mainWindow", u"Automatic layout the of the grid", None))
#endif // QT_CONFIG(tooltip)
        self.actionBlackout_cascade.setText(QCoreApplication.translate("mainWindow", u"Blackout cascade", None))
#if QT_CONFIG(tooltip)
        self.actionBlackout_cascade.setToolTip(QCoreApplication.translate("mainWindow", u"Run a simulation or step by step blackout cascade", None))
#endif // QT_CONFIG(tooltip)
        self.actionOPF.setText(QCoreApplication.translate("mainWindow", u"Optimal power flow", None))
#if QT_CONFIG(tooltip)
        self.actionOPF.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Optimal power flow</span></p><p>This runs an optimal power flow</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOPF.setShortcut(QCoreApplication.translate("mainWindow", u"F6", None))
#endif // QT_CONFIG(shortcut)
        self.actionOPF_time_series.setText(QCoreApplication.translate("mainWindow", u"Optimal power flow time series", None))
#if QT_CONFIG(tooltip)
        self.actionOPF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Optimal power flow</span></p><p>This runs an optimal power flow for the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOPF_time_series.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+F6", None))
#endif // QT_CONFIG(shortcut)
        self.actionDetect_transformers.setText(QCoreApplication.translate("mainWindow", u"Detect transformers", None))
#if QT_CONFIG(tooltip)
        self.actionDetect_transformers.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Detect transformers.</p><p>Use the nodes nominal voltage to determine which branches should be a transformer.</p><p>If a branch joins two nodes with different voltage levels, the branch should be a transformer.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionAuto_rate_branches.setText(QCoreApplication.translate("mainWindow", u"Auto rate branches", None))
#if QT_CONFIG(tooltip)
        self.actionAuto_rate_branches.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Automatic rating of the branches.</p><p>Use the branches calculated power to establish a rate, if the branch rate is unknown. A factor is available in the settings.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport_all_the_device_s_profiles.setText(QCoreApplication.translate("mainWindow", u"Export devices' profiles", None))
        self.actionStorage_location_suggestion.setText(QCoreApplication.translate("mainWindow", u"Storage location suggestion", None))
#if QT_CONFIG(tooltip)
        self.actionStorage_location_suggestion.setToolTip(QCoreApplication.translate("mainWindow", u"Suggest places where storage devices are useful", None))
#endif // QT_CONFIG(tooltip)
        self.actionLaunch_data_analysis_tool.setText(QCoreApplication.translate("mainWindow", u"Launch data analysis tool", None))
#if QT_CONFIG(tooltip)
        self.actionLaunch_data_analysis_tool.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Data analysis</span></p><p>Launch the data analysis tool that finds and tries to repair common grid modelling issues</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionLaunch_data_analysis_tool.setShortcut(QCoreApplication.translate("mainWindow", u"F12", None))
#endif // QT_CONFIG(shortcut)
        self.actionOnline_documentation.setText(QCoreApplication.translate("mainWindow", u"Online documentation", None))
#if QT_CONFIG(shortcut)
        self.actionOnline_documentation.setShortcut(QCoreApplication.translate("mainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_all_results.setText(QCoreApplication.translate("mainWindow", u"Export results", None))
#if QT_CONFIG(tooltip)
        self.actionExport_all_results.setToolTip(QCoreApplication.translate("mainWindow", u"Export all the results", None))
#endif // QT_CONFIG(tooltip)
        self.actionSave_as.setText(QCoreApplication.translate("mainWindow", u"Save as", None))
        self.actionDelete_selected.setText(QCoreApplication.translate("mainWindow", u"Delete selected", None))
#if QT_CONFIG(tooltip)
        self.actionDelete_selected.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selected objects from the diagrams and optionally from the database", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionDelete_selected.setShortcut(QCoreApplication.translate("mainWindow", u"Del", None))
#endif // QT_CONFIG(shortcut)
        self.actionLinearAnalysis.setText(QCoreApplication.translate("mainWindow", u"Linear analysis", None))
#if QT_CONFIG(tooltip)
        self.actionLinearAnalysis.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Linear analysis</span></p><p>Perform linear analysis with distribution factors (PTDF, LODF)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionLinearAnalysis.setShortcut(QCoreApplication.translate("mainWindow", u"F7", None))
#endif // QT_CONFIG(shortcut)
        self.actionReset_console.setText(QCoreApplication.translate("mainWindow", u"Reset console", None))
        self.actionOpf_to_Power_flow.setText(QCoreApplication.translate("mainWindow", u"Set OPF results to power flow (non destructive)", None))
#if QT_CONFIG(tooltip)
        self.actionOpf_to_Power_flow.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Copy OPF data</span></p><p>Set the OPF results into the power flow or time series simulations (non destructive)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionTry_to_fix_buses_location.setText(QCoreApplication.translate("mainWindow", u"Correct buses location", None))
#if QT_CONFIG(tooltip)
        self.actionTry_to_fix_buses_location.setToolTip(QCoreApplication.translate("mainWindow", u"Set selected buses location closer to their neighbours", None))
#endif // QT_CONFIG(tooltip)
        self.actionSet_OPF_generation_to_profiles.setText(QCoreApplication.translate("mainWindow", u"Copy OPF generation to database (destructive)", None))
#if QT_CONFIG(tooltip)
        self.actionSet_OPF_generation_to_profiles.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Copy OPF data</span></p><p>Destructive copy of the OPF generation results to the input profiles</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionPTDF_time_series.setText(QCoreApplication.translate("mainWindow", u"Linear analysis time series power flow", None))
#if QT_CONFIG(tooltip)
        self.actionPTDF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Linear analysis</span></p><p>PTDF based time series power flow</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPTDF_time_series.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+F7", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_circuit.setText(QCoreApplication.translate("mainWindow", u"Import circuit", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_circuit.setToolTip(QCoreApplication.translate("mainWindow", u"Add circuit to the current circuit", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_circuit.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+N, Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSync.setText(QCoreApplication.translate("mainWindow", u"Sync", None))
#if QT_CONFIG(tooltip)
        self.actionSync.setToolTip(QCoreApplication.translate("mainWindow", u"Sync with the file for colaborative editing of the grid", None))
#endif // QT_CONFIG(tooltip)
        self.actionDrawSchematic.setText(QCoreApplication.translate("mainWindow", u"Draw schematic", None))
        self.actionSigma_analysis.setText(QCoreApplication.translate("mainWindow", u"Sigma analysis", None))
#if QT_CONFIG(tooltip)
        self.actionSigma_analysis.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Sigma analysis</span></p><p>Perform HELM-Sigma analysis over the snapshot data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionClear_stuff_running_right_now.setText(QCoreApplication.translate("mainWindow", u"Clear \"stuff running right now\"", None))
        self.actionAdd_default_catalogue.setText(QCoreApplication.translate("mainWindow", u"Add default catalogue", None))
        self.actionFind_node_groups.setText(QCoreApplication.translate("mainWindow", u"Find node groups", None))
#if QT_CONFIG(tooltip)
        self.actionFind_node_groups.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Finds the electrically related nodes by using their electrical distance and the DBSCAN clustering method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actiongrid_Generator.setText(QCoreApplication.translate("mainWindow", u"Grid Generator", None))
#if QT_CONFIG(shortcut)
        self.actiongrid_Generator.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+G", None))
#endif // QT_CONFIG(shortcut)
        self.actionImportPlexosNodeLoad.setText(QCoreApplication.translate("mainWindow", u"Node load", None))
        self.actionImportPlexosGeneratorGeneration.setText(QCoreApplication.translate("mainWindow", u"Generator generation", None))
        self.actionOTDF_time_series.setText(QCoreApplication.translate("mainWindow", u"Contingency analysis time series", None))
#if QT_CONFIG(tooltip)
        self.actionOTDF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Contingency analysis</span></p><p>Per form a contingency analysis with the selected method over the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOTDF_time_series.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+F8", None))
#endif // QT_CONFIG(shortcut)
        self.actionImportPlexosBranchRates.setText(QCoreApplication.translate("mainWindow", u"Branch rates", None))
        self.actionSetSelectedBusArea.setText(QCoreApplication.translate("mainWindow", u"Set selected buses' Area", None))
        self.actionSetSelectedBusZone.setText(QCoreApplication.translate("mainWindow", u"Set selected buses' Zone", None))
        self.actionSetSelectedBusCountry.setText(QCoreApplication.translate("mainWindow", u"Set seleted buses' Country", None))
        self.actionImport_bus_coordinates.setText(QCoreApplication.translate("mainWindow", u"Import bus coordinates", None))
        self.actionATC.setText(QCoreApplication.translate("mainWindow", u"Available Transfer Capacity", None))
#if QT_CONFIG(tooltip)
        self.actionATC.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Net Transfer Capacity</span></p><p>Perform a linear net transfer capacity assesment for the snapshot data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionATC_Time_Series.setText(QCoreApplication.translate("mainWindow", u"Available Transfer Capacity Time Series", None))
#if QT_CONFIG(tooltip)
        self.actionATC_Time_Series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Net Transfer Capacity</span></p><p>Perform a linear net transfer capacity assesment for the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionContingency_analysis.setText(QCoreApplication.translate("mainWindow", u"Contingency analysis", None))
#if QT_CONFIG(tooltip)
        self.actionContingency_analysis.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Contingency analysis</span></p><p>Perform a contingency analysis with the selected method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionContingency_analysis.setShortcut(QCoreApplication.translate("mainWindow", u"F8", None))
#endif // QT_CONFIG(shortcut)
        self.actionOptimal_Net_Transfer_Capacity.setText(QCoreApplication.translate("mainWindow", u"Optimal net transfer capacity", None))
#if QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Optimal Net Transfer Capacity</span></p><p>Perform an optimal net transfer capacity optimization</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionSet_schematic_positions_from_GPS_coordinates.setText(QCoreApplication.translate("mainWindow", u"Set schematic (x,y) from (lat,lon)", None))
        self.actionInputs_analysis.setText(QCoreApplication.translate("mainWindow", u"Inputs analysis", None))
#if QT_CONFIG(tooltip)
        self.actionInputs_analysis.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Inputs analysis</span></p><p>Perform an analysis of the inputs for both the snapshot and time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionInputs_analysis.setShortcut(QCoreApplication.translate("mainWindow", u"F11", None))
#endif // QT_CONFIG(shortcut)
        self.actionFuse_devices.setText(QCoreApplication.translate("mainWindow", u"Fuse devices", None))
#if QT_CONFIG(tooltip)
        self.actionFuse_devices.setToolTip(QCoreApplication.translate("mainWindow", u"Fuse devices into a single device of each category per node", None))
#endif // QT_CONFIG(tooltip)
        self.actionDelete_inconsistencies.setText(QCoreApplication.translate("mainWindow", u"Delete inconsistencies", None))
#if QT_CONFIG(tooltip)
        self.actionDelete_inconsistencies.setToolTip(QCoreApplication.translate("mainWindow", u"Delete inconsistencies", None))
#endif // QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setText(QCoreApplication.translate("mainWindow", u"Optimal NTC time series", None))
#if QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Net Transfer Capacity</span></p><p>Perform a net transfer capacity optimization over the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionre_index_time.setText(QCoreApplication.translate("mainWindow", u"re-index time", None))
        self.actionFix_generators_active_based_on_the_power.setText(QCoreApplication.translate("mainWindow", u"Fix generators active based on the power", None))
        self.actionFix_loads_active_based_on_the_power.setText(QCoreApplication.translate("mainWindow", u"Fix loads active based on the power", None))
#if QT_CONFIG(tooltip)
        self.actionFix_loads_active_based_on_the_power.setToolTip(QCoreApplication.translate("mainWindow", u"Fix loads active based on the power", None))
#endif // QT_CONFIG(tooltip)
        self.actionImport_contingencies.setText(QCoreApplication.translate("mainWindow", u"Import contingencies", None))
        self.actionInitialize_contingencies.setText(QCoreApplication.translate("mainWindow", u"Initialize contingencies", None))
#if QT_CONFIG(tooltip)
        self.actionInitialize_contingencies.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Contingencies wizard</span></p><p>Launch the contingencies wizard to automatically set up the contingency objects</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport_contingencies.setText(QCoreApplication.translate("mainWindow", u"Export contingencies", None))
        self.actionAdd_selected_to_contingency.setText(QCoreApplication.translate("mainWindow", u"Add selected as new contingency", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_selected_to_contingency.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Add contingency</span></p><p>Create a new contingency from the schematic selection</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_selected_to_contingency.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_selected_as_new_investment.setText(QCoreApplication.translate("mainWindow", u"Add selected as new investment", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_selected_as_new_investment.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Investments</span></p><p>Create new investment with the schematic selection</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_selected_as_new_investment.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+I", None))
#endif // QT_CONFIG(shortcut)
        self.actionZoom_in.setText(QCoreApplication.translate("mainWindow", u"Zoom in", None))
#if QT_CONFIG(shortcut)
        self.actionZoom_in.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl++", None))
#endif // QT_CONFIG(shortcut)
        self.actionZoom_out.setText(QCoreApplication.translate("mainWindow", u"Zoom out", None))
#if QT_CONFIG(shortcut)
        self.actionZoom_out.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+-", None))
#endif // QT_CONFIG(shortcut)
        self.actionClustering.setText(QCoreApplication.translate("mainWindow", u"Clustering", None))
#if QT_CONFIG(tooltip)
        self.actionClustering.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Clustering</span></p><p>Perform a clustering study of the time series data</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionUse_clustering.setText(QCoreApplication.translate("mainWindow", u"Use clustering", None))
#if QT_CONFIG(tooltip)
        self.actionUse_clustering.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Clustering</span></p><p>If active, the available clustering results are used in all the simulations that handle time series data non-destructivelly</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionInvestments_evaluation.setText(QCoreApplication.translate("mainWindow", u"Investments evaluation", None))
#if QT_CONFIG(tooltip)
        self.actionInvestments_evaluation.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Investments</span></p><p>Perform the investments evaluation</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionInvestments_evaluation.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+I, Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionNew_bus_branch_diagram_from_selection.setText(QCoreApplication.translate("mainWindow", u"New schematic from selection", None))
        self.actionAdd_general_bus_branch_diagram.setText(QCoreApplication.translate("mainWindow", u"New schematic", None))
        self.actionAdd_map.setText(QCoreApplication.translate("mainWindow", u"New map", None))
        self.actionRemove_selected_diagram.setText(QCoreApplication.translate("mainWindow", u"Remove selected diagram", None))
        self.actionReport_a_bug.setText(QCoreApplication.translate("mainWindow", u"Report a bug or feature", None))
        self.actionSearchDiagram.setText(QCoreApplication.translate("mainWindow", u"Search", None))
        self.actionProcess_topology.setText(QCoreApplication.translate("mainWindow", u"Process topology", None))
        self.actionEdit_simulation_time_limits.setText(QCoreApplication.translate("mainWindow", u"Edit simulation time limits", None))
#if QT_CONFIG(tooltip)
        self.actionEdit_simulation_time_limits.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Time series</span></p><p>Edit simulation time limits</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionactivate_time_series.setText(QCoreApplication.translate("mainWindow", u"activate time series", None))
#if QT_CONFIG(tooltip)
        self.actionactivate_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Time series mode</span></p><p>When activated, the simulations run their time series version</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionactivate_time_series.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+T", None))
#endif // QT_CONFIG(shortcut)
        self.actionClean_database.setText(QCoreApplication.translate("mainWindow", u"Clean database", None))
#if QT_CONFIG(shortcut)
        self.actionClean_database.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+C, Ctrl+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionScale.setText(QCoreApplication.translate("mainWindow", u"Scale", None))
#if QT_CONFIG(tooltip)
        self.actionScale.setToolTip(QCoreApplication.translate("mainWindow", u"Scale the system load and or generation", None))
#endif // QT_CONFIG(tooltip)
        self.actionDisable_all_results_tags.setText(QCoreApplication.translate("mainWindow", u"Disable all results tags", None))
        self.actionEnable_all_results_tags.setText(QCoreApplication.translate("mainWindow", u"Enable all results tags", None))
        self.actionDetect_substations.setText(QCoreApplication.translate("mainWindow", u"Detect substations", None))
        self.actionNodal_capacity.setText(QCoreApplication.translate("mainWindow", u"Nodal capacity", None))
#if QT_CONFIG(tooltip)
        self.actionNodal_capacity.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Nodal hosting capacity</span></p><p>Run the nodal hosting capacity calculation using the selected optimization method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionEnable_server_mode.setText(QCoreApplication.translate("mainWindow", u"Enable server mode", None))
        self.actionRecord_video.setText(QCoreApplication.translate("mainWindow", u"Record video", None))
#if QT_CONFIG(tooltip)
        self.actionRecord_video.setToolTip(QCoreApplication.translate("mainWindow", u"Record video of the schematic", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport_circuit_differential.setText(QCoreApplication.translate("mainWindow", u"Save  differential", None))
        self.actionAdd_custom_catalogue.setText(QCoreApplication.translate("mainWindow", u"Import catalogue", None))
        self.actionAdd_custom_catalogue.setIconText(QCoreApplication.translate("mainWindow", u"Catalogue", None))
        self.actionExportCatalogue.setText(QCoreApplication.translate("mainWindow", u"Export catalogue", None))
        self.actionConsolidate_diagram_coordinates.setText(QCoreApplication.translate("mainWindow", u"Consolidate coordinates", None))
        self.actionAdd_selected_as_remedial_action.setText(QCoreApplication.translate("mainWindow", u"Add selected as new remedial action", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_selected_as_remedial_action.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Add remedial action</span></p><p>Create a new remedial action from the schematic selection</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_selected_as_remedial_action.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionDetect_facilities.setText(QCoreApplication.translate("mainWindow", u"Detect facilities", None))
        self.actionRotate.setText(QCoreApplication.translate("mainWindow", u"Rotate", None))
        self.actionReset_coordinates.setText(QCoreApplication.translate("mainWindow", u"Reset diagram coordinates to database values", None))
        self.actionReliability.setText(QCoreApplication.translate("mainWindow", u"Reliability analysis", None))
#if QT_CONFIG(tooltip)
        self.actionReliability.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Reliability study</span></p><p>Run the reliability calculation</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionColor_buses_by.setText(QCoreApplication.translate("mainWindow", u"Color buses by...", None))
        self.actionColor_substations_by.setText(QCoreApplication.translate("mainWindow", u"Color substations by...", None))
        self.actionSelect_buses_by.setText(QCoreApplication.translate("mainWindow", u"Select buses by...", None))
        self.actionGrid_reduction.setText(QCoreApplication.translate("mainWindow", u"Grid reduction", None))
        self.actionSubstation_wizard.setText(QCoreApplication.translate("mainWindow", u"Substation wizard", None))
#if QT_CONFIG(tooltip)
        self.actionSubstation_wizard.setToolTip(QCoreApplication.translate("mainWindow", u"Add substation with a wizard form", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSubstation_wizard.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.diagramsListView.setToolTip(QCoreApplication.translate("mainWindow", u"List of available diagrams", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget_6.setTabText(self.tabWidget_6.indexOf(self.tab_3), QCoreApplication.translate("mainWindow", u"Diagrams", None))
        self.tabWidget_6.setTabText(self.tabWidget_6.indexOf(self.tab), QCoreApplication.translate("mainWindow", u"Combinations", None))
        self.label_60.setText(QCoreApplication.translate("mainWindow", u"Node expansion factor", None))
        self.label_32.setText(QCoreApplication.translate("mainWindow", u"Export resolution", None))
#if QT_CONFIG(tooltip)
        self.fps_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Video frames per second", None))
#endif // QT_CONFIG(tooltip)
        self.fps_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" FPS", None))
        self.label_154.setText(QCoreApplication.translate("mainWindow", u"Preset", None))
        self.label_113.setText(QCoreApplication.translate("mainWindow", u"Arrow size", None))
#if QT_CONFIG(tooltip)
        self.min_node_size_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum node / substation sizes", None))
#endif // QT_CONFIG(tooltip)
        self.min_node_size_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" px", None))
        self.label_14.setText(QCoreApplication.translate("mainWindow", u"Branch size", None))
#if QT_CONFIG(tooltip)
        self.palette_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Select the colour palette", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.preset4_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Apply street meaningful sizes", None))
#endif // QT_CONFIG(tooltip)
        self.preset4_pushButton.setText(QCoreApplication.translate("mainWindow", u"Street", None))
#if QT_CONFIG(tooltip)
        self.redraw_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Redraw the map or schematic with the new parameters", None))
#endif // QT_CONFIG(tooltip)
        self.redraw_pushButton.setText(QCoreApplication.translate("mainWindow", u"redraw", None))
#if QT_CONFIG(tooltip)
        self.max_branch_size_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum branch sizes", None))
#endif // QT_CONFIG(tooltip)
        self.max_branch_size_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" px", None))
#if QT_CONFIG(tooltip)
        self.preset1_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Apply country meaningful sizes", None))
#endif // QT_CONFIG(tooltip)
        self.preset1_pushButton.setText(QCoreApplication.translate("mainWindow", u"Country", None))
        self.label.setText(QCoreApplication.translate("mainWindow", u"Node size", None))
        self.branch_width_based_on_flow_checkBox.setText(QCoreApplication.translate("mainWindow", u"Width based on flow", None))
        self.label_43.setText(QCoreApplication.translate("mainWindow", u"Palette", None))
#if QT_CONFIG(tooltip)
        self.preset3_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Apply municipality meaningful sizes", None))
#endif // QT_CONFIG(tooltip)
        self.preset3_pushButton.setText(QCoreApplication.translate("mainWindow", u"Municipality", None))
#if QT_CONFIG(tooltip)
        self.max_node_size_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum node / substation sizes", None))
#endif // QT_CONFIG(tooltip)
        self.max_node_size_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" px", None))
#if QT_CONFIG(tooltip)
        self.preset2_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Apply region meaningful sizes", None))
#endif // QT_CONFIG(tooltip)
        self.preset2_pushButton.setText(QCoreApplication.translate("mainWindow", u"Region", None))
#if QT_CONFIG(tooltip)
        self.arrow_size_size_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Branch arrow sizes", None))
#endif // QT_CONFIG(tooltip)
        self.arrow_size_size_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" px", None))
#if QT_CONFIG(tooltip)
        self.min_branch_size_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum branch sizes", None))
#endif // QT_CONFIG(tooltip)
        self.min_branch_size_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" px", None))
        self.label_118.setText(QCoreApplication.translate("mainWindow", u"Map tile provider", None))
#if QT_CONFIG(tooltip)
        self.tile_provider_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Map tile provides (map background)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.resolution_factor_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Resolution factor.</p><p>1K = 1920 x 1080 pixels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.resolution_factor_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" K", None))
#if QT_CONFIG(tooltip)
        self.ask_before_appliying_layout_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Ask before running the automatic grid layout. This is because you might have a layout already and ruin it accidentally.", None))
#endif // QT_CONFIG(tooltip)
        self.ask_before_appliying_layout_checkBox.setText(QCoreApplication.translate("mainWindow", u"Layout algorithm \n"
"(mark to ask)", None))
        self.label_35.setText(QCoreApplication.translate("mainWindow", u"Default voltage", None))
        self.label_66.setText("")
        self.label_45.setText(QCoreApplication.translate("mainWindow", u"Export", None))
        self.label_110.setText("")
        self.label_111.setText(QCoreApplication.translate("mainWindow", u"Map", None))
#if QT_CONFIG(tooltip)
        self.defaultBusVoltageSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Bus default voltage</span></p><p>This is the voltage that drag&amp;drop buses have when they are created from the schematic.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.defaultBusVoltageSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" kV", None))
        self.label_150.setText(QCoreApplication.translate("mainWindow", u"Video FPS", None))
        self.label_114.setText("")
        self.label_149.setText(QCoreApplication.translate("mainWindow", u"Schematic", None))
#if QT_CONFIG(tooltip)
        self.automatic_layout_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Algorithm to use for the automatic </p><p>layout of the grid nodes</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.explosion_factor_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>When expanding or contracting the distances between nodes, this is the factor that applies.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.use_schematic_objects_color_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Ask before running the automatic grid layout. This is because you might have a layout already and ruin it accidentally.", None))
#endif // QT_CONFIG(tooltip)
        self.use_schematic_objects_color_checkBox.setText(QCoreApplication.translate("mainWindow", u"Use the objects' color", None))
        self.tabWidget_6.setTabText(self.tabWidget_6.indexOf(self.tab_4), QCoreApplication.translate("mainWindow", u"Settings", None))
        self.schematic_step_label.setText(QCoreApplication.translate("mainWindow", u"Snapshot", None))
#if QT_CONFIG(tooltip)
        self.available_results_to_color_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Available results", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.colour_results_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Color the grid with the selected study", None))
#endif // QT_CONFIG(tooltip)
        self.colour_results_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.diagram_step_slider.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Time slider</span></p><p>Move this time slider to select the appropriate time slot to view.</p><p>The first position sets the snapshot values, the rest attend to the time series values.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.GridSectionTab), QCoreApplication.translate("mainWindow", u"Diagrams", None))
#if QT_CONFIG(tooltip)
        self.smart_search_lineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Type anything to search on the name property. </p><p><br/></p><p>For more advanced searches you can compose a filter expression:</p><p><span style=\" font-weight:700;\">Subjects:</span></p><p>col, idx, val, colobj, idxobj</p><p>colobj and idxobj allow accessing the objects that may be represented at the index or the columns. With these you can access their internal properties for filtering.</p><p>If none is specified idxobj is taken</p><p><span style=\" font-weight:700;\">Operators:</span></p><p>&gt;, &lt;, &gt;=, &lt;=, !=, =, like, notlike, starts, ends</p><p><span style=\" font-weight:700;\">Examples:</span></p><p>Filter all object names that are similar to 'alba' and their Vnom property &gt; 200</p><p>-&gt; idx<span style=\" font-style:italic;\">obj.name like alba and idxobj.Vnom &gt; 200</span></p><p><span style=\" font-style:italic;\">Equivalently:</span></p><p><span style=\" font-style:italic;\">-&gt; name like alba and Vnom &gt; 200</span></p><p>[Enter] to search </p></body></html"
                        ">", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.filter_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Smart filter", None))
#endif // QT_CONFIG(tooltip)
        self.filter_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.structure_analysis_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Histogram</span></p><p>Run the histogram analysis of the selected data structure</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.structure_analysis_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.set_profile_state_button.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Snapshot</span></p><p>Assign the values of the selected time step into the snapshot</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.set_profile_state_button.setText("")
#if QT_CONFIG(tooltip)
        self.db_step_slider.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Time slider</span></p><p>Move this time slider to select the appropriate time slot to view.</p><p>The first position sets the snapshot values, the rest attend to the time series values.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.db_step_label.setText(QCoreApplication.translate("mainWindow", u"Snapshot", None))
#if QT_CONFIG(tooltip)
        self.add_object_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Add new object", None))
#endif // QT_CONFIG(tooltip)
        self.add_object_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.delete_selected_objects_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selection", None))
#endif // QT_CONFIG(tooltip)
        self.delete_selected_objects_pushButton.setText("")
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.tab_15), QCoreApplication.translate("mainWindow", u"Objects", None))
        self.association_units_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.tab_2), QCoreApplication.translate("mainWindow", u"Associations", None))
#if QT_CONFIG(tooltip)
        self.device_type_magnitude_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Magnitude with profile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.new_profiles_structure_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Create profiles</span></p><p>This will create all the object's profiles</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.new_profiles_structure_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.delete_profiles_structure_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Delete profiles</span></p><p>This will delete all the profiles and leave the snapshot.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.delete_profiles_structure_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.edit_profiles_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Import profiles</span></p><p>Import from data in CSV or Excel files</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.edit_profiles_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.edit_profiles_from_models_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Import profiles from grid models. </span></p><p>This is, load many individual grids in any of the supported GridCal formats and take the operational data from them, aplying them to all the profiles.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.edit_profiles_from_models_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.plot_time_series_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot the selected object's profile", None))
#endif // QT_CONFIG(tooltip)
        self.plot_time_series_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.copy_profile_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Copy data</span></p><p>Copy displayed profile</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.copy_profile_pushButton.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.copy_profile_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.paste_profiles_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Paste data</span></p><p>Paste clipboard into the displayed profile</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.paste_profiles_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.set_linear_combination_profile_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Copy profile</span></p><p>Copy the current profile into the profile selected by the drop-down selector</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.set_linear_combination_profile_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.device_type_magnitude_comboBox_2.setToolTip(QCoreApplication.translate("mainWindow", u"Profile where to copy the current profile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.profile_add_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Add value to the profile", None))
#endif // QT_CONFIG(tooltip)
        self.profile_add_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_subtract_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Subtract value from the profile", None))
#endif // QT_CONFIG(tooltip)
        self.profile_subtract_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_multiply_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Multiply the profile by a value", None))
#endif // QT_CONFIG(tooltip)
        self.profile_multiply_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_divide_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Divide the profile by a value", None))
#endif // QT_CONFIG(tooltip)
        self.profile_divide_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.set_profile_value_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Set the value to all or to the selection", None))
#endif // QT_CONFIG(tooltip)
        self.set_profile_value_pushButton.setText("")
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.tab_16), QCoreApplication.translate("mainWindow", u"Time series", None))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.DataTab), QCoreApplication.translate("mainWindow", u"Database", None))
#if QT_CONFIG(tooltip)
        self.exportSimulationDataButton.setToolTip(QCoreApplication.translate("mainWindow", u"Export simulation data", None))
#endif // QT_CONFIG(tooltip)
        self.exportSimulationDataButton.setText("")
#if QT_CONFIG(tooltip)
        self.compute_simulation_data_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Update the islands dispayed", None))
#endif // QT_CONFIG(tooltip)
        self.compute_simulation_data_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.copyArraysToNumpyButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy to data frame to clipboard in array format", None))
#endif // QT_CONFIG(tooltip)
        self.copyArraysToNumpyButton.setText("")
#if QT_CONFIG(tooltip)
        self.plotArraysButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot values", None))
#endif // QT_CONFIG(tooltip)
        self.plotArraysButton.setText("")
#if QT_CONFIG(tooltip)
        self.copyArraysButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy array to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copyArraysButton.setText("")
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.compiledArraysTab), QCoreApplication.translate("mainWindow", u"Compiled arrays", None))
#if QT_CONFIG(tooltip)
        self.comments_textEdit.setToolTip(QCoreApplication.translate("mainWindow", u"Write here some comments about the grid", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.commentsTab), QCoreApplication.translate("mainWindow", u"Comments", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.GridTab), QCoreApplication.translate("mainWindow", u"Model", None))
        self.label_16.setText(QCoreApplication.translate("mainWindow", u"Session results", None))
#if QT_CONFIG(tooltip)
        self.deleteDriverButton.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selected driver", None))
#endif // QT_CONFIG(tooltip)
        self.deleteDriverButton.setText("")
        self.label_37.setText(QCoreApplication.translate("mainWindow", u"Disk persistance", None))
#if QT_CONFIG(tooltip)
        self.loadResultFromDiskButton.setToolTip(QCoreApplication.translate("mainWindow", u"Load result from the gridcal file", None))
#endif // QT_CONFIG(tooltip)
        self.loadResultFromDiskButton.setText("")
#if QT_CONFIG(tooltip)
        self.search_results_lineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Subjects:</span></p><p>col, idx, val, colobj, idxobj</p><p>colobj and idxobj allow accessing the objects that may be represented at the index or the columns. With these you can access their internal properties for filtering.</p><p><span style=\" font-weight:700;\">Operators:</span></p><p>&gt;, &lt;, &gt;=, &lt;=, !=, =, like, notlike, starts, ends</p><p><span style=\" font-weight:700;\">Examples:</span></p><p><span style=\" font-style:italic;\">The columns should not be column1 or column2, the values should be &gt; 5 and the index be like ab of mn</span></p><p>-&gt; <span style=\" font-style:italic;\">col != [column1, column2] and val &gt; 5 or idx like [ab, mn]</span></p><p><br/></p><p><span style=\" font-style:italic;\">Filter the table values that are between 0.5 and 20</span></p><p>-&gt; <span style=\" font-style:italic;\">val &gt; 0.5 and val &lt; 20.0</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.search_results_Button.setToolTip(QCoreApplication.translate("mainWindow", u"Smart search", None))
#endif // QT_CONFIG(tooltip)
        self.search_results_Button.setText("")
        self.units_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
#if QT_CONFIG(tooltip)
        self.results_traspose_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Transpose the results", None))
#endif // QT_CONFIG(tooltip)
        self.results_traspose_checkBox.setText("")
#if QT_CONFIG(tooltip)
        self.results_as_cdf_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Results as cummulative density functions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.results_as_cdf_checkBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.results_as_cdf_checkBox.setText("")
#if QT_CONFIG(tooltip)
        self.results_as_abs_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Results as absolute values", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.results_as_abs_checkBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.results_as_abs_checkBox.setText("")
#if QT_CONFIG(tooltip)
        self.stacked_plot_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Stacked plot", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.stacked_plot_checkBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.stacked_plot_checkBox.setText("")
#if QT_CONFIG(tooltip)
        self.copy_results_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy to data frame to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copy_results_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.copy_numpy_button.setToolTip(QCoreApplication.translate("mainWindow", u"Copy data in numpy format to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copy_numpy_button.setText("")
#if QT_CONFIG(tooltip)
        self.saveResultsButton.setToolTip(QCoreApplication.translate("mainWindow", u"Export data", None))
#endif // QT_CONFIG(tooltip)
        self.saveResultsButton.setText("")
#if QT_CONFIG(tooltip)
        self.plot_data_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot the data in a separated window", None))
#endif // QT_CONFIG(tooltip)
        self.plot_data_pushButton.setText("")
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_7), QCoreApplication.translate("mainWindow", u"Tables", None))
#if QT_CONFIG(tooltip)
        self.saveResultsLogsButton.setToolTip(QCoreApplication.translate("mainWindow", u"Save the logs to a file", None))
#endif // QT_CONFIG(tooltip)
        self.saveResultsLogsButton.setText("")
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_14), QCoreApplication.translate("mainWindow", u"Logs", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ResultsTab), QCoreApplication.translate("mainWindow", u"Results", None))
#if QT_CONFIG(tooltip)
        self.clearSourceCodeButton.setToolTip(QCoreApplication.translate("mainWindow", u"New script, will delete the existing code.", None))
#endif // QT_CONFIG(tooltip)
        self.clearSourceCodeButton.setText("")
#if QT_CONFIG(tooltip)
        self.saveSourceCodeButton.setToolTip(QCoreApplication.translate("mainWindow", u"Save the current source code", None))
#endif // QT_CONFIG(tooltip)
        self.saveSourceCodeButton.setText("")
        self.label_91.setText("")
#if QT_CONFIG(tooltip)
        self.sourceCodeNameLineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"Name of the source code file", None))
#endif // QT_CONFIG(tooltip)
        self.label_98.setText("")
#if QT_CONFIG(tooltip)
        self.runSourceCodeButton.setToolTip(QCoreApplication.translate("mainWindow", u"Run the source code in the console", None))
#endif // QT_CONFIG(tooltip)
        self.runSourceCodeButton.setText("")
#if QT_CONFIG(tooltip)
        self.clearConsoleButton.setToolTip(QCoreApplication.translate("mainWindow", u"Clear the console", None))
#endif // QT_CONFIG(tooltip)
        self.clearConsoleButton.setText("")
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.pythonConsoleTab), QCoreApplication.translate("mainWindow", u"Python console", None))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.sourceCodeTab), QCoreApplication.translate("mainWindow", u"Source code", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.main_console_tab), QCoreApplication.translate("mainWindow", u"Scripting", None))
        self.label_68.setText("")
        self.label_69.setText(QCoreApplication.translate("mainWindow", u"General settings", None))
        self.label_82.setText(QCoreApplication.translate("mainWindow", u"Grid name", None))
#if QT_CONFIG(tooltip)
        self.grid_name_line_edit.setToolTip(QCoreApplication.translate("mainWindow", u"Name of the grid model", None))
#endif // QT_CONFIG(tooltip)
        self.label_57.setText(QCoreApplication.translate("mainWindow", u"Base power", None))
#if QT_CONFIG(tooltip)
        self.sbase_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Base power</span></p><p>Despite all the bibliography, changing this number to anything other than 100 MVA, might change the meaning of what sensible per-unit voltage are.</p><p>This is, 1.0 is no longer the nominal voltage and so on.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sbase_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MVA", None))
        self.label_58.setText(QCoreApplication.translate("mainWindow", u"Frequency", None))
#if QT_CONFIG(tooltip)
        self.fbase_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">System frequency</span></p><p>This only has an effect in the program when computing lines' per-unit impedance from ohm values.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.fbase_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" Hz", None))
        self.label_101.setText(QCoreApplication.translate("mainWindow", u"Snapshot time", None))
        self.label_40.setText("")
        self.label_86.setText("")
        self.label_65.setText(QCoreApplication.translate("mainWindow", u"Engine", None))
#if QT_CONFIG(tooltip)
        self.engineComboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Engine to be used when available", None))
#endif // QT_CONFIG(tooltip)
        self.label_48.setText("")
        self.label_76.setText("")
        self.label_49.setText(QCoreApplication.translate("mainWindow", u"Plotting", None))
#if QT_CONFIG(tooltip)
        self.plt_style_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"MatPlotlib plot styles to choose from", None))
#endif // QT_CONFIG(tooltip)
        self.dark_mode_checkBox.setText(QCoreApplication.translate("mainWindow", u"Dark mode", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.pf_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Power flow settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_63.setText("")
        self.label_17.setText(QCoreApplication.translate("mainWindow", u"Power flow", None))
        self.label_23.setText(QCoreApplication.translate("mainWindow", u"Verbosity", None))
        self.label_6.setText(QCoreApplication.translate("mainWindow", u"Max. iterations", None))
#if QT_CONFIG(tooltip)
        self.muSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Factor that multiplies each increment solution. </p><p>In practice this is used to slow down troublesome solutions.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.verbositySpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Level of console information. 0: None, 1: some information, 2: all the information", None))
#endif // QT_CONFIG(tooltip)
        self.label_22.setText("")
        self.label_5.setText(QCoreApplication.translate("mainWindow", u"Tolerance", None))
#if QT_CONFIG(tooltip)
        self.find_automatic_precission_Button.setToolTip(QCoreApplication.translate("mainWindow", u"Find the tolerance that best represents the load values for power flow", None))
#endif // QT_CONFIG(tooltip)
        self.find_automatic_precission_Button.setText(QCoreApplication.translate("mainWindow", u"Find", None))
#if QT_CONFIG(tooltip)
        self.max_iterations_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Maximum numberof iterations to use.</p><p><br/></p><p>Tipical values: </p><p>Newton Raphson: 5</p><p>Levenberg-Marquards: 20</p><p>Fast decoupled: 10</p><p>Others: 20</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_2.setText(QCoreApplication.translate("mainWindow", u"Solver", None))
#if QT_CONFIG(tooltip)
        self.tolerance_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Error tolerance of the method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tolerance_spinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
        self.label_11.setText(QCoreApplication.translate("mainWindow", u"Trust radius", None))
        self.label_70.setText("")
        self.label_71.setText(QCoreApplication.translate("mainWindow", u"PTDF / LODF", None))
        self.ptdf_correct_nonsense_values_checkBox.setText(QCoreApplication.translate("mainWindow", u"Correct nonsense values", None))
#if QT_CONFIG(tooltip)
        self.usePfValuesForAtcCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Use existing power flow values for the contingency initialization in the net transfer capacity and contingency simulations", None))
#endif // QT_CONFIG(tooltip)
        self.usePfValuesForAtcCheckBox.setText(QCoreApplication.translate("mainWindow", u"Use power flow values for initialization", None))
        self.ptdf_distributed_slack_checkBox.setText(QCoreApplication.translate("mainWindow", u"Distributed slack", None))
#if QT_CONFIG(tooltip)
        self.ptdf_threshold_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Threshold under which sensitivities are ignored when the PTDF is converted to sparse", None))
#endif // QT_CONFIG(tooltip)
        self.label_122.setText(QCoreApplication.translate("mainWindow", u"LODF threshold", None))
#if QT_CONFIG(tooltip)
        self.lodf_threshold_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Threshold under which sensitivities are ignored when the LODF is converted to sparse", None))
#endif // QT_CONFIG(tooltip)
        self.label_116.setText(QCoreApplication.translate("mainWindow", u"PTDF threshold", None))
        self.label_124.setText("")
#if QT_CONFIG(tooltip)
        self.helm_retry_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If the selected method does not converge, try a list of methods that may help</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.helm_retry_checkBox.setText(QCoreApplication.translate("mainWindow", u"Retry with other methods if failed", None))
        self.use_voltage_guess_checkBox.setText(QCoreApplication.translate("mainWindow", u"Use voltage guess", None))
#if QT_CONFIG(tooltip)
        self.ignore_single_node_islands_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If active, the islands of a single node are ignored.", None))
#endif // QT_CONFIG(tooltip)
        self.ignore_single_node_islands_checkBox.setText(QCoreApplication.translate("mainWindow", u"Ignore single node islands", None))
        self.label_50.setText("")
#if QT_CONFIG(tooltip)
        self.pf_three_phase_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If active, the power flow is run using the three-pahse unbalanced formulation composing 3x3 impedance matrices form the available database data.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pf_three_phase_checkBox.setText(QCoreApplication.translate("mainWindow", u"3-phase", None))
#if QT_CONFIG(tooltip)
        self.distributed_slack_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If active, the slack power is distributed among the generators according to their installed power &quot;Snom&quot;</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.distributed_slack_checkBox.setText(QCoreApplication.translate("mainWindow", u"Distributed slack", None))
#if QT_CONFIG(tooltip)
        self.control_q_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"General switch for reactive power limits control", None))
#endif // QT_CONFIG(tooltip)
        self.control_q_checkBox.setText(QCoreApplication.translate("mainWindow", u"Control Q limits", None))
#if QT_CONFIG(tooltip)
        self.control_tap_modules_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"General switch for branches tap module control", None))
#endif // QT_CONFIG(tooltip)
        self.control_tap_modules_checkBox.setText(QCoreApplication.translate("mainWindow", u"Control tap module", None))
#if QT_CONFIG(tooltip)
        self.control_tap_phase_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"General switch for branches tap phase control", None))
#endif // QT_CONFIG(tooltip)
        self.control_tap_phase_checkBox.setText(QCoreApplication.translate("mainWindow", u"Control tap phase", None))
#if QT_CONFIG(tooltip)
        self.control_remote_voltage_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"General switch for generators remote voltage control", None))
#endif // QT_CONFIG(tooltip)
        self.control_remote_voltage_checkBox.setText(QCoreApplication.translate("mainWindow", u"Control remote voltage", None))
#if QT_CONFIG(tooltip)
        self.orthogonalize_pf_controls_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If checked, the controls are adjusted to their closest tap", None))
#endif // QT_CONFIG(tooltip)
        self.orthogonalize_pf_controls_checkBox.setText(QCoreApplication.translate("mainWindow", u"Orthogonalize controls", None))
#if QT_CONFIG(tooltip)
        self.initialize_pf_angles_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If checked, the power flow solution is initialized with a linear (so called DC) power flow first", None))
#endif // QT_CONFIG(tooltip)
        self.initialize_pf_angles_checkBox.setText(QCoreApplication.translate("mainWindow", u"Initialize angles", None))
        self.label_54.setText("")
#if QT_CONFIG(tooltip)
        self.temperature_correction_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Correct the branches resistance using the temperature", None))
#endif // QT_CONFIG(tooltip)
        self.temperature_correction_checkBox.setText(QCoreApplication.translate("mainWindow", u"Apply temperature correction", None))
        self.apply_impedance_tolerances_checkBox.setText(QCoreApplication.translate("mainWindow", u"Apply impedance tolerances", None))
        self.label_56.setText("")
#if QT_CONFIG(tooltip)
        self.addPowerFlowReportCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Add a results report in the logs", None))
#endif // QT_CONFIG(tooltip)
        self.addPowerFlowReportCheckBox.setText(QCoreApplication.translate("mainWindow", u"Add report", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.pf_tab), QCoreApplication.translate("mainWindow", u"Pf", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.pf_tab), QCoreApplication.translate("mainWindow", u"Power flow settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.cpf_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Continuation power flow settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_8.setText(QCoreApplication.translate("mainWindow", u"Stop at", None))
        self.label_25.setText(QCoreApplication.translate("mainWindow", u"Refer to the NTC areas (Linear tab)", None))
        self.label_107.setText("")
        self.label_19.setText(QCoreApplication.translate("mainWindow", u"Now", None))
        self.start_vs_from_selected_radioButton.setText(QCoreApplication.translate("mainWindow", u"Use departure and target points from time series", None))
        self.atcRadioButton.setText(QCoreApplication.translate("mainWindow", u"Available transfer capacity", None))
        self.label_106.setText("")
        self.label_18.setText(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Lambda factor</p></body></html>", None))
        self.label_29.setText(QCoreApplication.translate("mainWindow", u"Max. Iterations", None))
        self.label_20.setText(QCoreApplication.translate("mainWindow", u"Target", None))
        self.label_108.setText("")
        self.label_74.setText("")
        self.label_46.setText(QCoreApplication.translate("mainWindow", u"Continuation power flow", None))
        self.label_67.setText(QCoreApplication.translate("mainWindow", u"Simulation mode", None))
        self.start_vs_from_default_radioButton.setText(QCoreApplication.translate("mainWindow", u"Increase system loading", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.cpf_tab), QCoreApplication.translate("mainWindow", u"Cpf", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.cpf_tab), QCoreApplication.translate("mainWindow", u"Continuation power flow related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.opf_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal power flow settings", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_3.setTitle(QCoreApplication.translate("mainWindow", u"Nonlinear settings", None))
#if QT_CONFIG(tooltip)
        self.label_129.setToolTip(QCoreApplication.translate("mainWindow", u"Interior point solver maximum number of iterations", None))
#endif // QT_CONFIG(tooltip)
        self.label_129.setText(QCoreApplication.translate("mainWindow", u"Iterations", None))
#if QT_CONFIG(tooltip)
        self.ips_initialize_with_pf_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Initialize the interior point OPF with the power flow solution", None))
#endif // QT_CONFIG(tooltip)
        self.ips_initialize_with_pf_checkBox.setText(QCoreApplication.translate("mainWindow", u"Initialize with power flow", None))
#if QT_CONFIG(tooltip)
        self.ips_iterations_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Number of iterations of the method", None))
#endif // QT_CONFIG(tooltip)
        self.label_130.setText("")
#if QT_CONFIG(tooltip)
        self.label_126.setToolTip(QCoreApplication.translate("mainWindow", u"Interior point solver tolerance", None))
#endif // QT_CONFIG(tooltip)
        self.label_126.setText(QCoreApplication.translate("mainWindow", u"Tolerance", None))
#if QT_CONFIG(tooltip)
        self.ips_tolerance_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Error tolerance of the method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ips_tolerance_spinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
#if QT_CONFIG(tooltip)
        self.label_125.setToolTip(QCoreApplication.translate("mainWindow", u"Interior point solver method", None))
#endif // QT_CONFIG(tooltip)
        self.label_125.setText(QCoreApplication.translate("mainWindow", u"IPS method", None))
#if QT_CONFIG(tooltip)
        self.ips_trust_radius_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Factor that multiplies each increment solution. </p><p>In practice this is used to slow down troublesome solutions.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_127.setToolTip(QCoreApplication.translate("mainWindow", u"Interior point trust radius", None))
#endif // QT_CONFIG(tooltip)
        self.label_127.setText(QCoreApplication.translate("mainWindow", u"Trust radius", None))
#if QT_CONFIG(tooltip)
        self.ips_control_Qlimits_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"General switch for reactive power limits control in the nonlinear optimal power flow", None))
#endif // QT_CONFIG(tooltip)
        self.ips_control_Qlimits_checkBox.setText(QCoreApplication.translate("mainWindow", u"Control Q limits", None))
        self.groupBox.setTitle(QCoreApplication.translate("mainWindow", u"Linear settings", None))
        self.label_10.setText(QCoreApplication.translate("mainWindow", u"MIP solver", None))
#if QT_CONFIG(tooltip)
        self.opfUnitCommitmentCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Apply unit commitment technique", None))
#endif // QT_CONFIG(tooltip)
        self.opfUnitCommitmentCheckBox.setText(QCoreApplication.translate("mainWindow", u"Unit commitment", None))
        self.label_132.setText("")
#if QT_CONFIG(tooltip)
        self.opf_time_grouping_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Choose the time grouping to possibly shorten the solution time.</p><p>This splits the time series by week, month, etc. and the subproblems are solved sequentially.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.mip_solver_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Choose the external mixed integer programming solver", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.fixOpfCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Fix infeasible problems and rey with the relaxed problem. Applies to OPF and NTC", None))
#endif // QT_CONFIG(tooltip)
        self.fixOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Fix infeasibilities and retry", None))
#if QT_CONFIG(tooltip)
        self.considerContingenciesOpfCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Consider the contingencies when dispatching", None))
#endif // QT_CONFIG(tooltip)
        self.considerContingenciesOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Compute contingencies", None))
        self.label_4.setText(QCoreApplication.translate("mainWindow", u"Time grouping", None))
#if QT_CONFIG(tooltip)
        self.save_mip_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>The program will save the MIP file in .lp format in the user GridCal folder before running a linear optimization study.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.save_mip_checkBox.setText(QCoreApplication.translate("mainWindow", u"Save MIP file", None))
        self.label_104.setText(QCoreApplication.translate("mainWindow", u"Contingency tolerance", None))
        self.label_103.setText(QCoreApplication.translate("mainWindow", u"Zone grouping", None))
#if QT_CONFIG(tooltip)
        self.opfContingencyToleranceSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"LODF matrix tolerance choosing contingencies", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.opfGEPCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Apply generation expansion planning", None))
#endif // QT_CONFIG(tooltip)
        self.opfGEPCheckBox.setText(QCoreApplication.translate("mainWindow", u"Generation expansion planning", None))
        self.label_73.setText(QCoreApplication.translate("mainWindow", u"Optimal Power Flow", None))
        self.groupBox_2.setTitle(QCoreApplication.translate("mainWindow", u"General settings", None))
        self.label_128.setText(QCoreApplication.translate("mainWindow", u"Verbose", None))
        self.label_42.setText(QCoreApplication.translate("mainWindow", u"Method", None))
#if QT_CONFIG(tooltip)
        self.lpf_solver_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Choose the optimal power flow method", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.ips_verbose_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Verbosity level", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.addOptimalPowerFlowReportCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Add a results report in the logs", None))
#endif // QT_CONFIG(tooltip)
        self.addOptimalPowerFlowReportCheckBox.setText(QCoreApplication.translate("mainWindow", u"Add report", None))
        self.label_133.setText("")
        self.opfMaximizeExcahngeCheckBox.setText(QCoreApplication.translate("mainWindow", u"Maximize area exchange", None))
        self.skipOpfGenerationLimitsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Skip generation limits", None))
        self.label_72.setText("")
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.opf_tab), QCoreApplication.translate("mainWindow", u"Opf", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.opf_tab), QCoreApplication.translate("mainWindow", u"Optimal power flow settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.ntc_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Net transfer capacity settings", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_5.setTitle(QCoreApplication.translate("mainWindow", u"Optimization", None))
#if QT_CONFIG(tooltip)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>This criteria springs from the ACER (Agency for the Cooperation for Energy Regulators).</p><p>It determines that a branch is only relevant to be considered in a NTC calculation if the flow due to the exchange is over a percentage (70%) </p><p><br/></p><p>A branch is monitored only if:</p><p>(branch_rate * 70%) / branch_alpha &lt;= total exchange rating</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setText(QCoreApplication.translate("mainWindow", u"Branch rating contribution (ACER)", None))
#if QT_CONFIG(tooltip)
        self.skipNtcGenerationLimitsCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"If activated, the generation limits are not considered", None))
#endif // QT_CONFIG(tooltip)
        self.skipNtcGenerationLimitsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Skip generation limits", None))
        self.trmSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MW", None))
#if QT_CONFIG(tooltip)
        self.consider_ntc_contingencies_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If checked, the NTC optimization will use the system declared contingencies", None))
#endif // QT_CONFIG(tooltip)
        self.consider_ntc_contingencies_checkBox.setText(QCoreApplication.translate("mainWindow", u"Consider constingencies", None))
#if QT_CONFIG(tooltip)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>A branch is monitored solely based on its contribution to the inter-area excahge sensitivity. Therefore a branch is selected if it's alpha value is greater than the set alpha %</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setText(QCoreApplication.translate("mainWindow", u"Branch exchange sensitivity (\u03b1)", None))
        self.ntcLoadRuleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
        self.label_26.setText("")
        self.label_36.setText("")
#if QT_CONFIG(tooltip)
        self.label_64.setToolTip(QCoreApplication.translate("mainWindow", u"Determine the branches that enter the optimization", None))
#endif // QT_CONFIG(tooltip)
        self.label_64.setText(QCoreApplication.translate("mainWindow", u"Branch monitoring selection criteria", None))
        self.label_105.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
#if QT_CONFIG(tooltip)
        self.ntcAlphaSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum exchange contribution (Alpha)", None))
#endif // QT_CONFIG(tooltip)
        self.ntcAlphaSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
#if QT_CONFIG(tooltip)
        self.label_231.setToolTip(QCoreApplication.translate("mainWindow", u"Transmission reliability margin (TRM)", None))
#endif // QT_CONFIG(tooltip)
        self.label_231.setText(QCoreApplication.translate("mainWindow", u"Transmission reliability margin (TRM)", None))
#if QT_CONFIG(tooltip)
        self.strict_ntc_formulation_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"More strict NTC Formulation: No slacks of any type and specific monitoring criteria", None))
#endif // QT_CONFIG(tooltip)
        self.strict_ntc_formulation_checkBox.setText(QCoreApplication.translate("mainWindow", u"Strict formulation", None))
        self.groupBox_4.setTitle(QCoreApplication.translate("mainWindow", u"General", None))
        self.label_30.setText(QCoreApplication.translate("mainWindow", u"Loading threshold to report", None))
        self.label_77.setText(QCoreApplication.translate("mainWindow", u"Transfer method", None))
        self.ntcReportLoadingThresholdSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
        self.label_97.setText("")
        self.groupBox_6.setTitle(QCoreApplication.translate("mainWindow", u"Linear", None))
        self.n1ConsiderationCheckBox.setText(QCoreApplication.translate("mainWindow", u"n-1 sensibility consideration", None))
        self.label_62.setText(QCoreApplication.translate("mainWindow", u"Transfer sensitivity threshold", None))
#if QT_CONFIG(tooltip)
        self.atcThresholdSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Threshold used to discard insensitive branches", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_96.setToolTip(QCoreApplication.translate("mainWindow", u"Select the solver in the OPF tab and the areas in the areas tab", None))
#endif // QT_CONFIG(tooltip)
        self.label_96.setText(QCoreApplication.translate("mainWindow", u"Net transfer capacity", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.ntc_tab), QCoreApplication.translate("mainWindow", u"Ntc", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.ntc_tab), QCoreApplication.translate("mainWindow", u"Network transfer capacity related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.nodal_capacity_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Nodal capacity hosting options", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_7.setTitle(QCoreApplication.translate("mainWindow", u"General", None))
#if QT_CONFIG(tooltip)
        self.label_143.setToolTip(QCoreApplication.translate("mainWindow", u"If the sense is positive, the algorithm will asses the maximum generation capacity in the selected nodes. If it is negative it will asses the maximum loading capacity in the selected nodes.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.label_143.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.label_143.setText(QCoreApplication.translate("mainWindow", u"Sense", None))
#if QT_CONFIG(tooltip)
        self.nodal_capacity_sense_SpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"If the sense is positive, the algorithm will asses the maximum generation capacity in the selected nodes. If it is negative it will asses the maximum loading capacity in the selected nodes.", None))
#endif // QT_CONFIG(tooltip)
        self.label_142.setText(QCoreApplication.translate("mainWindow", u"Method", None))
#if QT_CONFIG(tooltip)
        self.nodal_capacity_method_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Optimization method to use", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.nodal_capacity_method_comboBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.label_144.setText("")
        self.label_141.setText("")
#if QT_CONFIG(tooltip)
        self.label_140.setToolTip(QCoreApplication.translate("mainWindow", u"Select the solver in the OPF tab and the areas in the areas tab", None))
#endif // QT_CONFIG(tooltip)
        self.label_140.setText(QCoreApplication.translate("mainWindow", u"Nodal hosting capacity", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.nodal_capacity_tab), QCoreApplication.translate("mainWindow", u"Nhc", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.nodal_capacity_tab), QCoreApplication.translate("mainWindow", u"Nodal hosting capacity related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.transfer_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Area transfer settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_95.setText(QCoreApplication.translate("mainWindow", u"Transfer configuration", None))
        self.label_92.setText("")
        self.label_41.setText(QCoreApplication.translate("mainWindow", u"From", None))
        self.label_21.setText(QCoreApplication.translate("mainWindow", u"To", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.transfer_tab), QCoreApplication.translate("mainWindow", u"Txfr", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.transfer_tab), QCoreApplication.translate("mainWindow", u"Area, Zone, etc related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.contingencies_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Contingencies settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_151.setText(QCoreApplication.translate("mainWindow", u"Contingency filter", None))
        self.label_152.setText(QCoreApplication.translate("mainWindow", u"Filter by", None))
#if QT_CONFIG(tooltip)
        self.contingency_group_filter_listView.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p><span style=\" font-weight:700;\">Filter contingencies</span></p><p>This option allows you to only consider the contingencies that fall in ceratain groupings such as Area, Zone or Country. The filtering is performed based on the information stored in the Buses.</p><p>This is highly discouraged. We trully advise you to not to filter the contingencies and select All Contingencies. Use this feature at your own risk.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_123.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Dead band over the SRAP rating.</p><p>If greater than zero, the SRAP is investigated for values over the branch protections rating until the specified value.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_123.setText(QCoreApplication.translate("mainWindow", u"SRAP dead band", None))
        self.label_52.setText("")
        self.label_53.setText(QCoreApplication.translate("mainWindow", u"SRAP limit", None))
#if QT_CONFIG(tooltip)
        self.srap_revert_to_nominal_rating_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If checked the SRAP objective solution is the branch nominal rate. Otherwise the objective rating is the contingency rating.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.srap_revert_to_nominal_rating_checkBox.setText(QCoreApplication.translate("mainWindow", u"Revert to nominal rating", None))
#if QT_CONFIG(tooltip)
        self.use_srap_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Activate SRAP (Sistema de reducci\u00f3n autom\u00e1tica de potencia)</p><p>It is a mechanism that helps avoiding considering a contingency if it would be eventually resolved by nearby generation shifting.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.use_srap_checkBox.setText(QCoreApplication.translate("mainWindow", u"Use SRAP", None))
#if QT_CONFIG(tooltip)
        self.contingency_detailed_massive_report_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If checked, a massive posibly intractable report is generated.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.contingency_detailed_massive_report_checkBox.setText(QCoreApplication.translate("mainWindow", u"Detailed report", None))
#if QT_CONFIG(tooltip)
        self.srap_limit_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum overload power that is solvable using the SRAP technique.", None))
#endif // QT_CONFIG(tooltip)
        self.srap_limit_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MW", None))
        self.contingency_deadband_SpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" %", None))
#if QT_CONFIG(tooltip)
        self.label_27.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Amount of contingency loading with respect to the base situation loading that triggers the report of the contingency. This is specially useful when we want to avoig reporting contingencies that are not significant with respect to the base situation.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_27.setText(QCoreApplication.translate("mainWindow", u"Contingency dead band", None))
#if QT_CONFIG(tooltip)
        self.label_1322.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum number of generation nodes to participate in the SRAP", None))
#endif // QT_CONFIG(tooltip)
        self.label_1322.setText(QCoreApplication.translate("mainWindow", u"SRAP top N", None))
        self.label_119.setText(QCoreApplication.translate("mainWindow", u"Contingency engine", None))
        self.srap_deadband_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" %", None))
        self.label_109.setText("")
        self.label_117.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.contingencies_tab), QCoreApplication.translate("mainWindow", u"Con", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.contingencies_tab), QCoreApplication.translate("mainWindow", u"Contingencies related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.ml_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Machine-learning related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_31.setText("")
        self.label_121.setText(QCoreApplication.translate("mainWindow", u"Investment evaluation", None))
#if QT_CONFIG(tooltip)
        self.node_distances_elements_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum size of the group", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.node_distances_elements_spinBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.node_distances_elements_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" elements", None))
        self.label_89.setText(QCoreApplication.translate("mainWindow", u"Node grouping", None))
        self.internal_investment_methods_radioButton.setText(QCoreApplication.translate("mainWindow", u"Internal method", None))
        self.label_88.setText("")
#if QT_CONFIG(tooltip)
        self.cluster_number_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Number of clusters, this affects all the simulations that deal with clustering</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.cluster_number_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" Clusters", None))
        self.label_44.setText("")
        self.plugins_investment_methods_radioButton.setText(QCoreApplication.translate("mainWindow", u"Plugin method", None))
        self.label_7.setText("")
        self.label_153.setText(QCoreApplication.translate("mainWindow", u"Objective function", None))
        self.label_33.setText(QCoreApplication.translate("mainWindow", u"Number of clusters", None))
        self.label_93.setText(QCoreApplication.translate("mainWindow", u"Clustering", None))
#if QT_CONFIG(tooltip)
        self.node_distances_sigma_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"M\u00e1ximum standard deviation to determine the groups", None))
#endif // QT_CONFIG(tooltip)
        self.node_distances_sigma_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" \u03c3", None))
        self.label_61.setText(QCoreApplication.translate("mainWindow", u"Min. group size", None))
#if QT_CONFIG(tooltip)
        self.max_investments_evluation_number_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Number of maximum evaluations for the optimization methods", None))
#endif // QT_CONFIG(tooltip)
        self.max_investments_evluation_number_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" x number of investments", None))
        self.label_94.setText("")
        self.label_83.setText(QCoreApplication.translate("mainWindow", u"Method", None))
        self.label_38.setText(QCoreApplication.translate("mainWindow", u"Nodal distances", None))
        self.label_120.setText("")
        self.label_3.setText(QCoreApplication.translate("mainWindow", u"Method", None))
#if QT_CONFIG(tooltip)
        self.investment_evaluation_method_ComboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Select the investment evaluation method", None))
#endif // QT_CONFIG(tooltip)
        self.label_87.setText("")
        self.label_51.setText(QCoreApplication.translate("mainWindow", u"Maximum evaluations", None))
#if QT_CONFIG(tooltip)
        self.max_iterations_stochastic_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum number of samples", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.tolerance_stochastic_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Monte Carlo variance until stop", None))
#endif // QT_CONFIG(tooltip)
        self.tolerance_stochastic_spinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
#if QT_CONFIG(tooltip)
        self.cascading_islands_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Number of islands produced until the analysis stops", None))
#endif // QT_CONFIG(tooltip)
        self.label_78.setText("")
        self.label_47.setText(QCoreApplication.translate("mainWindow", u"Stochastic power flow", None))
        self.label_157.setText(QCoreApplication.translate("mainWindow", u"Samples", None))
        self.label_79.setText(QCoreApplication.translate("mainWindow", u"Cascading", None))
        self.label_156.setText("")
#if QT_CONFIG(tooltip)
        self.max_iterations_reliability_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Maximum number of Monte Carlo samples", None))
#endif // QT_CONFIG(tooltip)
        self.label_55.setText(QCoreApplication.translate("mainWindow", u"Method", None))
        self.label_99.setText("")
        self.label_138.setText("")
        self.label_28.setText(QCoreApplication.translate("mainWindow", u"Aditional islands until stop", None))
#if QT_CONFIG(tooltip)
        self.stochastic_pf_method_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Stochastic power flow method", None))
#endif // QT_CONFIG(tooltip)
        self.label_75.setText("")
        self.label_12.setText(QCoreApplication.translate("mainWindow", u"Voltage variance", None))
        self.label_13.setText(QCoreApplication.translate("mainWindow", u"Samples", None))
        self.label_100.setText(QCoreApplication.translate("mainWindow", u"Reliability", None))
        self.label_158.setText(QCoreApplication.translate("mainWindow", u"Method", None))
#if QT_CONFIG(tooltip)
        self.reliability_method_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Reliability evaluation method", None))
#endif // QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.ml_tab), QCoreApplication.translate("mainWindow", u"ML", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.ml_tab), QCoreApplication.translate("mainWindow", u"Machine learning related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.topology_tab.setToolTip(QCoreApplication.translate("mainWindow", u"Topology settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_80.setText("")
        self.label_81.setText(QCoreApplication.translate("mainWindow", u"Grid reduction", None))
        self.label_59.setText(QCoreApplication.translate("mainWindow", u"Select branch types to reduce", None))
        self.rxThresholdCheckBox.setText(QCoreApplication.translate("mainWindow", u"Filter by r+x under threshold", None))
#if QT_CONFIG(tooltip)
        self.rxThresholdSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Exponent of the threshold to use.</p><p>threshold = 1x10^-factor</p><p>i.e.</p><p>factor=3</p><p>threshold = 1e-3</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.rxThresholdSpinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
        self.label_84.setText("")
        self.label_85.setText(QCoreApplication.translate("mainWindow", u"Branch rating", None))
        self.label_34.setText(QCoreApplication.translate("mainWindow", u"Branch rating factor", None))
#if QT_CONFIG(tooltip)
        self.branch_rating_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Factor to aply to the branch calculated power to use as rating</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.rating_override_checkBox.setText(QCoreApplication.translate("mainWindow", u"override values", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.topology_tab), QCoreApplication.translate("mainWindow", u"Tplgy", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.topology_tab), QCoreApplication.translate("mainWindow", u"Topology related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.file_tab.setToolTip(QCoreApplication.translate("mainWindow", u"File settings", None))
#endif // QT_CONFIG(tooltip)
        self.file_information_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.label_131.setText(QCoreApplication.translate("mainWindow", u"Raw files", None))
#if QT_CONFIG(tooltip)
        self.saveResultsCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"If checked, the results are stored inside the gridcal file in a compressed format.", None))
#endif // QT_CONFIG(tooltip)
        self.saveResultsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Save results in .gridcal files", None))
        self.model_version_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.label_145.setText("")
        self.label_155.setText("")
        self.label_112.setText(QCoreApplication.translate("mainWindow", u"Export version", None))
        self.label_39.setText(QCoreApplication.translate("mainWindow", u"File path", None))
        self.label_115.setText(QCoreApplication.translate("mainWindow", u"File Information", None))
        self.label_136.setText("")
        self.user_name_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.grid_idtag_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.label_134.setText(QCoreApplication.translate("mainWindow", u"CGMES", None))
        self.label_102.setText("")
        self.label_139.setText(QCoreApplication.translate("mainWindow", u"Profiles to export", None))
#if QT_CONFIG(tooltip)
        self.cgmes_dc_as_hvdclines_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Converters and DC lines in CGMES are attempted to be converted to the simplified HvdcLine objects in GridCal</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.cgmes_dc_as_hvdclines_checkBox.setText(QCoreApplication.translate("mainWindow", u"Treat DC equipement as HvdcLines", None))
        self.cgmes_single_profile_per_file_checkBox.setText(QCoreApplication.translate("mainWindow", u"One file per profile", None))
#if QT_CONFIG(tooltip)
        self.selectCGMESBoundarySetButton.setToolTip(QCoreApplication.translate("mainWindow", u"Select the CGMES boundary set (single zip file)", None))
#endif // QT_CONFIG(tooltip)
        self.selectCGMESBoundarySetButton.setText(QCoreApplication.translate("mainWindow", u"Select", None))
#if QT_CONFIG(tooltip)
        self.cgmes_map_regions_like_raw_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If active the CGMEs mapping will be:</p><p>GeographicalRegion &lt;-&gt; Area</p><p>SubGeographicalRegion &lt;-&gt; Zone</p><p>Otherwise:</p><p>GeographicalRegion &lt;-&gt; Country</p><p>SubGeographicalRegion &lt;-&gt; Community</p><p><br/></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.cgmes_map_regions_like_raw_checkBox.setText(QCoreApplication.translate("mainWindow", u"Map regions like raw files", None))
        self.label_135.setText(QCoreApplication.translate("mainWindow", u"Export version", None))
        self.label_90.setText(QCoreApplication.translate("mainWindow", u"Boundary set", None))
#if QT_CONFIG(tooltip)
        self.cgmes_boundary_set_label.setToolTip(QCoreApplication.translate("mainWindow", u"Path of the CGMES default boundary set (single zip file)", None))
#endif // QT_CONFIG(tooltip)
        self.cgmes_boundary_set_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.label_137.setText("")
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.file_tab), QCoreApplication.translate("mainWindow", u"File", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.file_tab), QCoreApplication.translate("mainWindow", u"File related settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.server_tableView.setToolTip(QCoreApplication.translate("mainWindow", u"Server jobs currently on cue", None))
#endif // QT_CONFIG(tooltip)
        self.label_146.setText(QCoreApplication.translate("mainWindow", u"Url", None))
#if QT_CONFIG(tooltip)
        self.server_url_lineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"Type here the GridCal server URL (ask your IT team)", None))
#endif // QT_CONFIG(tooltip)
        self.label_147.setText(QCoreApplication.translate("mainWindow", u"Port", None))
#if QT_CONFIG(tooltip)
        self.server_port_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Type here the GridCal server Port (ask your IT team)", None))
#endif // QT_CONFIG(tooltip)
        self.label_148.setText(QCoreApplication.translate("mainWindow", u"Password", None))
#if QT_CONFIG(tooltip)
        self.server_pwd_lineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"Type here the GridCal server password (ask your IT team)", None))
#endif // QT_CONFIG(tooltip)
        self.secureServerConnectionCheckBox.setText(QCoreApplication.translate("mainWindow", u"Secure", None))
        self.server_status_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_5), QCoreApplication.translate("mainWindow", u"Server", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SettingsTab), QCoreApplication.translate("mainWindow", u"Settings", None))
        self.progress_label.setText("")
#if QT_CONFIG(tooltip)
        self.cancelButton.setToolTip(QCoreApplication.translate("mainWindow", u"Cancel process", None))
#endif // QT_CONFIG(tooltip)
        self.cancelButton.setText("")
        self.menuProject.setTitle(QCoreApplication.translate("mainWindow", u"File", None))
        self.menuAbout.setTitle(QCoreApplication.translate("mainWindow", u"Help", None))
        self.menuActions.setTitle(QCoreApplication.translate("mainWindow", u"Actions", None))
        self.menuSimulations.setTitle(QCoreApplication.translate("mainWindow", u"Simulations", None))
        self.menuModel.setTitle(QCoreApplication.translate("mainWindow", u"Model", None))
        self.menuDiagrams.setTitle(QCoreApplication.translate("mainWindow", u"Diagram", None))
        self.menuplugins.setTitle(QCoreApplication.translate("mainWindow", u"plugins", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("mainWindow", u"toolBar", None))
    # retranslateUi

